[{"/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js":"1","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx":"2","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx":"3","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFunctionTab.jsx":"4","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx":"5","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Mobile_Burger.jsx":"6","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFolderTab.jsx":"7","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx":"8","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js":"9","/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx":"10","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx":"11","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx":"12","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx":"13","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx":"14","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js":"15","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx":"16","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx":"17","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx":"18","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSChannel.jsx":"19","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js":"20","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx":"21","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx":"22","/Users/kevinzhang/Documents/Taggy/client/app/src/index.js":"23","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx":"24","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js":"25","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Landing.jsx":"26","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx":"27","/Users/kevinzhang/Documents/Taggy/client/app/src/data.js":"28","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx":"29","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSSearch.jsx":"30","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/SearchRSS.jsx":"31","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx":"32","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx":"33","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx":"34","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Explore.jsx":"35","/Users/kevinzhang/Documents/Taggy/client/app/src/config.js":"36","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx":"37","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/GraphBoard.jsx":"38","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx":"39","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx":"40","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today.jsx":"41","/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js":"42","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx":"43","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js":"44","/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js":"45","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx":"46","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx":"47","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx":"48"},{"size":1665,"mtime":1607331654716,"results":"49","hashOfConfig":"50"},{"size":5090,"mtime":1608731035688,"results":"51","hashOfConfig":"50"},{"size":2610,"mtime":1607771712223,"results":"52","hashOfConfig":"50"},{"size":2676,"mtime":1608730712040,"results":"53","hashOfConfig":"50"},{"size":3907,"mtime":1608960678662,"results":"54","hashOfConfig":"50"},{"size":883,"mtime":1608713043887,"results":"55","hashOfConfig":"50"},{"size":12023,"mtime":1608713116897,"results":"56","hashOfConfig":"50"},{"size":2737,"mtime":1608731102549,"results":"57","hashOfConfig":"50"},{"size":362,"mtime":1606271805707,"results":"58","hashOfConfig":"50"},{"size":927,"mtime":1609037226286,"results":"59","hashOfConfig":"50"},{"size":18513,"mtime":1608565576223,"results":"60","hashOfConfig":"50"},{"size":804,"mtime":1608002261938,"results":"61","hashOfConfig":"50"},{"size":5720,"mtime":1608995846186,"results":"62","hashOfConfig":"50"},{"size":1473,"mtime":1608982552347,"results":"63","hashOfConfig":"50"},{"size":751,"mtime":1607331654733,"results":"64","hashOfConfig":"50"},{"size":2493,"mtime":1608979985462,"results":"65","hashOfConfig":"50"},{"size":4348,"mtime":1609039312530,"results":"66","hashOfConfig":"50"},{"size":4987,"mtime":1608731585373,"results":"67","hashOfConfig":"50"},{"size":5302,"mtime":1608732472632,"results":"68","hashOfConfig":"50"},{"size":19398,"mtime":1608732427699,"results":"69","hashOfConfig":"50"},{"size":15243,"mtime":1609044205624,"results":"70","hashOfConfig":"50"},{"size":2618,"mtime":1609043800125,"results":"71","hashOfConfig":"50"},{"size":825,"mtime":1607958770838,"results":"72","hashOfConfig":"50"},{"size":383,"mtime":1607912844646,"results":"73","hashOfConfig":"50"},{"size":429,"mtime":1607912185778,"results":"74","hashOfConfig":"50"},{"size":1308,"mtime":1608523151735,"results":"75","hashOfConfig":"50"},{"size":2663,"mtime":1607510955146,"results":"76","hashOfConfig":"50"},{"size":1041,"mtime":1607331654707,"results":"77","hashOfConfig":"50"},{"size":6108,"mtime":1608981065497,"results":"78","hashOfConfig":"50"},{"size":4142,"mtime":1608962071406,"results":"79","hashOfConfig":"50"},{"size":3628,"mtime":1608965393533,"results":"80","hashOfConfig":"50"},{"size":5244,"mtime":1608612486017,"results":"81","hashOfConfig":"50"},{"size":7563,"mtime":1608606648012,"results":"82","hashOfConfig":"50"},{"size":6547,"mtime":1608977386409,"results":"83","hashOfConfig":"50"},{"size":7119,"mtime":1608568675426,"results":"84","hashOfConfig":"50"},{"size":196,"mtime":1607662167143,"results":"85","hashOfConfig":"50"},{"size":208,"mtime":1607331654631,"results":"86","hashOfConfig":"50"},{"size":1569,"mtime":1608606688024,"results":"87","hashOfConfig":"50"},{"size":4111,"mtime":1608551567525,"results":"88","hashOfConfig":"50"},{"size":15803,"mtime":1608607239517,"results":"89","hashOfConfig":"50"},{"size":7048,"mtime":1608980110354,"results":"90","hashOfConfig":"50"},{"size":1340,"mtime":1607331654713,"results":"91","hashOfConfig":"50"},{"size":2406,"mtime":1608991943755,"results":"92","hashOfConfig":"50"},{"size":1886,"mtime":1607952733421,"results":"93","hashOfConfig":"50"},{"size":298,"mtime":1607331654722,"results":"94","hashOfConfig":"50"},{"size":2980,"mtime":1608994689798,"results":"95","hashOfConfig":"50"},{"size":689,"mtime":1607408024999,"results":"96","hashOfConfig":"50"},{"size":1096,"mtime":1607331654660,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hszq7i",{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"115"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"115"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"115"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"172"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"115"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"196"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"115"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"115"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"115"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx",["229","230","231","232","233"],"import React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { local, ec2Url } from \"../../config.js\";\nimport styles from \"./FindRSS.module.css\";\nimport * as RSSParser from \"rss-parser\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { GETRSSRESPONSE } from \"../../redux/actions\";\nimport Axios from \"axios\";\nexport default function FindRSS(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const notify_fail = () =>\n    toast.warn(<div>Sorry....sth goes wrong, please try again later</div>, {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function requestRSS(url) {\n    setLoading(true);\n    if (url.includes(\"medium.com/@\")) {\n      console.log(url);\n\n      console.log(\" medium member\");\n      url =\n        \"https://medium.com/feed/@\" + url.replace(\"https://medium.com/@\", \"\");\n    } else if (url.includes(\"medium.com/\")) {\n      url = \"https://medium.com/feed/\" + url.replace(\"https://medium.com/\", \"\");\n    } else if (url.includes(\"youtube.com/channel\")) {\n      url =\n        \"https://www.youtube.com/feeds/videos.xml?channel_id=\" +\n        url.replace(\"https://www.youtube.com/channel/\", \"\");\n    }\n    const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n    let parser = new RSSParser({\n      customFields: {\n        item: [[\"media:group\", \"media\", { keepArray: true }]],\n      },\n    });\n    console.log(\"start to send the requett\");\n    let starttime = Date.now();\n    parser.parseURL(CORS_PROXY + url, function (err, feed) {\n      if (err) {\n        console.log(\"error, refetch from nbackend\");\n        fetch(\"https://www.shopcard.site/route/\" + \"rss/fetch\", {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify({ url: url }),\n        }).then(function (response) {\n          if (response.status !== 200) {\n            console.log(\"sth goes wrong in backend \");\n            notify_fail();\n          } else {\n            response.json().then((data) => {\n              dispatch(GETRSSRESPONSE(data.rss, url));\n              setLoading(false);\n              props.showChannel();\n            });\n          }\n        });\n      } else {\n        console.log(\n          \"get feed, it took\",\n          (Date.now() - starttime) / 1000,\n          \"seconds\"\n        );\n        // ==================== speed testing\n        // let starttime2 = Date.now();\n        // console.log(\"start to send the requett to back end\");\n        // fetch(\"https://www.shopcard.site/route/\" + \"rss/fetch\", {\n        //   method: \"post\",\n        //   headers: {\n        //     \"Content-Type\": \"application/json\",\n        //   },\n        //   body: JSON.stringify({ url: url }),\n        // }).then(function (response) {\n        //   if (response.status !== 200) {\n        //     console.log(\"sth goes wrong in backend \");\n        //   } else {\n        //     response.json().then((data) => {\n        //       console.log(\n        //         \"it tooks\",\n        //         (Date.now() - starttime2) / 1000,\n        //         \"seconds\"\n        //       );\n        //       dispatch(GETRSSRESPONSE(data.rss, url));\n        //       setLoading(false);\n        //       props.showChannel();\n        //     });\n        //   }\n        // });\n        // upper are speed testing\n        console.log(feed);\n        props.showChannel();\n        console.log(feed.title);\n        dispatch(GETRSSRESPONSE(feed, url));\n        setLoading(false);\n        feed.items.forEach(function (entry) {\n          console.log(entry.title + \":\" + entry.link);\n        });\n      }\n    });\n  }\n\n  return (\n    <div className={styles.addArticle}>\n      <form\n        className={styles.addForm}\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (user) {\n            requestRSS(reqUrl);\n          }\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"input\"\n          className={styles.input}\n          value={reqUrl}\n          placeholder=\"\"\n          onChange={(e) => setReqUrl(e.currentTarget.value)}\n        />\n        <button type=\"submit\" className={styles.add}>\n          Search\n        </button>\n      </form>\n      {loading ? <LinearProgress className={styles.progress} /> : \"\"}\n      <br />\n      <div class={styles.addTitle}>\n        Now supporting general rss link, youtube and medium channel/member's\n        article\n      </div>\n      <div class={styles.addTitle}>e.g.</div>\n\n      <div>https://www.youtube.com/channel/UCcabW7890RKJzL968QWEykA</div>\n      <div>https://medium.com/appworks-school</div>\n      <div>https://medium.com/@lindingchi</div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"../SideTab/Folder\";\n\nexport default function GroupFolderSub(props) {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function showArticleFolders(folders) {\n    console.log(folders);\n    let articleFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        console.log(folders[i].tags);\n        articleFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"#5B5B5B\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {\n                  console.log(folders[i].id);\n                  // dispatch(SWITCHARTICLE(folders[i].id));\n                }}\n              >\n                <Folder\n                  user={user}\n                  folderTags={folders[i].tags}\n                  key={folders[i].id}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return articleFolderList;\n  }\n  let folderList = showArticleFolders(props.folders);\n  return folderList;\n}\n",["251","252"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFunctionTab.jsx",["253","254","255","256","257","258","259"],"import styles from \"./MobileFunctionTab.module.css\";\nimport logo from \"../../img/taggy_logo_3x.png\";\nimport { Link } from \"react-router-dom\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\nimport HomeWorkIcon from \"@material-ui/icons/HomeWork\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { auth } from \"../../firebase.js\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nexport default function FunctionTab(props) {\n  return (\n    <div className={styles.mobileFunctionTabWrapper}>\n      <div className={styles.mobileFunctionTab}>\n        <div className={styles.mobileIconWrapper}>\n          <Link to={\"/home\"}>\n            <HomeIcon\n              fontSize=\"small\"\n              style={\n                props.focus === \"home\"\n                  ? { color: \"#FFFFFF\" }\n                  : { color: \"#747474\" }\n              }\n            />\n            <div className={styles.title}>Home</div>\n          </Link>\n          <Link to={\"/home/channels\"}>\n            <ExploreIcon\n              fontSize=\"small\"\n              style={\n                props.focus === \"channels\"\n                  ? { color: \"#FFFFFF\" }\n                  : { color: \"#747474\" }\n              }\n            />\n            <div className={styles.title}>Channels</div>\n          </Link>\n          <Link to={\"/home/myfeeds\"}>\n            <RssFeedIcon\n              fontSize=\"small\"\n              style={\n                props.focus === \"myfeeds\"\n                  ? { color: \"#FFFFFF\" }\n                  : { color: \"#747474\" }\n              }\n            />\n            <div className={styles.title}>Feeds</div>\n          </Link>\n          <Link to={\"/board\"}>\n            <InboxIcon\n              fontSize=\"small\"\n              style={\n                props.focus === \"board\"\n                  ? { color: \"#FFFFFF\" }\n                  : { color: \"#747474\" }\n              }\n            />\n            <div className={styles.title}>Board</div>\n          </Link>\n\n          <Link to={\"/group\"}>\n            <PeopleAltIcon\n              fontSize=\"small\"\n              style={\n                props.focus === \"group\"\n                  ? { color: \"#FFFFFF\" }\n                  : { color: \"#747474\" }\n              }\n            />\n            <div className={styles.title}>Group</div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["260","261"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx",["262","263","264","265","266"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Mobile_Burger.jsx",[],["267","268"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFolderTab.jsx",["269","270","271","272"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport AddArticle from \"../AddArticle\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE, INITARTICLEFOLDERS } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport Folder from \"./Folder\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n    textAlign: \"left\",\n    padding: \"0px\",\n    flexGrow: 1,\n    maxWidth: 200,\n    marginBottom: \"15px\",\n  },\n});\n\nexport default function FolderTab(props) {\n  const itemstyle = makeStyles({\n    root: {\n      paddingLeft: \"25px\",\n      color: \"#B5B5B5\",\n      maxWidth: 200,\n      marginBottom: \"5px\",\n    },\n  });\n  const classes = useStyles();\n  const itemStyle = itemstyle();\n  const dispatch = useDispatch();\n  const [addArticle, setAddArticle] = useState(false);\n  const [tabChange, setTabChange] = useState(\"\");\n  const [editFolder, setEditFolder] = useState(false);\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n\n  const articleFolders = useSelector((state) => {\n    console.log(state);\n    return state.articleReducer.articleFolders;\n  });\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      dispatch(INITARTICLEFOLDERS(newArticleFolders));\n\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      dispatch(INITARTICLEFOLDERS(newArticleFolders));\n    }\n  }\n\n  useEffect(() => {\n    console.log(tabChange);\n    function getArticleFolders() {\n      if (user) {\n        app\n          .getMemberArticleFolders(user.uid)\n          .then((articleFolders) => {\n            console.log(articleFolders);\n            dispatch(INITARTICLEFOLDERS(articleFolders));\n\n            return articleFolders;\n          })\n          .then(async (articleFolders) => {\n            let tempFolderList = [];\n            for (let i = 0; i < articleFolders.length; i++) {\n              let tags = await app.getMemberFolderTags(articleFolders[i].id);\n              console.log(tags);\n              tempFolderList.push({ ...articleFolders[i], tags: tags });\n            }\n            console.log(tempFolderList);\n            return tempFolderList;\n          })\n          .then((newFolder) => {\n            console.log(newFolder);\n            dispatch(INITARTICLEFOLDERS(newFolder));\n          });\n      }\n    }\n    getArticleFolders();\n  }, [user, tabChange]);\n\n  function showArticleFolders(folders) {\n    let articleFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        articleFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                className={itemStyle.root}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"#B5B5B5\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {\n                  console.log(folders[i].id);\n                  // dispatch(SWITCHARTICLE(folders[i].id));\n                }}\n              >\n                <Folder\n                  user={user}\n                  folderTags={folders[i].tags}\n                  key={folders[i].id}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return articleFolderList;\n  }\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      })\n      .then(() => {\n        setTabChange(tabChange + 1);\n      });\n  }\n  const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.mobileFolderTabWrapper}>\n      <div className={styles.mobileFolderTab}>\n        <Link to={\"/board\"}>\n          <div className={styles.sectionTitle}>My Board</div>\n          <div\n            className={styles.importWrapper}\n            onClick={() => {\n              setAddArticle(true);\n            }}\n          >\n            <AddCircleIcon style={{ fontSize: 20, color: \"white\" }} />\n            <div className={styles.importTitle}>Import Article</div>\n          </div>\n          <TreeView\n            className={classes.root}\n            defaultExpanded={[\"\"]}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            <div\n              className={styles.keyTitleWrapper}\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            >\n              <DescriptionIcon style={{ fontSize: 20 }} />\n              <div className={styles.keyTitle}>All Articles</div>\n            </div>\n\n            <div className={styles.tagWrapper}>\n              <div className={styles.tag}>Tags</div>\n              <SettingsIcon\n                onClick={() => {\n                  setEditFolder(true);\n                }}\n                className={styles.setting}\n                fontSize=\"small\"\n                style={{ color: \"#b2b2b2\" }}\n              />\n            </div>\n            <DragDropContext onDragEnd={onDragEnd}>\n              {articleFolderList}\n            </DragDropContext>\n          </TreeView>\n          {addArticle\n            ? createPortal(\n                <div className={styles.popup}>\n                  <div\n                    className={styles.blur}\n                    onClick={() => {\n                      setAddArticle(false);\n                    }}\n                  ></div>\n                  <AddArticle\n                    user={user}\n                    close={() => {\n                      setAddArticle(false);\n                    }}\n                  />\n                </div>,\n                document.body\n              )\n            : \"\"}\n          {editFolder\n            ? createPortal(\n                <div className={styles.popup}>\n                  <div\n                    className={styles.blur}\n                    onClick={() => {\n                      setEditFolder(false);\n                    }}\n                  ></div>\n                  <div className={styles.addFolder}>\n                    <div className={styles.addTitle}>Add New Folder</div>\n                    <div className={styles.addSubTitle}>\n                      Create folder for the tags you created\n                    </div>\n                    <form id=\"addForm\" action=\"\">\n                      <input\n                        className={styles.input}\n                        type=\"text\"\n                        placeholder=\"Folder Name\"\n                        value={addFolderInput}\n                        onChange={(e) => {\n                          setAddFolderInput(e.target.value);\n                        }}\n                      />\n                      <button\n                        type=\"submit\"\n                        className={styles.saveBtn}\n                        form=\"addForm\"\n                        onClick={() => {\n                          if (user) {\n                            addArticleFolder(addFolderInput, user.uid);\n                            setEditFolder(false);\n                          } else {\n                            alert(\"Please login to add folder!\");\n                          }\n                        }}\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditFolder(false);\n                        }}\n                        className={styles.cancelBtn}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n                </div>,\n                document.body\n              )\n            : \"\"}\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx",["273","274","275"],"import styles from \"./AddArticle.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { localUrl, ec2Url } from \"../config.js\";\nimport { style } from \"d3\";\n\nexport default function AddArticle(props) {\n  const [loading, setLoading] = useState(false);\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const notify_fail = () =>\n    toast.warn(<div>Sorry....sth goes wrong, please try again later</div>, {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  function postDataToServer(\n    url,\n    data = {\n      url: \"www.sylish.com\",\n      uid: \"12344\",\n    }\n  ) {\n    setLoading(true);\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          notify_fail();\n          return;\n        } else {\n          response.json().then(function (data) {\n            if (data.msg === \"data sucessfully save in backend\") {\n              setTimeout(props.close, 2500);\n            } else {\n            }\n          });\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n        notify_fail();\n      });\n  }\n  return (\n    <div className={styles.addArticle}>\n      <div className={styles.title}>Import article </div>\n      <div className={styles.description}>\n        Enter the url, we would clip and save the website content\n      </div>\n      <input\n        placeholder=\"https://www.....\"\n        type=\"text\"\n        name=\"input\"\n        className={styles.input}\n        value={reqUrl}\n        onChange={(e) => setReqUrl(e.currentTarget.value)}\n      />\n      <button\n        type=\"submit\"\n        className={styles.add}\n        onClick={(e) => {\n          if (user) {\n            e.preventDefault();\n            postDataToServer(ec2Url, {\n              url: reqUrl,\n              uid: user.uid,\n            });\n          }\n        }}\n      >\n        Import\n      </button>\n      {/* <button className={styles.cancel} onClick={props.close}>\n        Cancel\n      </button> */}\n\n      <br />\n      <br />\n      {loading ? <LinearProgress /> : \"\"}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx",["276","277","278","279"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx",["280","281","282","283","284","285","286","287","288"],"import { useLocation, useHistory } from \"react-router-dom\";\nimport React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db, CheckFirebaseUserStatus } from \"../../firebase.js\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport styles from \"../../css/Article.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport ReactQuill from \"react-quill\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useSelector } from \"react-redux\";\nimport ChromeReaderModeIcon from \"@material-ui/icons/ChromeReaderMode\";\nimport firebase from \"firebase/app\";\nimport \"react-quill/dist/quill.snow.css\";\nexport default function Article() {\n  console.log(\"rerender\");\n  const [showNote, setShowNote] = useState(false);\n  const [highLightOn, setHighLightOn] = useState(false);\n\n  const lightOn = useRef(highLightOn);\n  let [articleLoaded, setArticleLoaded] = useState(false);\n  let [highLights, setHighLights] = useState([]);\n  let [tags, setTags] = useState({});\n  let [note, setNote] = useState(\"\");\n  let [article, setArticle] = useState({});\n\n  const [renderArticle, setRenderArticle] = useState(article.readerHtml);\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n  let id = params.get(\"id\");\n  let user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  console.log(highLightOn);\n  console.log(lightOn.current);\n  const customStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      background: \"black\",\n      borderBottom: \"1px solid gray\",\n      color: \"white\",\n      padding: 10,\n    }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? null\n          : isSelected\n          ? data.color\n          : isFocused\n          ? \"#dcdcdc\"\n          : null,\n        color: isFocused ? \"#39382e\" : \"#dcdcdc\",\n\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n        \":active\": {\n          ...styles[\":active\"],\n          backgroundColor: !isDisabled && (isSelected ? data.color : \"green\"),\n        },\n      };\n    },\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"#121212\",\n      minWidth: \"300px\",\n    }),\n  };\n  useEffect(() => {\n    if (user) {\n      console.log(\"useeffect run\");\n\n      app.initArticleTags(id, user.uid).then((articleTagSelection) => {\n        console.log(articleTagSelection);\n        setTags(articleTagSelection);\n      });\n    }\n  }, [user]);\n  function handleChange(newValue, actionMeta) {\n    switch (actionMeta.action) {\n      case \"select-option\":\n        console.log(\"select option!\");\n        app.inputTag(id, user.uid, actionMeta.option.label);\n        setTags({ ...tags, values: newValue });\n        break;\n      case \"remove-value\":\n        app.deleteTagFromArticle(id, user.uid, actionMeta.removedValue.tagId);\n        setTags({ ...tags, values: newValue });\n        break;\n      default:\n        console.group(\"Value Changed\");\n        console.log(\"newvalueis \", newValue);\n\n        console.dir(`action: ${actionMeta.action}`);\n        console.dir(actionMeta.removedValue);\n        console.groupEnd();\n    }\n  }\n\n  function handleCreate(inputValue) {\n    console.group(\"Option created\");\n\n    console.log(tags);\n    app.inputTag(id, user.uid, inputValue);\n    setTags({\n      options: [...tags.options, { label: inputValue, value: inputValue }],\n      values: [...tags.values, { label: inputValue, value: inputValue }],\n    });\n    console.log(tags);\n    console.groupEnd();\n  }\n  useEffect(() => {\n    console.warn(\"highLight Init\");\n    if (articleLoaded && article.highLight) {\n      initAricleHighLight(article.highLight);\n    }\n  }, [articleLoaded]);\n  useEffect(() => {\n    let unsubscribe;\n    let unsubscribeNote;\n    function getArticles() {\n      db.collection(\"Articles\")\n        .doc(id)\n        .get()\n        .then(function (doc) {\n          console.log(\"hihi\");\n          console.log(doc.data());\n          if (doc.data() !== undefined) {\n            setArticle({\n              title: doc.data().title,\n              link: doc.data().link,\n              highLight: doc.data().highLight,\n              readerHtml: doc.data().readerHtml,\n            });\n            setRenderArticle(doc.data().readerHtml);\n            setArticleLoaded(true);\n          }\n        });\n    }\n    function noteUpdateListener(id) {\n      unsubscribeNote = db\n        .collection(\"Articles\")\n        .doc(id)\n        .onSnapshot((doc) => {\n          if (doc.data().note) {\n            var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n            console.log(source, \" data: \", doc.data().note);\n            if (doc.data().note !== note) {\n              setNote(doc.data().note);\n            }\n          }\n        });\n    }\n    noteUpdateListener(id);\n    getArticles();\n    return () => {\n      unsubscribeNote();\n    };\n  }, []);\n\n  function uploadNote(input) {\n    db.collection(\"Articles\")\n      .doc(id)\n      .update({\n        note: input,\n      })\n      .then(() => {\n        console.log(\"save!\");\n      });\n  }\n\n  function findIndexInArticle(\n    articleString,\n    startIndex,\n    startTextContent,\n    endIndex,\n    endTextContent\n  ) {\n    let encodedStart = startTextContent.replace(\"&\", \"&amp;\");\n    let encodedEnd = endTextContent.replace(\"&\", \"&amp;\");\n    let articleStart = articleString.indexOf(encodedStart) + startIndex;\n    let articleStartTail =\n      articleString.indexOf(encodedStart) + encodedStart.length;\n    let articleEnd = articleString.indexOf(encodedEnd) + endIndex;\n    let articleEndHead = articleString.indexOf(encodedEnd);\n    return {\n      articleStart: articleStart,\n      articleStartTail: articleStartTail,\n      articleEnd: articleEnd,\n      articleEndHead: articleEndHead,\n    };\n  }\n\n  function saveHighLightToDB(\n    textSummary,\n    textSlice,\n    highLightId,\n    uid,\n    articleId\n  ) {\n    db.collection(\"Articles\")\n      .doc(articleId)\n      .update({\n        highLight: firebase.firestore.FieldValue.arrayUnion({\n          id: highLightId,\n          textSlice: textSlice,\n          uid: uid,\n          text: textSummary,\n        }),\n      });\n  }\n  function findTextAddSpan(targetText, hightLightId, tempRenderArticle) {\n    console.warn(targetText);\n    var encodedText = targetText.replace(\"&\", \"&amp;\");\n    let indexStart = tempRenderArticle.indexOf(encodedText);\n    console.log(indexStart);\n    let indexEnd = indexStart + targetText.length;\n    if (indexStart !== -1 && indexStart !== 0) {\n      let temp =\n        tempRenderArticle.substr(0, indexStart) +\n        `<span class=highLighter data-id=\"${hightLightId}\">` +\n        tempRenderArticle.substr(indexStart, targetText.length) +\n        `</span><input z=\"${hightLightId}\">` +\n        tempRenderArticle.substr(indexEnd, article.readerHtml.length);\n\n      tempRenderArticle = temp;\n    }\n    return tempRenderArticle;\n  }\n  function initAricleHighLight(highLight) {\n    let tempRenderArticle = article.readerHtml;\n    highLight.forEach((item) => {\n      item.textSlice.forEach((textSlice) => {\n        tempRenderArticle = findTextAddSpan(\n          textSlice,\n          item.id,\n          tempRenderArticle\n        );\n      });\n    });\n    console.error(renderArticle.search(\"<span class=highLighter\"));\n\n    setHighLights(highLight);\n    setRenderArticle(tempRenderArticle);\n  }\n\n  function handleMouseUp() {\n    console.log(lightOn.current);\n    if (lightOn.current) {\n      var selection = window.getSelection();\n      let tempRenderArticle = renderArticle;\n      let dom = selection.getRangeAt(0).cloneContents();\n      let allTextSlice = [];\n      let textSummary = dom.textContent;\n      console.log(dom);\n      console.log(dom.textContent);\n      console.log(dom.children);\n      console.log([...dom.children]);\n\n      [...dom.children].forEach((child) => {\n        console.log(child.children);\n        console.log(child.textContent);\n      });\n\n      // console.dir(selection.anchorNode);\n      // console.dir(selection.anchorNode.nextSibling);\n      // let sibiling = selection.anchorNode.nextSibling;\n      // console.log(sibiling);\n      // console.log(\n      //   selection.anchorOffset,\n      //   selection.focusOffset - 1,\n      //   selection.anchorNode.textContent,\n      //   selection.focusNode.textContent\n      // );\n\n      let {\n        articleStart,\n        articleEnd,\n        articleStartTail,\n        articleEndHead,\n      } = findIndexInArticle(\n        renderArticle,\n        selection.anchorOffset,\n        selection.anchorNode.textContent,\n        selection.focusOffset,\n        selection.focusNode.textContent\n      );\n\n      if (articleStart !== articleEnd) {\n        if (\n          selection.anchorNode.textContent ===\n            selection.focusNode.textContent &&\n          false\n        ) {\n          console.log(\"same node\");\n          // console.log(renderArticle.substr(0, articleStart));\n          // console.log(\n          //   renderArticle.substr(articleStart, articleEnd - articleStart)\n          // );\n          // // console.log(renderArticle.substr(articleEnd, renderArticle.length));\n          let tempArticle =\n            renderArticle.substr(0, articleStart) +\n            \"<span class=highLighter >\" +\n            renderArticle.substr(articleStart, articleEnd - articleStart) +\n            \"</span>\" +\n            renderArticle.substr(articleEnd, renderArticle.length);\n          // // console.log(tempArticle);\n          setRenderArticle(tempArticle);\n        } else {\n          console.log(\"cross node==========\");\n          let highLightId = user.uid + \"_\" + Date.now().toString();\n          highLighting(dom, highLightId);\n\n          function highLighting(dom, highLightId) {\n            //整體\n            console.log(highLightId);\n            if ([...dom.children][0]) {\n              //有 child 的情況\n              [...dom.children].forEach((child) => {\n                highLighting(child, highLightId);\n              });\n              //child 以外的部分\n              let father = dom.textContent;\n\n              let firstChildIndex = father.indexOf(\n                [...dom.children][0].textContent\n              );\n              // father head\n              let fatherHead = father.substr(0, firstChildIndex);\n              // father tail\n              let fatherTail = father.substr(firstChildIndex, father.length);\n\n              [...dom.children].forEach((child) => {\n                fatherHead = fatherHead.replace(child.textContent, \"\");\n                fatherTail = fatherTail.replace(child.textContent, \"\");\n              });\n              console.error(\"來處理\", fatherHead);\n              findTextAddSpan(fatherHead, highLightId);\n              console.log(tempRenderArticle.search(\"<span\"));\n              console.error(\"來處理\", fatherTail);\n              findTextAddSpan(fatherTail, highLightId);\n              console.log(tempRenderArticle.search(\"<span\"));\n            } else {\n              //沒有的情況\n              let father = dom.textContent;\n              console.error(\"來處理\", father);\n              findTextAddSpan(father, highLightId);\n              console.log(tempRenderArticle.search(\"<span\"));\n            }\n          }\n\n          function findTextAddSpan(targetText, hightLightId) {\n            console.warn(targetText);\n            var encodedText = targetText.replace(\"&\", \"&amp;\");\n            let indexStart = tempRenderArticle.indexOf(encodedText);\n            console.log(indexStart);\n            let indexEnd = indexStart + targetText.length;\n            if (indexStart !== -1 && indexStart !== 0) {\n              allTextSlice.push(targetText);\n              let temp =\n                tempRenderArticle.substr(0, indexStart) +\n                `<span class=highLighter data-id=\"${hightLightId}\">` +\n                tempRenderArticle.substr(indexStart, targetText.length) +\n                `</span><input z=\"${hightLightId}\">` +\n                tempRenderArticle.substr(indexEnd, renderArticle.length);\n\n              tempRenderArticle = temp;\n            }\n          }\n          let hightLight = {\n            id: highLightId,\n            textSlice: allTextSlice,\n            uid: user.uid,\n            text: textSummary,\n          };\n          setHighLights([...highLights, hightLight]);\n          setRenderArticle(tempRenderArticle);\n          saveHighLightToDB(\n            textSummary,\n            allTextSlice,\n            highLightId,\n            user.uid,\n            id\n          );\n\n          // console.log(renderArticle.substr(0, articleStart));\n          //=======< old code>==========================\n          // let tempArticle =\n          //   renderArticle.substr(0, articleStart) +\n          //   \"<span class=highLighter >\" +\n          //   renderArticle.substr(articleStart, articleStartTail - articleStart) +\n          //   \"</span>\" +\n          //   renderArticle.substr(\n          //     articleStartTail,\n          //     articleEndHead - articleStartTail\n          //   ) +\n          //   \"<span class=highLighter >\" +\n          //   renderArticle.substr(articleEndHead, articleEnd - articleEndHead) +\n          //   \"</span>\" +\n          //   renderArticle.substr(articleEnd, renderArticle.length);\n          // console.log(tempArticle);\n          // setRenderArticle(tempArticle);\n        }\n      }\n\n      // console.log(article.readerHtml);\n    }\n  }\n\n  const quillRef = React.useRef();\n\n  function renderHightLight(highLights) {\n    let highLightBoxes = [];\n    highLights.forEach((highLight) => {\n      highLightBoxes.push(\n        <div className={styles.highLightBox}>\n          <div className={styles.highLightText}>{highLight.text}</div>\n          <div\n            onClick={() => {\n              console.log(highLight.id);\n              deleteHightLight(highLight.id, id);\n            }}\n          >\n            Delete\n          </div>\n        </div>\n      );\n    });\n    return highLightBoxes;\n  }\n\n  function deleteHightLight(id, articleId) {\n    console.log(\"delete\", id);\n    //remove article render hightLight\n    let tempArticle = renderArticle;\n    console.log(tempArticle);\n\n    tempArticle = tempArticle\n      .replaceAll(`<span class=highLighter data-id=\"${id}\">`, \"\")\n      .replaceAll(`</span><input z=\"${id}\">`, \"\");\n\n    //remove highLight state\n    let tempHighLight = highLights.filter((item) => {\n      return item.id !== id;\n    });\n\n    //remove hightLight from db\n    db.collection(\"Articles\").doc(articleId).update({\n      highLight: tempHighLight,\n    });\n\n    setHighLights(tempHighLight);\n    setRenderArticle(tempArticle);\n  }\n  useEffect(() => {\n    let articleMain = document.querySelector(\".\" + styles.articleMain);\n\n    articleMain.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      articleMain.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [renderArticle]);\n  console.log(highLights);\n  let highLightBoxes = renderHightLight(highLights);\n  if (renderArticle) {\n    console.error(renderArticle.search(\"<span class=highLighter\"));\n  }\n  return (\n    <div className={styles.articleWrapper}>\n      <div className={styles.main} style={{ width: showNote ? \"55%\" : \"100%\" }}>\n        <div className={styles.head}>\n          <Link to={\"/board\"}>\n            <ArrowBack style={{ color: \"#FFFCEC\" }} />\n          </Link>\n        </div>\n        <div className={styles.title}>{article.title}</div>\n        <div className={styles.tagWrapper}>\n          <CreatableSelect\n            isMulti\n            width=\"200px\"\n            menuColor=\"red\"\n            styles={customStyles}\n            onChange={handleChange}\n            onCreateOption={handleCreate}\n            options={tags.options}\n            defaultValue={tags.values}\n            value={tags.values}\n          />\n        </div>\n        <div className={styles.actionIconWrapper}>\n          {showNote ? (\n            <div className={styles.noteOnWrapper}>\n              <ChromeReaderModeIcon\n                className={styles.showNoteIcon}\n                style={{ color: \"#FFFCEC\" }}\n                onClick={() => {\n                  console.log(\"hihi\");\n                  setShowNote(false);\n                }}\n              />\n            </div>\n          ) : (\n            <div className={styles.noteOffWrapper}>\n              <ChromeReaderModeIcon\n                className={styles.showNoteIcon}\n                style={{ color: \"#FFFCEC\" }}\n                onClick={() => {\n                  console.log(\"hihi\");\n                  setShowNote(true);\n                }}\n              />\n            </div>\n          )}\n\n          {highLightOn ? (\n            <div className={styles.highLightOnWrapper}>\n              <BorderColorIcon\n                style={{ color: \"#FFFCEC\" }}\n                onClick={() => {\n                  console.log(\"click\");\n                  setHighLightOn(false);\n                  lightOn.current = false;\n                }}\n              />\n            </div>\n          ) : (\n            <div className={styles.highLightOffWrapper}>\n              <BorderColorIcon\n                style={{ color: \"#FFFCEC\" }}\n                onClick={() => {\n                  setHighLightOn(true);\n                  lightOn.current = true;\n                }}\n              />\n            </div>\n          )}\n        </div>\n        <div className={styles.articleMain}>\n          <div\n            className={styles.articleBody}\n            dangerouslySetInnerHTML={{ __html: renderArticle }}\n          ></div>\n        </div>\n      </div>\n      {showNote ? (\n        <div className={styles.noteWrapper}>\n          <div className={styles.note}>\n            <div className={styles.noteTitle}> Note</div>\n\n            <ReactQuill\n              className={styles.quill1}\n              onChangeSelection={(a, b, c) => {}}\n              theme=\"snow\"\n              ref={(el) => {\n                quillRef.current = el;\n              }}\n              value={note}\n              onChange={(e, a, source) => {\n                console.log(source);\n                console.log(e);\n                console.log(note);\n                if (source === \"user\") {\n                  uploadNote(e);\n                }\n              }}\n            />\n            <div className={styles.highLightTitle}>Highlights</div>\n            {highLightBoxes}\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx",["289"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst article_Reducer = (\n  state = {\n    tagSelected: \"all\",\n    articleList: [],\n    articleFolders: [],\n    // isLoaded: false\n  },\n  action\n) => {\n  switch (action.type) {\n    // case \"DeleteTask\":\n    //   let remaintasks = state.tasks.filter((task) => task.id != action.id);\n\n    //   return { tasks: remaintasks };\n    case \"INITARTICLEFOLDERS\":\n      return {\n        ...state,\n        articleFolders: action.articleFolders,\n        // isLoaded: true\n      };\n    case \"INITARTICLE\":\n      return {\n        ...state,\n\n        articleList: action.articleList,\n      };\n    case \"SWITCHARTICLE\":\n      return {\n        ...state,\n\n        tagSelected: action.tagSelected,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default article_Reducer;\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx",["290","291","292","293","294","295","296","297"],"import { useLocation, useHistory } from \"react-router-dom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { localUrl, ec2Url } from \"../../config.js\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db } from \"../../firebase.js\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport styles from \"./RSSPage.module.css\";\nimport { app } from \"../../lib/lib.js\";\n\nimport { useSelector } from \"react-redux\";\n\nexport default function RSSPage(props) {\n  console.log(\"page rerender, props is \", props.item);\n  const [feedItem, setFeedItem] = useState({});\n  const [youtube, setYoutube] = useState(false);\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n  const notify_success = () =>\n    toast.dark(\n      <div>\n        successfully save to article <Link to=\"/board\">go check it</Link>\n      </div>,\n\n      {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n  const notify_fail = () =>\n    toast.warn(\n      <div>fail, please try again later</div>,\n\n      {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n  let user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function postDataToServer(\n    url,\n    data = {\n      url: \"www.sylish.com\",\n      uid: \"12344\",\n    }\n  ) {\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          notify_fail();\n          return;\n        }\n        response.json().then(function (data) {\n          console.log(data);\n          notify_success();\n        });\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n        notify_fail();\n      });\n  }\n  useEffect(() => {\n    if (props.item) {\n      console.log(props.item);\n      setFeedItem(props.item);\n    } else {\n      console.log(\"this is in else ...run\");\n      //   console.log(\"useeffect run\");\n      //   app.getFeedContent(feedId).then((feedItem) => {\n      //     console.log(feedItem);\n      //     setFeedItem(feedItem);\n      //   });\n    }\n  }, [props.item]);\n\n  //   useEffect(() => {\n  //     function getArticles() {\n  //       db.collection(\"Articles\")\n  //         .doc(id)\n  //         .onSnapshot(function (doc) {\n  //           setArticle({\n  //             title: doc.data().title,\n  //             markDown: doc.data().markDown,\n  //           });\n  //         });\n  //     }\n  //     getArticles();\n  //   }, []);\n  console.log(feedItem);\n  let youtubeUrl = \"\";\n  if (feedItem.media) {\n    youtubeUrl = feedItem.media[0][\"media:content\"][0][\"$\"][\"url\"].replace(\n      \"https://www.youtube.com/v/\",\n      \"\"\n    );\n    console.log(feedItem.media[0]);\n    console.log(feedItem.media[0][\"media:thumbnail\"][0][\"$\"][\"url\"]);\n    console.log(feedItem.media[0][\"media:content\"][0][\"$\"][\"url\"]);\n  }\n\n  return (\n    <div>\n      {feedItem.media ? (\n        <div className={styles.page}>\n          <div className={styles.head}>\n            <div className={styles.arrowWrapper}>\n              <ArrowBack\n                style={{ color: \"#FFFCEC\", cursor: \"pointer\" }}\n                onClick={props.onClick}\n              />\n            </div>\n            <BookmarkBorderIcon\n              style={{ color: \"#FFFCEC\", cursor: \"pointer\" }}\n              onClick={() => {\n                postDataToServer(ec2Url, {\n                  url: feedItem.link,\n                  uid: user.uid,\n                });\n              }}\n            />\n          </div>\n          <div className={styles.title}>{feedItem.title}</div>\n          <iframe\n            width=\"640\"\n            height=\"390\"\n            title=\"hihi\"\n            src={\"https://www.youtube.com/embed/\" + youtubeUrl}\n          ></iframe>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: feedItem.content || feedItem[\"content:encoded\"],\n            }}\n            className={styles.content}\n          ></div>\n        </div>\n      ) : (\n        <div className={styles.page}>\n          <div className={styles.head}>\n            <ArrowBack\n              className={styles.backIcon}\n              style={{ color: \"#FFFCEC\", cursor: \"pointer\" }}\n              onClick={props.onClick}\n            />\n            <Tooltip title=\"save for later\" backgroundColor=\"blue\" arrow>\n              <BookmarkBorderIcon\n                className={styles.saveIcon}\n                style={{ color: \"#FFFCEC\", cursor: \"pointer\" }}\n                onClick={() => {\n                  postDataToServer(ec2Url, {\n                    url: feedItem.link,\n                    uid: user.uid,\n                  });\n                }}\n              />\n            </Tooltip>\n          </div>\n          <div className={styles.title}>{feedItem.title}</div>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: feedItem.content || feedItem[\"content:encoded\"],\n            }}\n            className={styles.content}\n          ></div>\n        </div>\n      )}\n    </div>\n  );\n}\n",["298","299"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx",["300","301","302"],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js",["303"],"import { resolve } from \"path\";\nimport { app } from \"./lib.js\";\napp.getGraphData = function (uid) {\n  return new Promise(async (resolve) => {\n    let memberTags = await app.getMemberTags(uid);\n    console.log(\"2\");\n    resolve(memberTags);\n  });\n};\n\napp.initGraphData = function (uid) {\n  return new Promise((resolve) => {\n    app\n      .getGraphData(uid)\n      .then((memberTags) => {\n        console.log(memberTags);\n        let nodes = [];\n        memberTags.forEach((tag) => {\n          nodes.push({\n            id: tag.value,\n            tagId: tag.id,\n          });\n        });\n        return nodes;\n      })\n      .then((nodes) => {\n        resolve({\n          nodes: nodes,\n          links: [],\n        });\n      });\n  });\n};\n\nexport { app };\n",["304","305"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx",["306","307"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx",["308","309","310","311","312","313"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx",["314","315","316"],"import React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport logo from \"../../img/taggy_logo_1x.png\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { db, auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nexport default function Signup() {\n  const notify_fail = () =>\n    toast.warn(\n      <div>Sign in fail, please check your account and password</div>,\n      {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        console.log(authResult);\n        let newUser = await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .get()\n          .then((doc) => {\n            if (doc.data()) {\n              console.log(\"existing user sign in\");\n              return false;\n            } else {\n              console.log(\"new user! create it in db\");\n              return true;\n            }\n          });\n        if (newUser) {\n          await db\n            .collection(\"Member\")\n            .doc(authResult.uid)\n            .set({\n              uid: authResult.uid,\n              email: authResult.email,\n              displaynamename: authResult.displayName,\n            })\n\n            .then(() => console.log(\"Add user to db successfully\"))\n            .then(history.push(\"home\"))\n            .catch((error) => {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              console.log(errorMessage);\n              notify_fail();\n            });\n        } else {\n          history.push(\"home\");\n          console.log(\"exiting user signin\");\n        }\n      },\n    },\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  function firebaseSignIn(email, password) {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(\"you click sign in and successfully\");\n        history.push(\"/home\");\n        // Signed in\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n        notify_fail();\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.headWrapper}>\n        <Link to={\"/\"}>\n          <div className={styles.homeWrapper}>\n            <div className={styles.logoWrapper}>\n              <img src={logo} alt=\"\" />\n            </div>\n            <div className={styles.logoTitle}>Taggy</div>\n          </div>\n        </Link>\n        <Link to={\"/signin\"} className={styles.logInWrapper}>\n          <div className={styles.logInBtn}>Sign in</div>\n        </Link>\n        <Link to={\"/signup\"}>\n          <div className={styles.SignUpBtn}>Sign up</div>\n        </Link>\n      </div>\n      <div className={styles.blockWrapper}>\n        <div className=\"block\" className={styles.block}>\n          <h2 className={styles.title}>Sign In</h2>\n          <form\n            className={styles.form}\n            onSubmit={(e) => {\n              e.preventDefault();\n              firebaseSignIn(email, password);\n            }}\n          >\n            {/* <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input type=\"text\" name=\"username\" />\n          </div> */}\n            <div className={styles.inputbox}>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <div className={styles.inputbox}>\n              <label htmlFor=\"email\">Password</label>\n              <input\n                type=\"password\"\n                name=\"passowrd\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <button>Sign In</button>\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSChannel.jsx",["317","318","319","320","321","322","323","324"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { db } from \"../../firebase.js\";\nimport RSSCard from \"./RSSCard\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport \"./RSSPage.css\";\nexport default function Board(props) {\n  const [isFollowed, setIsFollowed] = useState(false);\n  const [allFeeds, setAllFeeds] = useState([]);\n  const [channelFeeds, setChannelFeeds] = useState({});\n  const [lastVisible, setLastVisible] = useState(0);\n  const [showPage, setShowPage] = useState(false);\n  const [feedItem, setFeedItem] = useState(\"\");\n  const [lastQueryDoc, setLastQueryDoc] = useState(\"\");\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n  let channelTitle = params.get(\"title\");\n  let channelDescription = params.get(\"description\");\n  const dispatch = useDispatch();\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function batchFetchAllFeeds(channelRSSId, lastVisible) {\n    console.log(channelRSSId);\n    if (lastVisible === 0) {\n      console.log(\"last visible equal zero!\");\n      db.collection(\"RSSItem\")\n        .where(\"RSSId\", \"==\", channelRSSId)\n        .orderBy(\"pubDate\", \"desc\")\n        .limit(15)\n        .get()\n        .then((snapshot) => {\n          console.log(\"batchfetch start\");\n          let items = [...allFeeds];\n          snapshot.forEach((doc) => {\n            items.push(doc.data());\n          });\n          setLastQueryDoc(snapshot.docs[14]);\n\n          setAllFeeds(items);\n          console.log(\"se set items as \", items);\n        });\n    } else {\n      if (lastQueryDoc) {\n        console.log(\"else start, the last visible is\", lastVisible);\n\n        db.collection(\"RSSItem\")\n          .where(\"RSSId\", \"==\", channelRSSId)\n          .orderBy(\"pubDate\", \"desc\")\n          .startAfter(lastQueryDoc)\n          .limit(7)\n          .get()\n          .then((snapshot) => {\n            let items = [...allFeeds];\n            snapshot.forEach((doc) => {\n              items.push(doc.data());\n            });\n\n            setLastQueryDoc(snapshot.docs[snapshot.docs.length - 1]);\n            setAllFeeds(items);\n          });\n      }\n    }\n  }\n\n  function renderAllFeeds(feedItems) {\n    if (feedItems) {\n      let feedList = [];\n      for (let i in feedItems) {\n        feedList.push(\n          <RSSCard\n            item={feedItems[i]}\n            onClick={(e) => {\n              setShowPage(true);\n              setFeedItem(feedItems[i]);\n            }}\n          />\n        );\n      }\n      return (\n        <div className={styles.board}>\n          <Link to=\"/home/channels\" className={styles.arrowBack}>\n            <ArrowBack style={{ color: \"#FFFCEC\" }} />\n          </Link>\n          <h1 className={styles.title}>{channelTitle} </h1>\n          <div className={styles.channelDescription}>{channelDescription}</div>\n          {isFollowed ? (\n            <div className={styles.channelSubscribed}>Following</div>\n          ) : (\n            <div\n              className={styles.channelSubscribe_btn}\n              onClick={() => {\n                console.log(\"add\", props.channelId);\n                app.addRSSToMember(user.uid, props.channelId, () => {\n                  setIsFollowed(true);\n                });\n              }}\n            >\n              Follow\n            </div>\n          )}\n          {feedList}\n        </div>\n      );\n    }\n  }\n\n  function renderFeedPage(feedItem) {\n    return (\n      <RSSPage\n        item={feedItem}\n        onClick={() => {\n          setShowPage(false);\n        }}\n      />\n    );\n  }\n  const userRSSList = useSelector((state) => {\n    return state.RSSReducer.UserRSSList;\n  });\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const winScroll =\n        document.body.scrollTop || document.documentElement.scrollTop;\n\n      const height =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight;\n      if (winScroll > height - 20) {\n        console.log(\"reach the bottom!\", lastVisible);\n\n        let newLast = lastVisible + 7;\n        setLastVisible(newLast);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [lastVisible]);\n\n  useEffect(() => {\n    if (userRSSList) {\n      if (userRSSList.includes(props.channelId)) {\n        setIsFollowed(true);\n      }\n    }\n  }, [userRSSList]);\n  useEffect(() => {\n    batchFetchAllFeeds(props.channelId, lastVisible);\n  }, [props.channelId, lastVisible]);\n\n  const feedPage = renderFeedPage(feedItem);\n  let allFeedsOutome = renderAllFeeds(allFeeds);\n  return (\n    <div>\n      {allFeedsOutome}\n      {showPage ? (\n        <div className={styles.popup}>\n          <div\n            className={styles.blur}\n            onClick={() => {\n              setShowPage(false);\n            }}\n          ></div>\n          {feedPage}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js",["325","326","327"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx",["343","344","345","346","347","348"],"/Users/kevinzhang/Documents/Taggy/client/app/src/index.js",["349"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(allReducers, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx",["350"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst member_Reducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SETMEMBER\":\n      return {\n        ...state,\n        user: {\n          uid: action.uid,\n          displayName: action.displayName,\n          email: action.email,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default member_Reducer;\n",["351","352"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Landing.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx",["353","354","355","356","357"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./FolderTab.module.css\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"#4F4F4F\",\n  },\n});\nexport default function Folder(props) {\n  console.log(\"rerender la \");\n  const classes = useStyles();\n  const [tags, setTags] = useState([]);\n  const dispatch = useDispatch();\n  let folderTags = props.folderTags;\n  // let user = props.user;\n  // useEffect(() => {\n  //   function getMemberFolderTags() {\n  //     if (user) {\n  //       app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //         setTags(folderTags);\n  //       });\n  //     }\n  //   }\n  //   getMemberFolderTags();\n  // }, [user]);\n  console.log(\"======================================\");\n  console.log(folderTags);\n  function showTabTreeList(tags) {\n    let tabList = [];\n    if (tags) {\n      let count = 0;\n      for (let i in tags) {\n        tabList.push(\n          <Draggable draggableId={tags[i].id} index={count} key={tags[i].id}>\n            {(provided) => (\n              <TreeItem\n                key={tags[i].id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n                nodeId={tags[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <BookmarkIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                    {tags[i].label ? (\n                      <div className={styles.labelTitle}>{tags[i].label}</div>\n                    ) : (\n                      <Skeleton\n                        className={classes.root}\n                        variant=\"rect\"\n                        width={100}\n                        height={12}\n                        animation=\"pulse\"\n                      />\n                    )}\n                  </div>\n                }\n                onClick={() => {\n                  console.log(tags[i].id);\n                  dispatch(SWITCHARTICLE(tags[i].id));\n                }}\n              />\n            )}\n          </Draggable>\n        );\n        count++;\n      }\n    }\n    return tabList;\n  }\n  const tabList = showTabTreeList(folderTags);\n  return <div>{tabList}</div>;\n}\n",["358","359"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data.js",[],["360","361"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx",["362","363","364","365","366","367"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { db } from \"../../firebase.js\";\nimport RSSCard from \"./RSSCard\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\nimport \"./RSSPage.css\";\nexport default function Board(props) {\n  const [allFeeds, setAllFeeds] = useState([]);\n  const [channelFeeds, setChannelFeeds] = useState({});\n  const [lastVisible, setLastVisible] = useState(0);\n  const [showPage, setShowPage] = useState(false);\n  const [feedItem, setFeedItem] = useState(\"\");\n  const [lastQueryDoc0, setLastQueryDoc0] = useState(\"\");\n  const lastVisibleNumber = useRef(lastVisible);\n  const dispatch = useDispatch();\n  const userRSSList = useSelector((state) => {\n    return state.RSSReducer.UserRSSList;\n  });\n\n  function batchFetchAllFeeds(userRSSList, lastVisible) {\n    console.log(userRSSList);\n    if (lastVisible === 0 && userRSSList[0]) {\n      console.log(\"last visible equal zero!\");\n      db.collection(\"RSSItem\")\n        .orderBy(\"pubDate\", \"desc\")\n        .where(\"RSSId\", \"in\", userRSSList.slice(0, 10))\n        .limit(7)\n        .get()\n        .then((snapshot) => {\n          let items = [...allFeeds];\n          snapshot.forEach((doc) => {\n            console.log(doc.data());\n\n            items.push(doc.data());\n          });\n          setLastQueryDoc0(snapshot.docs[snapshot.docs.length - 1]);\n          setAllFeeds(items);\n          console.log(\"se set items as \", items);\n        });\n    } else {\n      if (lastQueryDoc0 && userRSSList[0]) {\n        console.log(\"else start, the last visible is\", lastVisible);\n\n        db.collection(\"RSSItem\")\n          .orderBy(\"pubDate\", \"desc\")\n          .where(\"RSSId\", \"in\", userRSSList.slice(0, 9))\n          .startAfter(lastQueryDoc0)\n          .limit(7)\n          .get()\n          .then((snapshot) => {\n            let items = [...allFeeds];\n            snapshot.forEach((doc) => {\n              items.push(doc.data());\n            });\n\n            setLastQueryDoc0(snapshot.docs[snapshot.docs.length - 1]);\n            setAllFeeds(items);\n          });\n      }\n    }\n  }\n\n  function renderAllFeeds(feedItems) {\n    if (feedItems) {\n      console.log(feedItems);\n      let feedList = [];\n      for (let i in feedItems) {\n        feedList.push(\n          <RSSCard\n            item={feedItems[i]}\n            onClick={(e) => {\n              setShowPage(true);\n              setFeedItem(feedItems[i]);\n            }}\n          />\n        );\n      }\n      return (\n        <div className={styles.board}>\n          <h1 className={styles.title}>My Feeds</h1>\n          <div className={styles.description}>\n            Feeds from your subscribed RSS\n          </div>\n          {feedList}\n        </div>\n      );\n    } else {\n      return (\n        <div className={styles.board}>\n          <h1 className={styles.title}>Subscribed Feeds</h1>\n          <div className={styles.content}>You dont have any feed yet!</div>\n        </div>\n      );\n    }\n  }\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function renderFeedPage(feedItem) {\n    return (\n      <RSSPage\n        item={feedItem}\n        onClick={() => {\n          setShowPage(false);\n        }}\n      />\n    );\n  }\n\n  const ChannelRSSId = useSelector((state) => {\n    return state.RSSReducer.ChannelRSSId;\n  });\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const winScroll =\n        document.body.scrollTop || document.documentElement.scrollTop;\n\n      const height =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight;\n      if (winScroll > height - 20) {\n        console.log(\"reach the bottom!\", lastVisible);\n\n        let newLast = lastVisible + 7;\n        setLastVisible(newLast);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [lastVisible]);\n\n  useEffect(() => {\n    console.log(lastVisible);\n    if (userRSSList) {\n      batchFetchAllFeeds(userRSSList, lastVisible);\n    }\n  }, [userRSSList, lastVisible]);\n  useEffect(() => {\n    fetchChannelFeed();\n  }, [ChannelRSSId]);\n\n  let allFeedsOutome;\n  if (ChannelRSSId === \"all\") {\n    console.log(\"channel id is all\");\n    console.log(allFeeds);\n    allFeedsOutome = renderAllFeeds(allFeeds);\n  } else if (ChannelRSSId) {\n    allFeedsOutome = renderChannelFeeds();\n  }\n\n  async function fetchChannelFeed() {\n    let items;\n    let RSS;\n    if (ChannelRSSId) {\n      console.log(ChannelRSSId);\n      RSS = await app.getRSSInfo(ChannelRSSId);\n      items = await app.getChannelFeeds(ChannelRSSId);\n      console.log(RSS, items);\n      setChannelFeeds({\n        RSS: RSS,\n        items: items,\n      });\n    }\n  }\n  function renderChannelFeeds() {\n    if (channelFeeds.items) {\n      console.log(channelFeeds);\n      let items = channelFeeds.items;\n      let RSS = channelFeeds.RSS;\n      let feedList = [];\n      for (let i in items) {\n        console.log(items[i]);\n        feedList.push(\n          <RSSCard\n            item={items[i]}\n            onClick={(e) => {\n              console.log(\"hihi\");\n              setShowPage(true);\n              setFeedItem(items[i]);\n            }}\n          />\n        );\n      }\n      return (\n        <div className={styles.board}>\n          <h1 className={styles.title}>{RSS.title}</h1>\n          <div\n            className={styles.content}\n            dangerouslySetInnerHTML={{ __html: RSS.description }}\n          ></div>\n          {feedList}\n        </div>\n      );\n    }\n  }\n  const feedPage = renderFeedPage(feedItem);\n  return (\n    <div className={styles.boardWrapper}>\n      {allFeedsOutome}\n      {showPage ? (\n        <div className={styles.popup}>\n          <div\n            className={styles.blur}\n            onClick={() => {\n              setShowPage(false);\n            }}\n          ></div>\n          {feedPage}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSSearch.jsx",["368","369","370","371"],"import SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchRSS from \"./SearchRSS\";\nimport { db } from \"../../firebase.js\";\nimport RSSCard from \"./RSSCard\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\n\nimport youtube from \"../../img/youtube_logo.png\";\n\nexport default function Board(props) {\n  const [showPage, setShowPage] = useState(false);\n  const [showChannelPage, setShowChannelPage] = useState(false);\n  const [feedItem, setFeedItem] = useState(\"\");\n  const dispatch = useDispatch();\n  console.log(\"rerender\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function renderFeedPage(feedItem) {\n    console.log(\"redner run again\");\n    console.log(feedItem);\n    return (\n      <RSSPage\n        highLight={searchFeed.title}\n        item={feedItem}\n        onClick={() => {\n          setShowPage(false);\n        }}\n      />\n    );\n  }\n\n  const ChannelRSSId = useSelector((state) => {\n    console.log(\"hihi\");\n    return state.RSSReducer.ChannelRSSId;\n  });\n  console.log(\"rerender channelid is \", ChannelRSSId);\n\n  const searchFeed = useSelector((state) => {\n    console.log(state.RSSReducer.feed);\n    return state.RSSReducer.feed;\n  });\n  const searchFeedUrl = useSelector((state) => {\n    return state.RSSReducer.url;\n  });\n\n  function renderSearchFeed(feed) {\n    let feedList = [];\n    for (let i in feed.items) {\n      feedList.push(\n        <RSSCard\n          highLight={feed.title}\n          item={feed.items[i]}\n          onClick={(e) => {\n            console.log(\"hihi\");\n            setShowPage(true);\n            setFeedItem(feed.items[i]);\n          }}\n        />\n      );\n    }\n\n    return (\n      <div className={styles.channelPopUpboard}>\n        <div className={styles.titleWrapper}>\n          <SearchIcon\n            fontSize=\"large\"\n            color=\"white\"\n            style={{ color: \"white\" }}\n          />\n          <h1 className={styles.title}>{feed.title}</h1>\n        </div>\n        {/* <div dangerouslySetInnerHTML={{ __html: feed.description }}></div> */}\n\n        {feedList}\n      </div>\n    );\n  }\n  //   useEffect(() => {\n\n  //     if (searchFeed) {\n  //       checkArticleUpdate(user.uid);\n  //     }\n  //   }, [user]);\n  const feedPage = renderFeedPage(feedItem);\n  const searchOutcome = renderSearchFeed(searchFeed);\n\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.boardWrapper}>\n      <div className={styles.board}>\n        <h1 className={styles.title}>Search Article</h1>\n\n        <div className={styles.description}>Search quality resources</div>\n        <SearchRSS\n          user={props.user}\n          showChannel={() => {\n            setShowChannelPage(true);\n          }}\n        />\n\n        {showChannelPage ? (\n          <div className={styles.popup}>\n            <div\n              className={styles.blur}\n              onClick={() => {\n                setShowChannelPage(false);\n              }}\n            ></div>\n            {searchOutcome}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {showPage ? (\n          <div className={styles.popup}>\n            <div\n              className={styles.blur}\n              onClick={() => {\n                setShowPage(false);\n              }}\n            ></div>\n            {feedPage}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/SearchRSS.jsx",["372","373","374","375","376","377"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx",["378","379"],"import React, { useState } from \"react\";\nimport logo from \"../../img/taggy_logo_1x.png\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nexport default function Signup() {\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        console.log(authResult);\n        let newUser = await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .get()\n          .then((doc) => {\n            if (doc.data()) {\n              console.log(\"existing user sign in\");\n              return false;\n            } else {\n              console.log(\"new user! create it in db\");\n              return true;\n            }\n          });\n        if (newUser) {\n          await db\n            .collection(\"Member\")\n            .doc(authResult.uid)\n            .set({\n              uid: authResult.uid,\n              email: authResult.email,\n              displaynamename: authResult.displayName,\n            })\n\n            .then(() => console.log(\"Add user to db successfully\"))\n            .then(history.push(\"home\"))\n            .catch((error) => {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              console.log(errorMessage);\n            });\n        } else {\n          console.log(\"exiting user signin\");\n        }\n      },\n    },\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  function firebaseSignUp(name, email, password) {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user.user);\n        db.collection(\"Member\").doc(user.user.uid).set({\n          displaynamename: name,\n          email: email,\n          password: password,\n          uid: user.user.uid,\n        });\n      })\n      .then(() => {\n        var user = auth.currentUser;\n        user\n          .updateProfile({\n            displayName: name,\n          })\n          .then(() => console.log(\"update user name successfully\"));\n      })\n      .then(history.push(\"/home\"))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.headWrapper}>\n        <Link to={\"/\"}>\n          <div className={styles.homeWrapper}>\n            <div className={styles.logoWrapper}>\n              <img src={logo} alt=\"\" />\n            </div>\n            <div className={styles.logoTitle}>Taggy</div>\n          </div>\n        </Link>\n        <Link to={\"/signin\"} className={styles.logInWrapper}>\n          <div className={styles.logInBtn}>Sign in</div>\n        </Link>\n        <Link to={\"/signup\"}>\n          <div className={styles.SignUpBtn}>Sign up</div>\n        </Link>\n      </div>\n      <div className={styles.blockWrapper}>\n        <div className={styles.block}>\n          <h2 className={styles.title}>Sign Up</h2>\n          <form\n            className={styles.form}\n            onSubmit={(e) => {\n              e.preventDefault();\n              firebaseSignUp(name, email, password);\n            }}\n          >\n            <div className={styles.inputbox}>\n              <label htmlFor=\"username\">User Name</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <div className={styles.inputbox}>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <div className={styles.inputbox}>\n              <label htmlFor=\"email\">Password</label>\n              <input\n                type=\"password\"\n                name=\"passowrd\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <button>Sign Up</button>\n          </form>\n          <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n          <div className={styles.login}>\n            <span>Already have an account? </span>\n            <Link to={\"/Signin\"}>Sign in</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx",["380","381","382","383","384","385","386","387","388"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport CardWrapper from \"../CardWrapper.jsx\";\nimport dispatch from \"react-redux\";\nimport styles from \"./GroupBoard.module.css\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddArticle from \"../AddArticle\";\nimport firebase from \"firebase/app\";\nimport teamImg from \"../../img/undraw_team.svg\";\nimport team_img from \"../../img/undraw_team.svg\";\nimport { render } from \"react-dom\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport default function Board(props) {\n  const dispatch = useDispatch();\n  const [memberList, setMemberList] = useState([]);\n  const [filteredMemberList, setFilteredMemberList] = useState([]);\n  const [memberEmailList, setMemberEmailList] = useState([]);\n\n  const [addMember, setAddMember] = useState(false);\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const groupId = useSelector((state) => {\n    return state.groupReducer.groupId;\n  });\n  const groupName = useSelector((state) => {\n    return state.groupReducer.groupName;\n  });\n  // const memebrList = getMembers();\n  // function getMembers() {\n  //   let memberList = [];\n  //   return db\n  //     .collection(\"Member\")\n  //     .get()\n  //     .then((snapShot) => {\n  //       sn;\n  //       memberList.push({\n  //         email: doc.data().emil,\n  //         uid: doc.data().uid,\n  //         password: doc.data().password,\n  //       });\n  //       return memberList;\n  //     });\n  // }\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .orderBy(\"date\", \"desc\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n              link: doc.data().link,\n              readerHtml: doc.data().readerHtml,\n            });\n          });\n          console.log(list);\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (groupId) {\n      checkArticleUpdate(groupId);\n    }\n  }, [groupId]);\n\n  useEffect(() => {\n    let unsubscribe;\n    function getLatestMemberList() {\n      unsubscribe = db.collection(\"Member\").onSnapshot((snapshot) => {\n        let memberList = [];\n        let memberEmailList = [];\n        snapshot.forEach((doc) => {\n          memberList.push({\n            displayname: doc.data().displaynamename,\n            email: doc.data().email,\n            uid: doc.data().uid,\n          });\n        });\n        setMemberList(memberList);\n      });\n    }\n    getLatestMemberList();\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  function handleChange(input) {\n    if (input !== \"\") {\n      let filteredMemberList = memberList.filter((member) => {\n        console.log(member);\n        return member.email.includes(input);\n      });\n      console.log(filteredMemberList);\n      setFilteredMemberList(filteredMemberList);\n    }\n  }\n\n  function renderSearchResult(filteredMemberList) {\n    let searchResult = [];\n    filteredMemberList.forEach((member, index) => {\n      let colorList = [\n        \"\t#007979\",\n        \"#019858\",\n        \"#004B97\",\n        \"\t#AE8F00\",\n        \"#408080\",\n        \"\t#5B00AE\",\n        \"\t#D94600\",\n        \"#5151A2\",\n        \"\t#006000\",\n        \"\t#000093\",\n        \"\t#007979\",\n        \"#019858\",\n        \"#004B97\",\n        \"\t#AE8F00\",\n        \"#408080\",\n        \"\t#5B00AE\",\n        \"\t#D94600\",\n        \"#5151A2\",\n        \"\t#006000\",\n        \"\t#000093\",\n        \"\t#007979\",\n        \"#019858\",\n        \"#004B97\",\n        \"\t#AE8F00\",\n        \"#408080\",\n        \"\t#5B00AE\",\n        \"\t#D94600\",\n        \"#5151A2\",\n        \"\t#006000\",\n        \"\t#000093\",\n        \"\t#007979\",\n        \"#019858\",\n        \"#004B97\",\n        \"\t#AE8F00\",\n        \"#408080\",\n        \"\t#5B00AE\",\n        \"\t#D94600\",\n        \"#5151A2\",\n        \"\t#006000\",\n        \"\t#000093\",\n      ];\n\n      searchResult.push(\n        <div\n          className={styles.memberWrapper}\n          id={member.uid}\n          onClick={(e) => {\n            console.log(e.currentTarget);\n            addMemberToGroup(e.currentTarget.id, groupId);\n          }}\n        >\n          <div\n            className={styles.memberHead}\n            style={{ background: colorList[index] }}\n          >\n            {member.displayname[0]}\n          </div>\n          <div className={styles.wordWrapper}>\n            <div className={styles.displayname}>{member.displayname}</div>\n            <div className={styles.email}>{member.email}</div>\n          </div>\n          <button>Add</button>\n        </div>\n      );\n    });\n    return searchResult;\n  }\n  function addMemberToGroup(uid, groupId) {\n    db.collection(\"Member\")\n      .doc(uid)\n      .update({\n        board: firebase.firestore.FieldValue.arrayUnion(groupId),\n      })\n      .then(() => {\n        db.collection(\"GroupBoard\")\n          .doc(groupId)\n          .update({\n            member: firebase.firestore.FieldValue.arrayUnion(uid),\n          });\n      })\n      .then(() => {\n        alert(\"succesfully add to group\");\n      });\n  }\n  const articleList = useSelector((state) => {\n    return state.articleReducer.articleList;\n  });\n  console.log(articleList);\n  let searchResult = renderSearchResult(filteredMemberList);\n  console.log(searchResult);\n  console.log(filteredMemberList);\n  return (\n    <div\n      className={styles.boardWrapper}\n      onClick={() => {\n        setFilteredMemberList([]);\n        setAddMember(false);\n      }}\n    >\n      <div className={styles.titleWrapper}>\n        <div className={styles.title}>{groupName}</div>\n\n        <div className={styles.actionList}>\n          <EditIcon />\n          <GroupAddIcon\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddMember(true);\n              console.log(addMember);\n            }}\n          />\n          {addMember ? (\n            <div\n              className={styles.addMemberWrapper}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              <div className={styles.addTitle}>Invite to board</div>\n              <CloseIcon\n                className={styles.cancelIcon}\n                fontSize=\"small\"\n                onClick={() => {\n                  setFilteredMemberList([]);\n                  setAddMember(false);\n                }}\n              />\n              <form action=\"\">\n                <input\n                  type=\"text\"\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                    if (e.target.value === \"\") {\n                      setFilteredMemberList([]);\n                    }\n                    console.log(\"hihi\");\n                    handleChange(e.target.value);\n                  }}\n                />\n              </form>\n              {searchResult}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n\n      {articleList[0] ? (\n        <CardWrapper />\n      ) : (\n        <div class={styles.emptyWrapper}>\n          <img src={team_img} alt=\"\" />\n          <div class={styles.subtitle}>\n            Share the content by using our extension\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx",["389","390","391","392","393"],"import * as d3 from \"d3\";\nimport { dataSet } from \"../../data.js\";\nimport { dataSet2 } from \"../../data2.js\";\nimport { useD3 } from \"../../hooks/useD3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { app } from \"../../lib/gragh_lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport styles from \"./Graph.module.css\";\nexport default function Graph() {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  const [data, setData] = useState({});\n  function color() {\n    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n    return (d) => scale(d.group);\n  }\n  function drag(simulation) {\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let id;\n      const height = 800;\n      const width = 1000;\n      svg.selectAll(\"*\").remove();\n      if (data.nodes) {\n        const links = data.links.map((d) => Object.create(d));\n        const nodes = data.nodes.map((d) => Object.create(d));\n\n        const simulation = d3\n          .forceSimulation(nodes)\n          .force(\n            \"link\",\n            d3.forceLink(links).id((d) => d.id)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(-500).distanceMax([500]))\n          .force(\"center\", d3.forceCenter(width / 2 - 300, height / 2));\n\n        const link = svg\n          .append(\"g\")\n          .attr(\"stroke\", \"#999\")\n          .attr(\"stroke-opacity\", 0.6)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\n\n        const node = svg\n          .append(\"g\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"stroke-linejoin\", \"round\")\n          .selectAll(\"g\")\n          .data(nodes)\n          .join(\"g\")\n          .call(drag(simulation));\n        const circle = node\n          .append(\"circle\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"r\", 5)\n          .attr(\"fill\", \"#4F4F4F\");\n        const text = node\n          .append(\"text\")\n          .text((d) => d.id)\n          .clone(true)\n          .lower()\n          .attr(\"stroke-width\", 0.2)\n          .attr(\"stroke\", \"white\")\n          .attr(\"fill\", \"white\")\n          .attr(\"id\", (d) => d.tagId)\n          .on(\"click\", (a) => {\n            d3.select(this).style(\"stroke\", \"yellow\");\n            console.log(a);\n            console.log(a.target.id);\n            dispatch(SWITCHARTICLE(a.target.id));\n          });\n\n        node.append(\"title\").text((d) => d.id);\n\n        simulation.on(\"tick\", () => {\n          link\n            .attr(\"x1\", (d) => d.source.x)\n            .attr(\"y1\", (d) => d.source.y)\n            .attr(\"x2\", (d) => d.target.x)\n            .attr(\"y2\", (d) => d.target.y);\n\n          circle.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n          text.attr(\"x\", (d) => d.x + 10).attr(\"y\", (d) => d.y);\n        });\n      }\n\n      return svg.node();\n    },\n    [data]\n  );\n  console.log(ref);\n  const articleList = useSelector((state) => {\n    console.log(state);\n    return state.articleReducer.articleList;\n  });\n  function getGraphData(uid) {\n    return new Promise(async (resolve) => {\n      let memberTags = await app.getMemberTags(uid);\n\n      resolve(memberTags);\n    });\n  }\n  // {\n  //   id: \"1qeqw\",\n  //   value: \"ee\"\n  //   label: \"ee\"\n  // }\n  function createCombinationList(tags) {\n    let combList = [];\n    for (let i = 0; i < tags.length - 1; i++) {\n      for (let j = i + 1; j < tags.length; j++) {\n        combList.push([tags[i], tags[j]]);\n      }\n    }\n    return combList;\n  }\n  function countCombinationNumber(articleList, combList) {\n    console.error(articleList);\n    let links = [];\n    console.log(combList);\n    for (let i = 0; i < combList.length; i++) {\n      let combNumber = 0;\n      articleList.forEach((article) => {\n        if (article.tags) {\n          if (\n            article.tags.includes(combList[i][0].id) &&\n            article.tags.includes(combList[i][1].id)\n          ) {\n            combNumber += 1;\n          }\n        }\n      });\n      links.push({\n        source: combList[i][0].label,\n        target: combList[i][1].label,\n        value: combNumber,\n      });\n    }\n    return links;\n  }\n  function combInit(tags) {\n    let combList = createCombinationList(tags);\n    console.warn(articleList);\n    return countCombinationNumber(articleList, combList);\n  }\n\n  function initGraphData(uid) {\n    return new Promise((resolve) => {\n      getGraphData(uid)\n        .then((memberTags) => {\n          let links = combInit(memberTags);\n          let nodes = [];\n          memberTags.forEach((tag) => {\n            nodes.push({\n              id: tag.value,\n              tagId: tag.id,\n            });\n          });\n          console.log(links);\n          return [nodes, links];\n        })\n        .then(([nodes, links]) => {\n          resolve({\n            nodes: nodes,\n            links: links,\n          });\n        });\n    });\n  }\n  useEffect(() => {\n    if (user && articleList[0]) {\n      console.log(articleList);\n      // setDataRun(true);\n      console.log(user);\n      initGraphData(user.uid).then((data) => {\n        console.log(\"lets set dat=============================a\");\n        console.log(data);\n        setData(data);\n      });\n    }\n  }, [user, articleList]);\n  return (\n    <div className={styles.graphWrapper}>\n      <div className={styles.graphContainer}>\n        <div className={styles.titleWrapper}>\n          {/* <div className={styles.title}>Tags Graph</div> */}\n        </div>\n        <div className={styles.graph}>\n          <svg\n            ref={ref}\n            style={{\n              height: 800,\n              width: \"100%\",\n              marginRight: \"20px\",\n              marginLeft: \"0px\",\n            }}\n          >\n            <g className=\"plot-area\" />\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Explore.jsx",["394","395","396","397","398","399","400","401","402","403","404","405","406"],"import React, { useEffect, useState, useMemo, useRef } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport frontedWeekly from \"../../img/frontendWeekly_box.jpg\";\nimport medium from \"../../img/medium_box.png\";\nimport dailydev from \"../../img/dailydev_box.png\";\nimport dailyJS from \"../../img/dailyJS_box.png\";\nimport airbnb from \"../../img/airbnb_box.jpg\";\nimport google from \"../../img/google_box.png\";\nimport logrocket from \"../../img/logrocket_box.jpg\";\nimport plain from \"../../img/plain_english_box.jpg\";\nimport RSSCard from \"./RSSCard\";\nimport { db } from \"../../firebase.js\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard_Explore.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\nimport RSSChannel from \"./RSSChannel\";\nimport \"./RSSPage.css\";\nexport default function RSSBoardExplore(props) {\n  const [showPage, setShowPage] = useState(false);\n\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n  let channelId = params.get(\"channelId\");\n  console.log(channelId);\n  return (\n    <div className={styles.boardWrapper}>\n      {!channelId ? (\n        <div className={styles.board}>\n          <h1 className={styles.title}>Explore</h1>\n          <div className={styles.description}>\n            Discover the best sources for topic you like\n          </div>\n          <h1 className={styles.boxWrapperTitle}>Feature</h1>\n          <div className={styles.boxWrapper}>\n            <div className={styles.box}>\n              <Link to=\"?channelId=c21yiUdn1sl4S57BYbr8&title=Airbnb Engineering &amp; Data Science&description=Creative engineers and data scientists building a world where you can belong anywhere. http://airbnb.io\">\n                <div className={styles.boxImg}>\n                  <img src={airbnb} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>\n                  Airbnb Engineering &amp; Data Science\n                </div>\n                <div className={styles.boxDescription}>\n                  Creative engineers and data scientists building a world where\n                  you can belong anywhere. http://airbnb.io\n                </div>\n              </Link>\n            </div>\n            <div className={styles.box}>\n              <Link\n                to=\"?channelId=fzKiwTaqX94LqJLuH3bx&title=Google Developers&description=Engineering and technology articles for developers, written\n                  and curated by Googlers. The views expressed are those of the\n                  authors and don't necessarily reflect those of Google.\"\n              >\n                <div className={styles.boxImg}>\n                  <img src={google} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>Google Developers</div>\n                <div className={styles.boxDescription}>\n                  Engineering and technology articles for developers, written\n                  and curated by Googlers.\n                </div>\n              </Link>\n            </div>\n            <div className={styles.box}>\n              <Link to=\"?channelId=K7eGFfzcCrXErhBPsKM0&title=JavaScript In Plain English - Medium&description=New JavaScript + Web Development articles every day\">\n                <div className={styles.boxImg}>\n                  <img src={plain} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>\n                  JavaScript In Plain English - Medium\n                </div>\n                <div className={styles.boxDescription}>\n                  New JavaScript + Web Development articles every day\n                </div>\n              </Link>\n            </div>\n            <div className={styles.box}>\n              <Link to=\"?channelId=KcRLeBkx37MWou5HbGKe&title=LogRocket Blog&description=For Frontend Developers and Web App Engineers\">\n                <div className={styles.boxImg}>\n                  <img src={logrocket} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>LogRocket Blog</div>\n                <div className={styles.boxDescription}>\n                  For Frontend Developers and Web App Engineers\n                </div>\n              </Link>\n            </div>\n          </div>\n          <h1 className={styles.boxWrapperTitle}>Front End</h1>\n          <div className={styles.boxWrapper}>\n            <div className={styles.box}>\n              <Link\n                to=\"?channelId=9yuVe1n8G20E9VfWngTR&title=Fronted Weekly&description=A curation of all things interesting and related to javascript\n                  and front end development.\"\n              >\n                <div className={styles.boxImg}>\n                  <img src={frontedWeekly} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>Fronted Weekly</div>\n                <div className={styles.boxDescription}>\n                  A curation of all things interesting and related to javascript\n                  and front end development.\n                </div>\n              </Link>\n            </div>\n            <div className={styles.box}>\n              <Link to=\"?channelId=I14qjeQLYk4hfxBTW1lF&title=Bits and Pieces&description=The best of web development articles, tutorials, and news.\">\n                <div className={styles.boxImg}>\n                  <img src={medium} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>Bits and Pieces</div>\n                <div className={styles.boxDescription}>\n                  The best of web development articles, tutorials, and news.\n                </div>\n              </Link>\n            </div>\n            <div className={styles.box}>\n              <Link\n                to=\"?channelId=vqUF9fbocSHkwYzOi2fY&title=Daily.dev&description=Daily is an open source browser extension which provides curated\n                dev news to your new tab\"\n              >\n                <div className={styles.boxImg}>\n                  <img src={dailydev} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>Daily.dev</div>\n                <div className={styles.boxDescription}>\n                  Daily is an open source browser extension which provides\n                  curated dev news to your new tab\n                </div>\n              </Link>\n            </div>\n            <div className={styles.box}>\n              <Link to=\"?channelId=5L6M2nLNRkXNjjFCu1gB&title=Daily JS&description=JavaScript news and opinion.\">\n                <div className={styles.boxImg}>\n                  <img src={dailyJS} alt=\"\" />\n                </div>\n                <div className={styles.boxTitle}>Daily JS</div>\n                <div className={styles.boxDescription}>\n                  JavaScript news and opinion.\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <RSSChannel channelId={channelId} />\n      )}\n    </div>\n  );\n}\n",["407","408"],"/Users/kevinzhang/Documents/Taggy/client/app/src/config.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx",["409"],"import React from \"react\";\n\nimport AddArticle from \"../AddArticle\";\n\nimport styles from \"./Header.module.css\";\n\nexport default function Header(props) {\n  return <header className={styles.header}></header>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/GraphBoard.jsx",["410","411","412","413"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport CardWrapper from \"../CardWrapper.jsx\";\nimport dispatch from \"react-redux\";\nimport styles from \"../Board.module.css\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport AddArticle from \"../AddArticle\";\nexport default function GraphBoard() {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .orderBy(\"date\", \"desc\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              link: doc.data().link,\n              tags: doc.data().tags,\n              readerHtml: doc.data().readerHtml,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.graphBoardWrapper}>\n      <div className={styles.boardWrapper}>\n        <div className={styles.title}>Graph View</div>\n        <div className={styles.description}>\n          Review your knowledge by clicking the tag dot!{\" \"}\n        </div>\n\n        <CardWrapper />\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx",["414","415"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FindRSS from \"./FindRSS\";\nimport { db } from \"../../firebase.js\";\nimport RSSCard from \"./RSSCard\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\n\nimport youtube from \"../../img/youtube_logo.png\";\n\nexport default function Board(props) {\n  const [showPage, setShowPage] = useState(false);\n  const [showChannelPage, setShowChannelPage] = useState(false);\n  const [feedItem, setFeedItem] = useState(\"\");\n  const dispatch = useDispatch();\n  console.log(\"rerender\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function renderFeedPage(feedItem) {\n    console.log(\"redner run again\");\n    console.log(feedItem);\n    return (\n      <RSSPage\n        item={feedItem}\n        onClick={() => {\n          setShowPage(false);\n        }}\n      />\n    );\n  }\n\n  const ChannelRSSId = useSelector((state) => {\n    console.log(\"hihi\");\n    return state.RSSReducer.ChannelRSSId;\n  });\n  console.log(\"rerender channelid is \", ChannelRSSId);\n\n  const searchFeed = useSelector((state) => {\n    return state.RSSReducer.feed;\n  });\n  const searchFeedUrl = useSelector((state) => {\n    return state.RSSReducer.url;\n  });\n\n  function renderSearchFeed(feed) {\n    let feedList = [];\n    for (let i in feed.items) {\n      feedList.push(\n        <RSSCard\n          item={feed.items[i]}\n          onClick={(e) => {\n            console.log(\"hihi\");\n            setShowPage(true);\n            setFeedItem(feed.items[i]);\n          }}\n        />\n      );\n    }\n\n    return (\n      <div className={styles.channelPopUpboard}>\n        <h1 className={styles.title}>{feed.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: feed.description }}></div>\n        {feed.title ? (\n          <button\n            className={styles.channelSubscribe_btn}\n            onClick={() => {\n              app.subscribeRSS(user.uid, feed.title, searchFeedUrl, feed);\n            }}\n          >\n            Follow\n          </button>\n        ) : (\n          \"\"\n        )}\n        {feedList}\n      </div>\n    );\n  }\n  //   useEffect(() => {\n\n  //     if (searchFeed) {\n  //       checkArticleUpdate(user.uid);\n  //     }\n  //   }, [user]);\n  const feedPage = renderFeedPage(feedItem);\n  const searchOutcome = renderSearchFeed(searchFeed);\n\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.boardWrapper}>\n      <div className={styles.board}>\n        <h1 className={styles.title}>Add RSS Subscription</h1>\n\n        <div className={styles.description}>\n          Add new source to reach this world\n        </div>\n        <FindRSS\n          user={props.user}\n          showChannel={() => {\n            setShowChannelPage(true);\n          }}\n        />\n\n        {showChannelPage ? (\n          <div className={styles.popup}>\n            <div\n              className={styles.blur}\n              onClick={() => {\n                setShowChannelPage(false);\n              }}\n            ></div>\n            {searchOutcome}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {showPage ? (\n          <div className={styles.popup}>\n            <div\n              className={styles.blur}\n              onClick={() => {\n                setShowPage(false);\n              }}\n            ></div>\n            {feedPage}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx",["416","417","418","419","420","421","422","423"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  SWITCHARTICLE,\n  GROUPINIT,\n  INITGROUPSELECT,\n  SWITCHGROUPSELECT,\n} from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"../SideTab/Folder\";\nimport GroupFolerSub from \"./GroupFolderSub\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n\n    flexGrow: 1,\n    maxWidth: 400,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function GroupFolderTab() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [tabChange, setTabChange] = useState(\"\");\n  const [editFolder, setEditFolder] = useState(false);\n  const [addGroup, setAddGroup] = useState(false);\n  const [addGroupInput, setAddGroupInput] = useState(\"\");\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [articleFolders, setArticleFolders] = useState([]);\n  console.log(articleFolders);\n\n  const groups = useSelector((state) => {\n    return state.groupReducer.groups;\n  });\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n    }\n  }\n\n  useEffect(() => {\n    function getMemberGroups(user) {\n      return db\n        .collection(\"Member\")\n        .doc(user.uid)\n        .get()\n        .then((doc) => {\n          console.log(doc.data());\n          return doc.data().board;\n        });\n    }\n    function getGroupDbInfo(boardId) {\n      console.log(boardId);\n      return db\n        .collection(\"GroupBoard\")\n        .doc(boardId)\n        .get()\n        .then((doc) => {\n          return {\n            id: doc.data().id,\n            name: doc.data().name,\n            articleFolders: doc.data().articleFolders,\n          };\n        });\n    }\n    async function memberGroupInit(user) {\n      let groupIds = await getMemberGroups(user);\n\n      let groups = {};\n      console.log(groupIds);\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        groups[groupIds[i]] = info;\n      }\n      console.warn(groups);\n      if (groups[Object.keys(groups)[0]]) {\n        console.warn(groups[Object.keys(groups)[0]].id);\n        dispatch(\n          INITGROUPSELECT(\n            groups[Object.keys(groups)[0]].id,\n            groups[Object.keys(groups)[0]].name\n          )\n        );\n      }\n\n      //=========!!!!!!!!!!!!!!!!!!!===========\n      // dispatch(GROUPINIT(groups));\n\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        //info ={  id: \"group1\",\n        //name: front end,\n        //articleFolders: [id1, id2, id3],}\n        let folders = await app.getGroupArticleFolders(groupIds[i]);\n        //folders=[{id, name, tags}, {id, name, tags}]\n        console.log(folders);\n        let folderWithTagInfo = folders.map(async (folder) => {\n          let tags = await app.getMemberFolderTags(folder.id);\n          folder.tags = tags;\n          return folder;\n        });\n\n        let group = await Promise.all(folderWithTagInfo).then((folder) => {\n          info.articleFolders = folder;\n          return info;\n        });\n        console.log(group);\n        let groupId = groupIds[i];\n        groups[groupId] = group;\n        console.log(groups);\n      }\n      console.log(groups);\n\n      dispatch(GROUPINIT(groups));\n    }\n    async function updateMemberGroup(user, changeId) {\n      let groupIds = await getMemberGroups(user);\n      let groups = {};\n      console.log(groupIds);\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        groups[groupIds[i]] = info;\n      }\n      console.log(groups);\n      console.log(changeId);\n      dispatch(SWITCHGROUPSELECT(groups[changeId].id, groups[changeId].name));\n      //=========!!!!!!!!!!!!!!!!!!!===========\n      // dispatch(GROUPINIT(groups));\n\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        //info ={  id: \"group1\",\n        //name: front end,\n        //articleFolders: [id1, id2, id3],}\n        let folders = await app.getGroupArticleFolders(groupIds[i]);\n        //folders=[{id, name, tags}, {id, name, tags}]\n        console.log(folders);\n        let folderWithTagInfo = folders.map(async (folder) => {\n          let tags = await app.getMemberFolderTags(folder.id);\n          folder.tags = tags;\n          return folder;\n        });\n\n        let group = await Promise.all(folderWithTagInfo).then((folder) => {\n          info.articleFolders = folder;\n          return info;\n        });\n        console.log(group);\n        let groupId = groupIds[i];\n        groups[groupId] = group;\n        console.log(groups);\n      }\n      console.log(groups);\n\n      dispatch(GROUPINIT(groups));\n    }\n    if (tabChange) {\n      updateMemberGroup(user, tabChange).then(() => {});\n    } else if (user) {\n      memberGroupInit(user).then((groups) => {});\n    }\n  }, [user, tabChange]);\n\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  function addGroupBoard(name, uid) {\n    db.collection(\"GroupBoard\")\n      .add({\n        name: name,\n        member: [uid],\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id, articleFolders: [\"un\" + docRef.id] });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            board: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n        return id;\n      })\n      .then((id) => {\n        db.collection(\"articleFolders\")\n          .doc(\"un\" + id)\n          .set({\n            id: \"un\" + id,\n            name: \"Uncategorized\",\n          });\n        return id;\n      })\n      .then((id) => {\n        setTabChange(id);\n      });\n  }\n  function renderGroupTabs(groups) {\n    let groupTabs = [];\n    console.log(groups);\n    for (const key in groups) {\n      console.log(groups[key]);\n      groupTabs.push(\n        <TreeView\n          className={classes.root}\n          defaultExpanded={[\"\"]}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n          onClick={() => {\n            console.log(groups[key].name);\n            dispatch(SWITCHGROUPSELECT(key, groups[key].name));\n          }}\n        >\n          <TreeItem\n            nodeId={groups[key].name}\n            label={\n              <div className={styles.labelWrapper}>\n                <PeopleAltIcon />\n                <div className={styles.labelTitle}>{groups[key].name}</div>\n              </div>\n            }\n            onClick={() => {\n              console.log(\"all\");\n              dispatch(SWITCHARTICLE(\"all\"));\n            }}\n          >\n            <TreeItem\n              nodeId={\"tagAll_\" + groups[key].name}\n              label={\n                <div className={styles.labelWrapper}>\n                  <div className={styles.labelTitle}>All Articles</div>\n                </div>\n              }\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            ></TreeItem>\n            {/* <TreeItem\n              nodeId=\"unTag2\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <MarkunreadIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                  <div className={styles.labelTitle}>Untaged</div>\n                </div>\n              }\n            /> */}\n            <DragDropContext onDragEnd={onDragEnd}>\n              <GroupFolerSub folders={groups[key].articleFolders} />\n            </DragDropContext>\n          </TreeItem>\n        </TreeView>\n      );\n    }\n    return groupTabs;\n  }\n  const groupTabs = renderGroupTabs(groups);\n  // const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <div className={styles.sectionTitle}>Group Boards</div>\n        <div\n          className={styles.subTitle}\n          onClick={() => {\n            setAddGroup(true);\n          }}\n        >\n          Create New Group\n        </div>\n        {groupTabs}\n\n        {editFolder\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setEditFolder(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Add New Folder</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Folder Name\"\n                      value={addFolderInput}\n                      onChange={(e) => {\n                        setAddFolderInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addArticleFolder(addFolderInput, user.uid);\n                          setEditFolder(false);\n                        } else {\n                          alert(\"Please login to add folder!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setEditFolder(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n        {addGroup\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setAddGroup(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Create New Group Board</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Group Board Name\"\n                      value={addGroupInput}\n                      onChange={(e) => {\n                        setAddGroupInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addGroupBoard(addGroupInput, user.uid);\n                          setAddGroup(false);\n                        } else {\n                          alert(\"Please login to add group!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setAddGroup(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n        <div\n          className={styles.subTitle}\n          onClick={() => {\n            setEditFolder(true);\n          }}\n        >\n          Add Folder\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today.jsx",["424","425","426","427","428","429","430","431"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js",["432","433"],"import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    console.log(ref.current);\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx",["434"],"import Card from \"./Card\";\nimport \"../css/CardWrapper.css\";\nimport { useSelector } from \"react-redux\";\nimport { db } from \"../firebase.js\";\nexport default function CardWrapper() {\n  console.log(\"render once\");\n\n  const list = useSelector((state) => {\n    // function getUserTags(uid) {\n    //   let tagListWithName = {};\n    //   async function getUserBatchTags(tagList, querystart, querytotal) {\n    //     if (querytotal > 0) {\n    //       await db\n    //         .collection(\"Tags\")\n    //         .where(\"id\", \"in\", tagList.slice(querystart, 10))\n    //         .get()\n    //         .then((snapShot) => {\n    //           snapShot.forEach((doc) => {\n    //             console.log(doc.data());\n    //             tagListWithName[doc.data().id] = doc.data().name;\n    //           });\n    //           console.warn(\"================one batch tag edn\");\n    //         });\n    //       getUserBatchTags(tagList, querystart + 10, querytotal - 10);\n    //     } else {\n    //       return;\n    //     }\n    //   }\n\n    //   return new Promise((resolve, reject) => {\n    //     db.collection(\"Member\")\n    //       .doc(uid)\n    //       .get()\n    //       .then(async (doc) => {\n    //         console.log(doc.data());\n    //         if (doc.data()) {\n    //           let tagIds = doc.data().tags;\n    //           console.log(tagIds);\n    //           if (tagIds !== \"\" && tagIds) {\n    //             await getUserBatchTags(tagIds, 0, tagIds.length);\n    //             console.error(\"batch done\");\n    //           }\n    //         }\n    //       });\n    //   }).then(console.log(tagListWithName));\n    // }\n    // if (state.memberReducer.user) {\n    //   getUserTags(state.memberReducer.user.uid);\n    // }\n\n    let list = [];\n    let articleList = state.articleReducer.articleList;\n    console.log(state);\n    if (state.articleReducer.tagSelected === \"all\") {\n      for (let i in articleList) {\n        console.log(articleList[i].link);\n        list.push(\n          <Card\n            title={articleList[i].title}\n            content={articleList[i].content}\n            id={articleList[i].id}\n            key={articleList[i].id}\n            tags={articleList[i].tags}\n            link={articleList[i].link}\n            htmlContent={articleList[i].readerHtml}\n          />\n        );\n      }\n    } else if (state.articleReducer.tagSelected) {\n      for (let i in articleList) {\n        console.log(articleList);\n        if (\n          articleList[i].tags &&\n          articleList[i].tags.includes(state.articleReducer.tagSelected)\n        ) {\n          list.push(\n            <Card\n              title={articleList[i].title}\n              content={articleList[i].content}\n              id={articleList[i].id}\n              key={articleList[i].id}\n              link={articleList[i].link}\n              htmlContent={articleList[i].readerHtml}\n            />\n          );\n        }\n      }\n    }\n    return list;\n  });\n\n  return <div className=\"cardWrapper\">{list}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx",["435"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx",[],{"ruleId":"436","severity":1,"message":"437","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":24},{"ruleId":"436","severity":1,"message":"440","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":15},{"ruleId":"436","severity":1,"message":"441","line":4,"column":17,"nodeType":"438","messageId":"439","endLine":4,"endColumn":23},{"ruleId":"436","severity":1,"message":"442","line":9,"column":8,"nodeType":"438","messageId":"439","endLine":9,"endColumn":13},{"ruleId":"443","severity":1,"message":"444","line":54,"column":50,"nodeType":"445","messageId":"446","endLine":54,"endColumn":51},{"ruleId":"436","severity":1,"message":"447","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":19},{"ruleId":"436","severity":1,"message":"448","line":1,"column":21,"nodeType":"438","messageId":"439","endLine":1,"endColumn":29},{"ruleId":"436","severity":1,"message":"449","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":22},{"ruleId":"436","severity":1,"message":"450","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":20},{"ruleId":"436","severity":1,"message":"451","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":18},{"ruleId":"436","severity":1,"message":"452","line":6,"column":8,"nodeType":"438","messageId":"439","endLine":6,"endColumn":22},{"ruleId":"436","severity":1,"message":"453","line":8,"column":8,"nodeType":"438","messageId":"439","endLine":8,"endColumn":24},{"ruleId":"436","severity":1,"message":"454","line":9,"column":8,"nodeType":"438","messageId":"439","endLine":9,"endColumn":21},{"ruleId":"436","severity":1,"message":"455","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":14},{"ruleId":"436","severity":1,"message":"456","line":12,"column":8,"nodeType":"438","messageId":"439","endLine":12,"endColumn":22},{"ruleId":"436","severity":1,"message":"457","line":13,"column":8,"nodeType":"438","messageId":"439","endLine":13,"endColumn":20},{"ruleId":"436","severity":1,"message":"458","line":15,"column":10,"nodeType":"438","messageId":"439","endLine":15,"endColumn":13},{"ruleId":"436","severity":1,"message":"459","line":17,"column":10,"nodeType":"438","messageId":"439","endLine":17,"endColumn":23},{"ruleId":"436","severity":1,"message":"460","line":18,"column":10,"nodeType":"438","messageId":"439","endLine":18,"endColumn":12},{"ruleId":"436","severity":1,"message":"461","line":19,"column":8,"nodeType":"438","messageId":"439","endLine":19,"endColumn":16},{"ruleId":"436","severity":1,"message":"462","line":20,"column":10,"nodeType":"438","messageId":"439","endLine":20,"endColumn":25},{"ruleId":"436","severity":1,"message":"463","line":24,"column":9,"nodeType":"438","messageId":"439","endLine":24,"endColumn":17},{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"436","severity":1,"message":"468","line":2,"column":8,"nodeType":"438","messageId":"439","endLine":2,"endColumn":12},{"ruleId":"436","severity":1,"message":"469","line":4,"column":8,"nodeType":"438","messageId":"439","endLine":4,"endColumn":22},{"ruleId":"436","severity":1,"message":"470","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":23},{"ruleId":"436","severity":1,"message":"471","line":6,"column":8,"nodeType":"438","messageId":"439","endLine":6,"endColumn":20},{"ruleId":"436","severity":1,"message":"472","line":8,"column":10,"nodeType":"438","messageId":"439","endLine":8,"endColumn":14},{"ruleId":"436","severity":1,"message":"473","line":9,"column":8,"nodeType":"438","messageId":"439","endLine":9,"endColumn":21},{"ruleId":"436","severity":1,"message":"474","line":13,"column":8,"nodeType":"438","messageId":"439","endLine":13,"endColumn":16},{"ruleId":"464","replacedBy":"475"},{"ruleId":"466","replacedBy":"476"},{"ruleId":"436","severity":1,"message":"447","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":19},{"ruleId":"436","severity":1,"message":"477","line":6,"column":8,"nodeType":"438","messageId":"439","endLine":6,"endColumn":14},{"ruleId":"436","severity":1,"message":"472","line":8,"column":10,"nodeType":"438","messageId":"439","endLine":8,"endColumn":14},{"ruleId":"436","severity":1,"message":"478","line":17,"column":8,"nodeType":"438","messageId":"439","endLine":17,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":20,"column":26,"nodeType":"438","messageId":"439","endLine":20,"endColumn":31},{"ruleId":"464","replacedBy":"480"},{"ruleId":"466","replacedBy":"481"},{"ruleId":"436","severity":1,"message":"456","line":11,"column":8,"nodeType":"438","messageId":"439","endLine":11,"endColumn":22},{"ruleId":"436","severity":1,"message":"457","line":14,"column":8,"nodeType":"438","messageId":"439","endLine":14,"endColumn":20},{"ruleId":"436","severity":1,"message":"482","line":63,"column":34,"nodeType":"438","messageId":"439","endLine":63,"endColumn":45},{"ruleId":"483","severity":1,"message":"484","line":175,"column":6,"nodeType":"485","endLine":175,"endColumn":23,"suggestions":"486"},{"ruleId":"436","severity":1,"message":"437","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":24},{"ruleId":"436","severity":1,"message":"487","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":18},{"ruleId":"436","severity":1,"message":"488","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":15},{"ruleId":"436","severity":1,"message":"489","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"490","line":5,"column":23,"nodeType":"438","messageId":"439","endLine":5,"endColumn":34},{"ruleId":"436","severity":1,"message":"491","line":8,"column":20,"nodeType":"438","messageId":"439","endLine":8,"endColumn":26},{"ruleId":"483","severity":1,"message":"492","line":29,"column":6,"nodeType":"485","endLine":29,"endColumn":25,"suggestions":"493"},{"ruleId":"436","severity":1,"message":"494","line":1,"column":23,"nodeType":"438","messageId":"439","endLine":1,"endColumn":33},{"ruleId":"436","severity":1,"message":"495","line":5,"column":14,"nodeType":"438","messageId":"439","endLine":5,"endColumn":37},{"ruleId":"483","severity":1,"message":"496","line":81,"column":6,"nodeType":"485","endLine":81,"endColumn":12,"suggestions":"497"},{"ruleId":"483","severity":1,"message":"498","line":120,"column":6,"nodeType":"485","endLine":120,"endColumn":21,"suggestions":"499"},{"ruleId":"436","severity":1,"message":"500","line":122,"column":9,"nodeType":"438","messageId":"439","endLine":122,"endColumn":20},{"ruleId":"483","severity":1,"message":"501","line":162,"column":6,"nodeType":"485","endLine":162,"endColumn":8,"suggestions":"502"},{"ruleId":"436","severity":1,"message":"503","line":282,"column":9,"nodeType":"438","messageId":"439","endLine":282,"endColumn":25},{"ruleId":"436","severity":1,"message":"504","line":283,"column":9,"nodeType":"438","messageId":"439","endLine":283,"endColumn":23},{"ruleId":"483","severity":1,"message":"505","line":465,"column":6,"nodeType":"485","endLine":465,"endColumn":21,"suggestions":"506"},{"ruleId":"436","severity":1,"message":"507","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":16},{"ruleId":"436","severity":1,"message":"494","line":1,"column":23,"nodeType":"438","messageId":"439","endLine":1,"endColumn":33},{"ruleId":"436","severity":1,"message":"487","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":18},{"ruleId":"436","severity":1,"message":"460","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":12},{"ruleId":"436","severity":1,"message":"437","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":24},{"ruleId":"436","severity":1,"message":"458","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":13},{"ruleId":"436","severity":1,"message":"508","line":18,"column":10,"nodeType":"438","messageId":"439","endLine":18,"endColumn":17},{"ruleId":"436","severity":1,"message":"509","line":18,"column":19,"nodeType":"438","messageId":"439","endLine":18,"endColumn":29},{"ruleId":"436","severity":1,"message":"510","line":21,"column":7,"nodeType":"438","messageId":"439","endLine":21,"endColumn":13},{"ruleId":"464","replacedBy":"511"},{"ruleId":"466","replacedBy":"512"},{"ruleId":"436","severity":1,"message":"448","line":1,"column":28,"nodeType":"438","messageId":"439","endLine":1,"endColumn":36},{"ruleId":"436","severity":1,"message":"513","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":16},{"ruleId":"483","severity":1,"message":"484","line":38,"column":6,"nodeType":"485","endLine":38,"endColumn":12,"suggestions":"514"},{"ruleId":"436","severity":1,"message":"515","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"464","replacedBy":"516"},{"ruleId":"466","replacedBy":"517"},{"ruleId":"436","severity":1,"message":"455","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":14},{"ruleId":"436","severity":1,"message":"518","line":9,"column":12,"nodeType":"438","messageId":"439","endLine":9,"endColumn":21},{"ruleId":"436","severity":1,"message":"469","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":22},{"ruleId":"436","severity":1,"message":"470","line":6,"column":8,"nodeType":"438","messageId":"439","endLine":6,"endColumn":23},{"ruleId":"436","severity":1,"message":"519","line":11,"column":8,"nodeType":"438","messageId":"439","endLine":11,"endColumn":16},{"ruleId":"436","severity":1,"message":"520","line":13,"column":8,"nodeType":"438","messageId":"439","endLine":13,"endColumn":19},{"ruleId":"436","severity":1,"message":"521","line":15,"column":8,"nodeType":"438","messageId":"439","endLine":15,"endColumn":17},{"ruleId":"436","severity":1,"message":"522","line":17,"column":25,"nodeType":"438","messageId":"439","endLine":17,"endColumn":43},{"ruleId":"436","severity":1,"message":"437","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":24},{"ruleId":"436","severity":1,"message":"523","line":55,"column":19,"nodeType":"438","messageId":"439","endLine":55,"endColumn":28},{"ruleId":"524","severity":1,"message":"525","line":111,"column":32,"nodeType":"526","endLine":111,"endColumn":56},{"ruleId":"436","severity":1,"message":"527","line":1,"column":38,"nodeType":"438","messageId":"439","endLine":1,"endColumn":44},{"ruleId":"436","severity":1,"message":"528","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":21},{"ruleId":"436","severity":1,"message":"494","line":11,"column":23,"nodeType":"438","messageId":"439","endLine":11,"endColumn":33},{"ruleId":"436","severity":1,"message":"529","line":16,"column":10,"nodeType":"438","messageId":"439","endLine":16,"endColumn":22},{"ruleId":"436","severity":1,"message":"530","line":16,"column":24,"nodeType":"438","messageId":"439","endLine":16,"endColumn":39},{"ruleId":"436","severity":1,"message":"463","line":26,"column":9,"nodeType":"438","messageId":"439","endLine":26,"endColumn":17},{"ruleId":"483","severity":1,"message":"531","line":157,"column":6,"nodeType":"485","endLine":157,"endColumn":19,"suggestions":"532"},{"ruleId":"483","severity":1,"message":"533","line":160,"column":6,"nodeType":"485","endLine":160,"endColumn":36,"suggestions":"534"},{"ruleId":"436","severity":1,"message":"437","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":24},{"ruleId":"436","severity":1,"message":"515","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":17},{"ruleId":"436","severity":1,"message":"535","line":5,"column":14,"nodeType":"438","messageId":"439","endLine":5,"endColumn":24},{"ruleId":"436","severity":1,"message":"536","line":1,"column":8,"nodeType":"438","messageId":"439","endLine":1,"endColumn":21},{"ruleId":"436","severity":1,"message":"537","line":15,"column":8,"nodeType":"438","messageId":"439","endLine":15,"endColumn":15},{"ruleId":"436","severity":1,"message":"538","line":16,"column":8,"nodeType":"438","messageId":"439","endLine":16,"endColumn":27},{"ruleId":"436","severity":1,"message":"456","line":18,"column":8,"nodeType":"438","messageId":"439","endLine":18,"endColumn":22},{"ruleId":"436","severity":1,"message":"457","line":19,"column":8,"nodeType":"438","messageId":"439","endLine":19,"endColumn":20},{"ruleId":"436","severity":1,"message":"539","line":26,"column":8,"nodeType":"438","messageId":"439","endLine":26,"endColumn":19},{"ruleId":"436","severity":1,"message":"540","line":30,"column":8,"nodeType":"438","messageId":"439","endLine":30,"endColumn":17},{"ruleId":"436","severity":1,"message":"541","line":33,"column":8,"nodeType":"438","messageId":"439","endLine":33,"endColumn":20},{"ruleId":"436","severity":1,"message":"542","line":35,"column":8,"nodeType":"438","messageId":"439","endLine":35,"endColumn":30},{"ruleId":"436","severity":1,"message":"543","line":53,"column":20,"nodeType":"438","messageId":"439","endLine":53,"endColumn":31},{"ruleId":"436","severity":1,"message":"544","line":63,"column":9,"nodeType":"438","messageId":"439","endLine":63,"endColumn":20},{"ruleId":"436","severity":1,"message":"545","line":74,"column":12,"nodeType":"438","messageId":"439","endLine":74,"endColumn":23},{"ruleId":"436","severity":1,"message":"546","line":132,"column":26,"nodeType":"438","messageId":"439","endLine":132,"endColumn":27},{"ruleId":"483","severity":1,"message":"547","line":145,"column":6,"nodeType":"485","endLine":145,"endColumn":12,"suggestions":"548"},{"ruleId":"436","severity":1,"message":"482","line":207,"column":34,"nodeType":"438","messageId":"439","endLine":207,"endColumn":45},{"ruleId":"436","severity":1,"message":"447","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":19},{"ruleId":"436","severity":1,"message":"457","line":4,"column":8,"nodeType":"438","messageId":"439","endLine":4,"endColumn":20},{"ruleId":"436","severity":1,"message":"458","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":13},{"ruleId":"436","severity":1,"message":"549","line":13,"column":10,"nodeType":"438","messageId":"439","endLine":13,"endColumn":13},{"ruleId":"436","severity":1,"message":"550","line":13,"column":15,"nodeType":"438","messageId":"439","endLine":13,"endColumn":21},{"ruleId":"436","severity":1,"message":"551","line":15,"column":7,"nodeType":"438","messageId":"439","endLine":15,"endColumn":11},{"ruleId":"436","severity":1,"message":"552","line":6,"column":23,"nodeType":"438","messageId":"439","endLine":6,"endColumn":38},{"ruleId":"436","severity":1,"message":"507","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":16},{"ruleId":"464","replacedBy":"553"},{"ruleId":"466","replacedBy":"554"},{"ruleId":"436","severity":1,"message":"447","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":19},{"ruleId":"436","severity":1,"message":"458","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":13},{"ruleId":"436","severity":1,"message":"555","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":14},{"ruleId":"436","severity":1,"message":"556","line":22,"column":10,"nodeType":"438","messageId":"439","endLine":22,"endColumn":14},{"ruleId":"436","severity":1,"message":"557","line":22,"column":16,"nodeType":"438","messageId":"439","endLine":22,"endColumn":23},{"ruleId":"464","replacedBy":"558"},{"ruleId":"466","replacedBy":"559"},{"ruleId":"464","replacedBy":"560"},{"ruleId":"466","replacedBy":"561"},{"ruleId":"436","severity":1,"message":"528","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":21},{"ruleId":"436","severity":1,"message":"562","line":18,"column":9,"nodeType":"438","messageId":"439","endLine":18,"endColumn":26},{"ruleId":"436","severity":1,"message":"463","line":19,"column":9,"nodeType":"438","messageId":"439","endLine":19,"endColumn":17},{"ruleId":"436","severity":1,"message":"551","line":101,"column":9,"nodeType":"438","messageId":"439","endLine":101,"endColumn":13},{"ruleId":"483","severity":1,"message":"533","line":146,"column":6,"nodeType":"485","endLine":146,"endColumn":32,"suggestions":"563"},{"ruleId":"483","severity":1,"message":"564","line":149,"column":6,"nodeType":"485","endLine":149,"endColumn":20,"suggestions":"565"},{"ruleId":"436","severity":1,"message":"458","line":9,"column":10,"nodeType":"438","messageId":"439","endLine":9,"endColumn":13},{"ruleId":"436","severity":1,"message":"566","line":12,"column":8,"nodeType":"438","messageId":"439","endLine":12,"endColumn":15},{"ruleId":"436","severity":1,"message":"567","line":48,"column":9,"nodeType":"438","messageId":"439","endLine":48,"endColumn":22},{"ruleId":"483","severity":1,"message":"484","line":113,"column":6,"nodeType":"485","endLine":113,"endColumn":12,"suggestions":"568"},{"ruleId":"436","severity":1,"message":"437","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":24},{"ruleId":"436","severity":1,"message":"440","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":15},{"ruleId":"436","severity":1,"message":"441","line":4,"column":17,"nodeType":"438","messageId":"439","endLine":4,"endColumn":23},{"ruleId":"436","severity":1,"message":"569","line":6,"column":13,"nodeType":"438","messageId":"439","endLine":6,"endColumn":22},{"ruleId":"436","severity":1,"message":"442","line":9,"column":8,"nodeType":"438","messageId":"439","endLine":9,"endColumn":13},{"ruleId":"443","severity":1,"message":"444","line":30,"column":36,"nodeType":"445","messageId":"446","endLine":30,"endColumn":37},{"ruleId":"436","severity":1,"message":"523","line":42,"column":19,"nodeType":"438","messageId":"439","endLine":42,"endColumn":28},{"ruleId":"436","severity":1,"message":"523","line":84,"column":13,"nodeType":"438","messageId":"439","endLine":84,"endColumn":22},{"ruleId":"436","severity":1,"message":"513","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":16},{"ruleId":"436","severity":1,"message":"570","line":10,"column":8,"nodeType":"438","messageId":"439","endLine":10,"endColumn":18},{"ruleId":"436","severity":1,"message":"571","line":12,"column":8,"nodeType":"438","messageId":"439","endLine":12,"endColumn":15},{"ruleId":"436","severity":1,"message":"572","line":14,"column":10,"nodeType":"438","messageId":"439","endLine":14,"endColumn":16},{"ruleId":"436","severity":1,"message":"573","line":21,"column":10,"nodeType":"438","messageId":"439","endLine":21,"endColumn":25},{"ruleId":"436","severity":1,"message":"574","line":21,"column":27,"nodeType":"438","messageId":"439","endLine":21,"endColumn":45},{"ruleId":"436","severity":1,"message":"551","line":25,"column":9,"nodeType":"438","messageId":"439","endLine":25,"endColumn":13},{"ruleId":"483","severity":1,"message":"484","line":74,"column":6,"nodeType":"485","endLine":74,"endColumn":15,"suggestions":"575"},{"ruleId":"436","severity":1,"message":"573","line":81,"column":13,"nodeType":"438","messageId":"439","endLine":81,"endColumn":28},{"ruleId":"436","severity":1,"message":"576","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"577","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":18},{"ruleId":"436","severity":1,"message":"578","line":19,"column":12,"nodeType":"438","messageId":"439","endLine":19,"endColumn":17},{"ruleId":"436","severity":1,"message":"579","line":50,"column":11,"nodeType":"438","messageId":"439","endLine":50,"endColumn":13},{"ruleId":"483","severity":1,"message":"580","line":213,"column":6,"nodeType":"485","endLine":213,"endColumn":25,"suggestions":"581"},{"ruleId":"436","severity":1,"message":"447","line":1,"column":17,"nodeType":"438","messageId":"439","endLine":1,"endColumn":26},{"ruleId":"436","severity":1,"message":"582","line":1,"column":38,"nodeType":"438","messageId":"439","endLine":1,"endColumn":45},{"ruleId":"436","severity":1,"message":"527","line":1,"column":47,"nodeType":"438","messageId":"439","endLine":1,"endColumn":53},{"ruleId":"436","severity":1,"message":"494","line":4,"column":23,"nodeType":"438","messageId":"439","endLine":4,"endColumn":33},{"ruleId":"436","severity":1,"message":"583","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":21},{"ruleId":"436","severity":1,"message":"490","line":5,"column":23,"nodeType":"438","messageId":"439","endLine":5,"endColumn":34},{"ruleId":"436","severity":1,"message":"584","line":14,"column":8,"nodeType":"438","messageId":"439","endLine":14,"endColumn":15},{"ruleId":"436","severity":1,"message":"460","line":15,"column":10,"nodeType":"438","messageId":"439","endLine":15,"endColumn":12},{"ruleId":"436","severity":1,"message":"528","line":16,"column":10,"nodeType":"438","messageId":"439","endLine":16,"endColumn":21},{"ruleId":"436","severity":1,"message":"458","line":18,"column":10,"nodeType":"438","messageId":"439","endLine":18,"endColumn":13},{"ruleId":"436","severity":1,"message":"585","line":19,"column":8,"nodeType":"438","messageId":"439","endLine":19,"endColumn":15},{"ruleId":"436","severity":1,"message":"586","line":23,"column":10,"nodeType":"438","messageId":"439","endLine":23,"endColumn":18},{"ruleId":"436","severity":1,"message":"587","line":23,"column":20,"nodeType":"438","messageId":"439","endLine":23,"endColumn":31},{"ruleId":"464","replacedBy":"588"},{"ruleId":"466","replacedBy":"589"},{"ruleId":"436","severity":1,"message":"570","line":3,"column":8,"nodeType":"438","messageId":"439","endLine":3,"endColumn":18},{"ruleId":"436","severity":1,"message":"448","line":1,"column":28,"nodeType":"438","messageId":"439","endLine":1,"endColumn":36},{"ruleId":"436","severity":1,"message":"513","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":16},{"ruleId":"436","severity":1,"message":"570","line":8,"column":8,"nodeType":"438","messageId":"439","endLine":8,"endColumn":18},{"ruleId":"483","severity":1,"message":"484","line":38,"column":6,"nodeType":"485","endLine":38,"endColumn":12,"suggestions":"590"},{"ruleId":"436","severity":1,"message":"566","line":11,"column":8,"nodeType":"438","messageId":"439","endLine":11,"endColumn":15},{"ruleId":"483","severity":1,"message":"484","line":113,"column":6,"nodeType":"485","endLine":113,"endColumn":12,"suggestions":"591"},{"ruleId":"436","severity":1,"message":"455","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":14},{"ruleId":"436","severity":1,"message":"456","line":12,"column":8,"nodeType":"438","messageId":"439","endLine":12,"endColumn":22},{"ruleId":"436","severity":1,"message":"457","line":13,"column":8,"nodeType":"438","messageId":"439","endLine":13,"endColumn":20},{"ruleId":"436","severity":1,"message":"592","line":14,"column":8,"nodeType":"438","messageId":"439","endLine":14,"endColumn":22},{"ruleId":"436","severity":1,"message":"593","line":25,"column":27,"nodeType":"438","messageId":"439","endLine":25,"endColumn":36},{"ruleId":"436","severity":1,"message":"594","line":26,"column":8,"nodeType":"438","messageId":"439","endLine":26,"endColumn":14},{"ruleId":"436","severity":1,"message":"482","line":56,"column":34,"nodeType":"438","messageId":"439","endLine":56,"endColumn":45},{"ruleId":"483","severity":1,"message":"484","line":259,"column":6,"nodeType":"485","endLine":259,"endColumn":23,"suggestions":"595"},{"ruleId":"436","severity":1,"message":"527","line":1,"column":47,"nodeType":"438","messageId":"439","endLine":1,"endColumn":53},{"ruleId":"436","severity":1,"message":"528","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":21},{"ruleId":"436","severity":1,"message":"458","line":8,"column":10,"nodeType":"438","messageId":"439","endLine":8,"endColumn":13},{"ruleId":"483","severity":1,"message":"596","line":22,"column":6,"nodeType":"485","endLine":22,"endColumn":22,"suggestions":"597"},{"ruleId":"436","severity":1,"message":"463","line":23,"column":9,"nodeType":"438","messageId":"439","endLine":23,"endColumn":17},{"ruleId":"436","severity":1,"message":"598","line":24,"column":9,"nodeType":"438","messageId":"439","endLine":24,"endColumn":20},{"ruleId":"436","severity":1,"message":"551","line":95,"column":9,"nodeType":"438","messageId":"439","endLine":95,"endColumn":13},{"ruleId":"483","severity":1,"message":"599","line":161,"column":6,"nodeType":"485","endLine":161,"endColumn":35,"suggestions":"600"},{"ruleId":"483","severity":1,"message":"601","line":11,"column":6,"nodeType":"438","endLine":11,"endColumn":18},{"ruleId":"483","severity":1,"message":"602","line":11,"column":6,"nodeType":"438","endLine":11,"endColumn":18,"suggestions":"603"},{"ruleId":"436","severity":1,"message":"460","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":12},{"ruleId":"436","severity":1,"message":"507","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":16},"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'local' is defined but never used.","'ec2Url' is defined but never used.","'Axios' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'useState' is defined but never used.","'createPortal' is defined but never used.","'makeStyles' is defined but never used.","'TreeView' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'PeopleAltIcon' is defined but never used.","'Link' is defined but never used.","'MarkunreadIcon' is defined but never used.","'BookmarkIcon' is defined but never used.","'app' is defined but never used.","'SWITCHARTICLE' is defined but never used.","'db' is defined but never used.","'firebase' is defined but never used.","'DragDropContext' is defined but never used.","'dispatch' is assigned a value but never used.","no-native-reassign",["604"],"no-negated-in-lhs",["605"],"'logo' is defined but never used.","'AccountBoxIcon' is defined but never used.","'InsertChartIcon' is defined but never used.","'HomeWorkIcon' is defined but never used.","'auth' is defined but never used.","'ExitToAppIcon' is defined but never used.","'MenuIcon' is defined but never used.",["604"],["605"],"'Header' is defined but never used.","'RSSHeader' is defined but never used.","'toast' is defined but never used.",["604"],["605"],"'draggableId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["606"],"'localUrl' is defined but never used.","'style' is defined but never used.","'Divider' is defined but never used.","'useSelector' is defined but never used.","'Router' is defined but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["607"],"'useHistory' is defined but never used.","'CheckFirebaseUserStatus' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["608"],"React Hook useEffect has missing dependencies: 'article.highLight' and 'initAricleHighLight'. Either include them or remove the dependency array.",["609"],"'unsubscribe' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'note'. Either include them or remove the dependency array.",["610"],"'articleStartTail' is assigned a value but never used.","'articleEndHead' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleMouseUp'. Either include it or remove the dependency array.",["611"],"'nanoid' is defined but never used.","'youtube' is assigned a value but never used.","'setYoutube' is assigned a value but never used.","'params' is assigned a value but never used.",["604"],["605"],"'dispatch' is defined but never used.",["612"],"'resolve' is defined but never used.",["604"],["605"],"'deleteRSS' is defined but never used.","'HomeIcon' is defined but never used.","'RssFeedIcon' is defined but never used.","'InboxIcon' is defined but never used.","'INITARTICLEFOLDERS' is defined but never used.","'errorCode' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'INITARTICLE' is defined but never used.","'channelFeeds' is assigned a value but never used.","'setChannelFeeds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.channelId'. Either include it or remove the dependency array.",["613"],"React Hook useEffect has a missing dependency: 'batchFetchAllFeeds'. Either include it or remove the dependency array.",["614"],"'FieldValue' is defined but never used.","'AddCircleIcon' is defined but never used.","'AddIcon' is defined but never used.","'CreateNewFolderIcon' is defined but never used.","'ExploreIcon' is defined but never used.","'TodayIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'LocalOfferOutlinedIcon' is defined but never used.","'setExpanded' is assigned a value but never used.","'folderStyle' is assigned a value but never used.","'addNewGroup' is defined but never used.","'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserRSSList'. Either include it or remove the dependency array.",["615"],"'RSS' is assigned a value but never used.","'setRSS' is assigned a value but never used.","'user' is assigned a value but never used.","'applyMiddleware' is defined but never used.",["604"],["605"],"'blue' is defined but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.",["604"],["605"],["604"],["605"],"'lastVisibleNumber' is assigned a value but never used.",["616"],"React Hook useEffect has a missing dependency: 'fetchChannelFeed'. Either include it or remove the dependency array.",["617"],"'youtube' is defined but never used.","'searchFeedUrl' is assigned a value but never used.",["618"],"'RSSParser' is defined but never used.","'AddArticle' is defined but never used.","'teamImg' is defined but never used.","'render' is defined but never used.","'memberEmailList' is assigned a value but never used.","'setMemberEmailList' is assigned a value but never used.",["619"],"'dataSet' is defined but never used.","'dataSet2' is defined but never used.","'color' is defined but never used.","'id' is defined but never used.","React Hook useEffect has a missing dependency: 'initGraphData'. Either include it or remove the dependency array.",["620"],"'useMemo' is defined but never used.","'useDispatch' is defined but never used.","'RSSCard' is defined but never used.","'RSSPage' is defined but never used.","'showPage' is assigned a value but never used.","'setShowPage' is assigned a value but never used.",["604"],["605"],["621"],["622"],"'FolderOpenIcon' is defined but never used.","'Droppable' is defined but never used.","'Folder' is defined but never used.",["623"],"React Hook useMemo has an unnecessary dependency: 'selectCategory'. Either exclude it or remove the dependency array.",["624"],"'userRSSList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'BackEndRSSList', 'FrontEndRSSList', 'PMRSSList', 'TechRSSList', 'UIUXRSSList', and 'batchFetchAllFeeds'. Either include them or remove the dependency array.",["625"],"React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["626"],"no-global-assign","no-unsafe-negation",{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"639","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"639","fix":"656"},{"desc":"639","fix":"657"},{"desc":"627","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},"Update the dependencies array to be: [user, tabChange, dispatch]",{"range":"665","text":"666"},"Update the dependencies array to be: [dispatch, history, location.pathname]",{"range":"667","text":"668"},"Update the dependencies array to be: [id, user]",{"range":"669","text":"670"},"Update the dependencies array to be: [article.highLight, articleLoaded, initAricleHighLight]",{"range":"671","text":"672"},"Update the dependencies array to be: [id, note]",{"range":"673","text":"674"},"Update the dependencies array to be: [handleMouseUp, renderArticle]",{"range":"675","text":"676"},"Update the dependencies array to be: [dispatch, user]",{"range":"677","text":"678"},"Update the dependencies array to be: [props.channelId, userRSSList]",{"range":"679","text":"680"},"Update the dependencies array to be: [props.channelId, lastVisible, batchFetchAllFeeds]",{"range":"681","text":"682"},"Update the dependencies array to be: [getUserRSSList, user]",{"range":"683","text":"684"},"Update the dependencies array to be: [userRSSList, lastVisible, batchFetchAllFeeds]",{"range":"685","text":"686"},"Update the dependencies array to be: [ChannelRSSId, fetchChannelFeed]",{"range":"687","text":"688"},{"range":"689","text":"678"},"Update the dependencies array to be: [dispatch, groupId]",{"range":"690","text":"691"},"Update the dependencies array to be: [user, articleList, initGraphData]",{"range":"692","text":"693"},{"range":"694","text":"678"},{"range":"695","text":"678"},{"range":"696","text":"666"},"Update the dependencies array to be: []",{"range":"697","text":"698"},"Update the dependencies array to be: [selectCategory, lastVisible, batchFetchAllFeeds, FrontEndRSSList, BackEndRSSList, PMRSSList, UIUXRSSList, TechRSSList]",{"range":"699","text":"700"},"Update the dependencies array to be: [renderChartFn]",{"range":"701","text":"702"},[5879,5896],"[user, tabChange, dispatch]",[880,899],"[dispatch, history, location.pathname]",[2622,2628],"[id, user]",[3837,3852],"[article.highLight, articleLoaded, initAricleHighLight]",[5032,5034],"[id, note]",[14932,14947],"[handleMouseUp, renderArticle]",[1180,1186],"[dispatch, user]",[4743,4756],"[props.channelId, userRSSList]",[4838,4868],"[props.channelId, lastVisible, batchFetchAllFeeds]",[5053,5059],"[getUserRSSList, user]",[4206,4232],"[userRSSList, lastVisible, batchFetchAllFeeds]",[4284,4298],"[ChannelRSSId, fetchChannelFeed]",[3119,3125],[2417,2426],"[dispatch, groupId]",[5875,5894],"[user, articleList, initGraphData]",[1225,1231],[3054,3060],[8436,8453],[863,879],"[]",[4590,4619],"[selectCategory, lastVisible, batchFetchAllFeeds, FrontEndRSSList, BackEndRSSList, PMRSSList, UIUXRSSList, TechRSSList]",[266,278],"[renderChartFn]"]