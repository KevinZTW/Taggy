[{"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx":"1","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx":"2","/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js":"3","/Users/kevinzhang/Documents/Taggy/client/app/src/data.js":"4","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx":"5","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/MD.jsx":"6","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx":"7","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx":"8","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx":"9","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js":"10","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx":"11","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx":"12","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx":"13","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx":"14","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js":"15","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js":"16","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx":"17","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx":"18","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx":"19","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx":"20","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx":"21","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx":"22","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx":"23","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx":"24","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx":"25","/Users/kevinzhang/Documents/Taggy/client/app/src/index.js":"26","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx":"27","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx":"28","/Users/kevinzhang/Documents/Taggy/client/app/src/config.js":"29","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js":"30","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js":"31","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx":"32","/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js":"33","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js":"34","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx":"35","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx":"36","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx":"37"},{"size":732,"mtime":1606899622921,"results":"38","hashOfConfig":"39"},{"size":1901,"mtime":1607586640904,"results":"40","hashOfConfig":"39"},{"size":298,"mtime":1606890120744,"results":"41","hashOfConfig":"39"},{"size":1041,"mtime":1607331654707,"results":"42","hashOfConfig":"39"},{"size":1268,"mtime":1607530888226,"results":"43","hashOfConfig":"39"},{"size":1162,"mtime":1606789151511,"results":"44","hashOfConfig":"39"},{"size":1096,"mtime":1607331654660,"results":"45","hashOfConfig":"39"},{"size":208,"mtime":1607331654631,"results":"46","hashOfConfig":"39"},{"size":1844,"mtime":1607331654642,"results":"47","hashOfConfig":"39"},{"size":1665,"mtime":1607331654716,"results":"48","hashOfConfig":"39"},{"size":10409,"mtime":1607527567287,"results":"49","hashOfConfig":"39"},{"size":2663,"mtime":1607510955146,"results":"50","hashOfConfig":"39"},{"size":4500,"mtime":1607527289123,"results":"51","hashOfConfig":"39"},{"size":6096,"mtime":1607530836726,"results":"52","hashOfConfig":"39"},{"size":963,"mtime":1607347055000,"results":"53","hashOfConfig":"39"},{"size":353,"mtime":1607331654747,"results":"54","hashOfConfig":"39"},{"size":689,"mtime":1607408024999,"results":"55","hashOfConfig":"39"},{"size":852,"mtime":1607422807319,"results":"56","hashOfConfig":"39"},{"size":1005,"mtime":1607331654610,"results":"57","hashOfConfig":"39"},{"size":1292,"mtime":1607491558410,"results":"58","hashOfConfig":"39"},{"size":4008,"mtime":1607331654637,"results":"59","hashOfConfig":"39"},{"size":611,"mtime":1607393736001,"results":"60","hashOfConfig":"39"},{"size":9626,"mtime":1607592132700,"results":"61","hashOfConfig":"39"},{"size":2078,"mtime":1607587851112,"results":"62","hashOfConfig":"39"},{"size":2908,"mtime":1607530694148,"results":"63","hashOfConfig":"39"},{"size":825,"mtime":1607415224800,"results":"64","hashOfConfig":"39"},{"size":3323,"mtime":1607423991997,"results":"65","hashOfConfig":"39"},{"size":1642,"mtime":1607331654684,"results":"66","hashOfConfig":"39"},{"size":142,"mtime":1606550687379,"results":"67","hashOfConfig":"39"},{"size":362,"mtime":1606271805707,"results":"68","hashOfConfig":"39"},{"size":16195,"mtime":1607392234658,"results":"69","hashOfConfig":"39"},{"size":3972,"mtime":1607324563402,"results":"70","hashOfConfig":"39"},{"size":1340,"mtime":1607331654713,"results":"71","hashOfConfig":"39"},{"size":751,"mtime":1607331654733,"results":"72","hashOfConfig":"39"},{"size":1873,"mtime":1607331654597,"results":"73","hashOfConfig":"39"},{"size":2166,"mtime":1606467072664,"results":"74","hashOfConfig":"39"},{"size":364,"mtime":1607331654750,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"1hszq7i",{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"133"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx",["175","176","177"],"import { Divider } from \"material-ui\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { auth } from \"../firebase.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SETMEMBER } from \"../redux/actions\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nexport default function MyRouter() {\n  let dispatch = useDispatch();\n\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        // setUser(user);\n        dispatch(SETMEMBER(user.uid, user.displayName, user.email));\n      } else {\n        history.push(\"/signup\");\n      }\n    });\n  }, [dispatch, history]);\n\n  return <div></div>;\n}\n",["178","179"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx",["180","181","182","183"],"/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js",["184","185"],"import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    console.log(ref.current);\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n",["186","187"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data.js",[],["188","189"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx",["190","191","192"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/MD.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx",[],["193","194"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx",["195"],"import React from \"react\";\n\nimport AddArticle from \"../AddArticle\";\n\nimport styles from \"./Header.module.css\";\n\nexport default function Header(props) {\n  return <header className={styles.header}></header>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx",["196","197"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { localUrl, ec2Url } from \"../../config.js\";\nimport styles from \"./FindRSS.module.css\";\nimport * as RSSParser from \"rss-parser\";\nimport { GETRSSRESPONSE } from \"../../redux/actions\";\nexport default function FindRSS(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function requestRSS(url) {\n    const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n    let parser = new RSSParser();\n    parser.parseURL(CORS_PROXY + url, function (err, feed) {\n      if (err) {\n        let parser = new RSSParser();\n        parser.parseURL(url, function (err, feed) {\n          if (err) {\n            throw dispatch(GETRSSRESPONSE(err));\n          }\n          dispatch(GETRSSRESPONSE(feed, url));\n        });\n        throw dispatch(GETRSSRESPONSE(err));\n      }\n      console.log(feed);\n      console.log(feed.title);\n      dispatch(GETRSSRESPONSE(feed, url));\n      feed.items.forEach(function (entry) {\n        console.log(entry.title + \":\" + entry.link);\n      });\n    });\n  }\n\n  return (\n    <div className={styles.addArticle}>\n      <div class={styles.addTitle}>Add new source to reach this world</div>\n      <form\n        className={styles.addForm}\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (user) {\n            requestRSS(reqUrl);\n          }\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"input\"\n          className={styles.input}\n          value={reqUrl}\n          onChange={(e) => setReqUrl(e.currentTarget.value)}\n        />\n        <button type=\"submit\" className={styles.add}>\n          搜尋\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js",[],["198","199"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx",["200","201"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"./Folder\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n\n    flexGrow: 1,\n    maxWidth: 400,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function FolderTab() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [editFolder, setEditFolder] = useState(false);\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [articleFolders, setArticleFolders] = useState([]);\n  console.log(articleFolders);\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n    }\n  }\n\n  useEffect(() => {\n    function getArticleFolders() {\n      if (user) {\n        app\n          .getMemberArticleFolders(user.uid)\n          .then((articleFolders) => {\n            console.log(articleFolders);\n            setArticleFolders(articleFolders);\n            return articleFolders;\n          })\n          .then(async (articleFolders) => {\n            let tempFolderList = [];\n            for (let i = 0; i < articleFolders.length; i++) {\n              let tags = await app.getMemberFolderTags(articleFolders[i].id);\n              console.log(tags);\n              tempFolderList.push({ ...articleFolders[i], tags: tags });\n            }\n            console.log(tempFolderList);\n            return tempFolderList;\n          })\n          .then((newFolder) => {\n            console.log(newFolder);\n            setArticleFolders(newFolder);\n          });\n      }\n    }\n    getArticleFolders();\n  }, [user]);\n\n  function showArticleFolders(folders) {\n    console.log(folders);\n    let articleFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        console.log(folders[i].tags);\n        articleFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"#5B5B5B\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {\n                  console.log(folders[i].id);\n                  // dispatch(SWITCHARTICLE(folders[i].id));\n                }}\n              >\n                <Folder\n                  user={user}\n                  folderTags={folders[i].tags}\n                  key={folders[i].id}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return articleFolderList;\n  }\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <Link to={\"/board\"}>\n          <div className={styles.sectionTitle}>Saved</div>\n          <TreeView\n            className={classes.root}\n            defaultExpanded={[\"\"]}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            <TreeItem\n              nodeId=\"tagAll\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <div className={styles.labelTitle}>All</div>\n                </div>\n              }\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            ></TreeItem>\n            <TreeItem\n              nodeId=\"unTag\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <MarkunreadIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                  <div className={styles.labelTitle}>Untaged</div>\n                </div>\n              }\n            />\n            <DragDropContext onDragEnd={onDragEnd}>\n              {articleFolderList}\n            </DragDropContext>\n          </TreeView>\n          {editFolder\n            ? createPortal(\n                <div className={styles.popup}>\n                  <div\n                    className={styles.blur}\n                    onClick={() => {\n                      setEditFolder(false);\n                    }}\n                  ></div>\n                  <div className={styles.addFolder}>\n                    <div className={styles.addTitle}>Add New Folder</div>\n                    <form id=\"addForm\" action=\"\">\n                      <input\n                        className={styles.input}\n                        type=\"text\"\n                        placeholder=\"Folder Name\"\n                        value={addFolderInput}\n                        onChange={(e) => {\n                          setAddFolderInput(e.target.value);\n                        }}\n                      />\n                      <button\n                        type=\"submit\"\n                        className={styles.saveBtn}\n                        form=\"addForm\"\n                        onClick={() => {\n                          if (user) {\n                            addArticleFolder(addFolderInput, user.uid);\n                            setEditFolder(false);\n                          } else {\n                            alert(\"Please login to add folder!\");\n                          }\n                        }}\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditFolder(false);\n                        }}\n                        className={styles.cancelBtn}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n                </div>,\n                document.body\n              )\n            : \"\"}\n          <div\n            className={styles.subTitle}\n            onClick={() => {\n              setEditFolder(true);\n            }}\n          >\n            Add Folder\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx",["202","203","204","205","206"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./FolderTab.module.css\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"#4F4F4F\",\n  },\n});\nexport default function Folder(props) {\n  console.log(\"rerender la \");\n  const classes = useStyles();\n  const [tags, setTags] = useState([]);\n  const dispatch = useDispatch();\n  let folderTags = props.folderTags;\n  // let user = props.user;\n  // useEffect(() => {\n  //   function getMemberFolderTags() {\n  //     if (user) {\n  //       app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //         setTags(folderTags);\n  //       });\n  //     }\n  //   }\n  //   getMemberFolderTags();\n  // }, [user]);\n  console.log(\"======================================\");\n  console.log(folderTags);\n  function showTabTreeList(tags) {\n    let tabList = [];\n    if (tags) {\n      let count = 0;\n      for (let i in tags) {\n        tabList.push(\n          <Draggable draggableId={tags[i].id} index={count} key={tags[i].id}>\n            {(provided) => (\n              <TreeItem\n                key={tags[i].id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n                nodeId={tags[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <BookmarkIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                    {tags[i].label ? (\n                      <div className={styles.labelTitle}>{tags[i].label}</div>\n                    ) : (\n                      <Skeleton\n                        className={classes.root}\n                        variant=\"rect\"\n                        width={100}\n                        height={12}\n                        animation=\"pulse\"\n                      />\n                    )}\n                  </div>\n                }\n                onClick={() => {\n                  console.log(tags[i].id);\n                  dispatch(SWITCHARTICLE(tags[i].id));\n                }}\n              />\n            )}\n          </Draggable>\n        );\n        count++;\n      }\n    }\n    return tabList;\n  }\n  const tabList = showTabTreeList(folderTags);\n  return <div>{tabList}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx",["207","208","209","210"],"import { useLocation, useHistory } from \"react-router-dom\";\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db, CheckFirebaseUserStatus } from \"../../firebase.js\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport styles from \"../../css/Article.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport ReactQuill from \"react-quill\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useSelector } from \"react-redux\";\nimport \"react-quill/dist/quill.snow.css\";\nexport default function Article() {\n  let [tags, setTags] = useState({});\n  let [article, setArticle] = useState({});\n  let [note, setNote] = useState(\"\");\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n  let id = params.get(\"id\");\n  let user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const customStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      background: \"black\",\n      borderBottom: \"1px solid gray\",\n      color: \"white\",\n      padding: 10,\n    }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? null\n          : isSelected\n          ? data.color\n          : isFocused\n          ? \"#dcdcdc\"\n          : null,\n        color: isFocused ? \"#39382e\" : \"#dcdcdc\",\n\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n        \":active\": {\n          ...styles[\":active\"],\n          backgroundColor: !isDisabled && (isSelected ? data.color : \"green\"),\n        },\n      };\n    },\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"#121212\",\n      minWidth: \"300px\",\n    }),\n  };\n  useEffect(() => {\n    if (user) {\n      console.log(\"useeffect run\");\n\n      app.initArticleTags(id, user.uid).then((articleTagSelection) => {\n        console.log(articleTagSelection);\n        setTags(articleTagSelection);\n      });\n    }\n  }, [user]);\n  function handleChange(newValue, actionMeta) {\n    switch (actionMeta.action) {\n      case \"select-option\":\n        console.log(\"select option!\");\n        app.inputTag(id, user.uid, actionMeta.option.label);\n        setTags({ ...tags, values: newValue });\n        break;\n      case \"remove-value\":\n        app.deleteTagFromArticle(id, user.uid, actionMeta.removedValue.tagId);\n        setTags({ ...tags, values: newValue });\n        break;\n      default:\n        console.group(\"Value Changed\");\n        console.log(\"newvalueis \", newValue);\n\n        console.dir(`action: ${actionMeta.action}`);\n        console.dir(actionMeta.removedValue);\n        console.groupEnd();\n    }\n  }\n\n  function handleCreate(inputValue) {\n    console.group(\"Option created\");\n\n    console.log(tags);\n    app.inputTag(id, user.uid, inputValue);\n    setTags({\n      options: [...tags.options, { label: inputValue, value: inputValue }],\n      values: [...tags.values, { label: inputValue, value: inputValue }],\n    });\n    console.log(tags);\n    console.groupEnd();\n  }\n  useEffect(() => {\n    function getArticles() {\n      db.collection(\"Articles\")\n        .doc(id)\n        .onSnapshot(function (doc) {\n          if (doc.data() !== undefined) {\n            setArticle({\n              title: doc.data().title,\n              readerHtml: doc.data().readerHtml,\n            });\n          }\n        });\n    }\n    getArticles();\n  }, []);\n\n  return (\n    <div className={styles.articleWrapper}>\n      <div className={styles.head}>\n        <Link to={\"/board\"}>\n          <ArrowBack style={{ color: \"#FFFCEC\" }} />\n        </Link>\n      </div>\n      <div className={styles.title}>{article.title}</div>\n      <div className={styles.tagWrapper}>\n        <CreatableSelect\n          isMulti\n          width=\"200px\"\n          menuColor=\"red\"\n          styles={customStyles}\n          onChange={handleChange}\n          onCreateOption={handleCreate}\n          options={tags.options}\n          defaultValue={tags.values}\n          value={tags.values}\n        />\n      </div>\n      <div className={styles.articleMain}>\n        <div\n          className={styles.articleBody}\n          dangerouslySetInnerHTML={{ __html: article.readerHtml }}\n        ></div>\n        <div className={styles.note}>\n          <div>Your Summary</div>\n          <ReactQuill\n            theme=\"snow\"\n            value={note}\n            onChange={(e) => {\n              setNote(e);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n",["211","212"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx",["213","214","215","216","217","218"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx",["219"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst RSS_Reducer = (state = { feed: {}, ChannelRSSId: \"all\" }, action) => {\n  switch (action.type) {\n    case \"GETRSSRESPONSE\":\n      return {\n        ...state,\n        feed: action.feed,\n        url: action.url,\n      };\n\n    case \"SWITCHRSS\":\n      return {\n        ...state,\n        ChannelRSSId: action.ChannelRSSId,\n      };\n    case \"INITUSERRSSLIST\":\n      return {\n        ...state,\n        UserRSSList: action.RSSList,\n      };\n    case \"SETUSERALLFEEDS\":\n      return {\n        ...state,\n        userAllFeeds: [...state.userAllFeeds, action.userAllFeeds],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default RSS_Reducer;\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx",["220"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx",["221","222"],"import React, { useState } from \"react\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nexport default function Signup() {\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        console.log(authResult.uid);\n        console.log(redirectUrl);\n        await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .set({\n            uid: authResult.uid,\n            email: authResult.email,\n            displaynamename: authResult.displayName,\n          })\n\n          .then(() => console.log(\"Add user to db successfully\"))\n          .then(history.push(\"board\"))\n          .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n          });\n      },\n    },\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  function firebaseSignUp(name, email, password) {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user.user);\n        db.collection(\"Member\").doc(user.user.uid).set({\n          displaynamename: name,\n          email: email,\n          password: password,\n          uid: user.user.uid,\n        });\n      })\n      .then(() => {\n        var user = auth.currentUser;\n        user\n          .updateProfile({\n            displayName: name,\n          })\n          .then(() => console.log(\"update user name successfully\"));\n      })\n      .then(history.push(\"/board\"))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.block}>\n        <h2 className={styles.title}>Sign Up</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignUp(name, email, password);\n          }}\n        >\n          <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={name}\n              onChange={(e) => {\n                setName(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign Up</button>\n        </form>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        <div className={styles.login}>\n          <span>Already have an account? </span>\n          <Link to={\"/Signin\"}>Sign in</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["223","224"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx",["225"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst article_Reducer = (\n  state = {\n    tagSelected: \"all\",\n    articleList: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    // case \"DeleteTask\":\n    //   let remaintasks = state.tasks.filter((task) => task.id != action.id);\n\n    //   return { tasks: remaintasks };\n    case \"INITARTICLE\":\n      return {\n        ...state,\n\n        articleList: action.articleList,\n      };\n    case \"SWITCHARTICLE\":\n      return {\n        ...state,\n\n        tagSelected: action.tagSelected,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default article_Reducer;\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx",["226","227","228","229"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx",["230","231","232","233","234"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx",["235","236","237","238","239","240"],"/Users/kevinzhang/Documents/Taggy/client/app/src/index.js",["241"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(allReducers, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx",["242"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FindRSS from \"./FindRSS\";\nimport { db } from \"../../firebase.js\";\nimport RSSCard from \"./RSSCard\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\nexport default function Board(props) {\n  const [showPage, setShowPage] = useState(false);\n  const [feedItem, setFeedItem] = useState(\"\");\n  const dispatch = useDispatch();\n  console.log(\"rerender\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function renderFeedPage(feedItem) {\n    console.log(\"redner run again\");\n    console.log(feedItem);\n    return <RSSPage item={feedItem} />;\n  }\n\n  const ChannelRSSId = useSelector((state) => {\n    console.log(\"hihi\");\n    return state.RSSReducer.ChannelRSSId;\n  });\n  console.log(\"rerender channelid is \", ChannelRSSId);\n\n  const searchFeed = useSelector((state) => {\n    return state.RSSReducer.feed;\n  });\n  const searchFeedUrl = useSelector((state) => {\n    return state.RSSReducer.url;\n  });\n\n  function renderSearchFeed(feed) {\n    let feedList = [];\n    for (let i in feed.items) {\n      feedList.push(\n        <RSSCard\n          item={feed.items[i]}\n          onClick={(e) => {\n            console.log(\"hihi\");\n            setShowPage(true);\n            setFeedItem(feed.items[i]);\n          }}\n        />\n      );\n    }\n\n    return (\n      <div className={styles.board}>\n        <h1 className={styles.title}>{feed.title}</h1>\n        <div\n          className={styles.content}\n          dangerouslySetInnerHTML={{ __html: feed.description }}\n        ></div>\n        {feed.title ? (\n          <button\n            className={styles.subscribe_btn}\n            onClick={() => {\n              app.subscribeRSS(user.uid, feed.title, searchFeedUrl, feed);\n            }}\n          >\n            Follow\n          </button>\n        ) : (\n          \"\"\n        )}\n        {feedList}\n      </div>\n    );\n  }\n  //   useEffect(() => {\n\n  //     if (searchFeed) {\n  //       checkArticleUpdate(user.uid);\n  //     }\n  //   }, [user]);\n  const feedPage = renderFeedPage(feedItem);\n  const searchOutcome = renderSearchFeed(searchFeed);\n\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.boardWrapper}>\n      <FindRSS className=\"headMemberIcon\" user={props.user} />\n      {searchOutcome}\n      {showPage ? (\n        <div className={styles.popup}>\n          <button\n            onClick={() => {\n              setShowPage(false);\n            }}\n          >\n            Close Page\n          </button>\n          {feedPage}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/config.js",[],["243","244"],"/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js",[],["245","246"],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js",["247","248"],"import { resolve } from \"path\";\nimport firebase from \"firebase/app\";\nimport { db, FieldValue } from \"../firebase.js\";\n\nexport const app = {};\napp.getMemberArticleFolders = function (uid) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          let articleFolderIds = doc.data().articleFolders;\n          let articleFolders = [];\n          console.log(articleFolderIds);\n          if (articleFolderIds !== \"\" && articleFolderIds) {\n            for (let i in articleFolderIds) {\n              console.log(articleFolderIds[i]);\n              await db\n                .collection(\"articleFolders\")\n                .doc(articleFolderIds[i])\n                .get()\n                .then((doc) => {\n                  articleFolders.push({\n                    id: doc.data().id,\n                    name: doc.data().name,\n                    tags: doc.data().tags,\n                  });\n                });\n            }\n          }\n          resolve(articleFolders);\n        } else resolve(\"dont have this user\");\n      });\n  });\n};\napp.getMemberFolderTags = function (folderId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"articleFolders\")\n      .doc(folderId)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          let tagIds = doc.data().tags;\n          let folderTags = [];\n          console.log(tagIds);\n          if (tagIds !== \"\" && tagIds) {\n            for (let i in tagIds) {\n              console.log(tagIds[i]);\n              await db\n                .collection(\"Tags\")\n                .doc(tagIds[i])\n                .get()\n                .then((doc) => {\n                  folderTags.push({\n                    id: tagIds[i],\n                    value: doc.data().name,\n                    label: doc.data().name,\n                  });\n                });\n            }\n          }\n          resolve(folderTags);\n        } else resolve(\"\");\n      });\n  });\n};\n\napp.getArticleTags = function (articleId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Articles\")\n      .doc(articleId)\n      .get()\n      .then((doc) => {\n        let tags = doc.data().tags;\n\n        let articleTags = [];\n        if (tags) {\n          for (let i in tags) {\n            db.collection(\"Tags\")\n              .doc(tags[i])\n              .get()\n              .then((doc) => {\n                console.log(doc.data());\n                articleTags.push({\n                  tagId: tags[i],\n                  label: doc.data().name,\n                  value: doc.data().name,\n                });\n              });\n            resolve(articleTags);\n          }\n        } else {\n          resolve(\"\");\n        }\n      });\n  });\n};\n\napp.getMemberTags = function (uid) {\n  return new Promise((resolve, reject) => {\n    console.log(uid);\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        console.log(doc.data());\n        if (doc.data()) {\n          let tagIds = doc.data().tags;\n          let memberTags = [];\n          console.log(tagIds);\n          if (tagIds !== \"\" && tagIds) {\n            for (let i in tagIds) {\n              console.log(tagIds[i]);\n              await db\n                .collection(\"Tags\")\n                .doc(tagIds[i])\n                .get()\n                .then((doc) => {\n                  memberTags.push({\n                    id: tagIds[i],\n                    value: doc.data().name,\n                    label: doc.data().name,\n                  });\n                });\n            }\n          }\n          console.log(memberTags);\n          console.log(\"1\");\n          resolve(memberTags);\n        } else resolve(\"\");\n      });\n  });\n};\n\napp.initArticleTags = async function (articleId, uid) {\n  let articleTagSelection = {};\n  await app.getArticleTags(articleId).then((articleTags) => {\n    articleTagSelection.values = articleTags;\n  });\n  await app.getMemberTags(uid).then((memberTags) => {\n    articleTagSelection.options = memberTags;\n  });\n  console.log(articleTagSelection);\n  return articleTagSelection;\n};\n\napp.checkTagUnderUser = function (name, uid) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        console.log(uid);\n        if (doc.data()) {\n          let tags = doc.data().tags;\n          console.log(tags);\n          if (tags) {\n            for (let i in tags) {\n              await db\n                .collection(\"Tags\")\n                .doc(tags[i])\n                .get()\n                .then((doc) => {\n                  if (doc.data().name === name) {\n                    console.log(doc.data().name);\n                    console.log(\"resolve the id\");\n                    resolve(doc.data().id);\n                  }\n                });\n            }\n            resolve(\"notExist\");\n          } else {\n            resolve(\"noanytag\");\n          }\n        } else {\n          resolve(\"nothisuser\");\n        }\n      });\n  });\n};\napp.inputTag = function (articleId, uid, tagName) {\n  console.log(uid);\n  app.checkTagUnderUser(tagName, uid).then((tagId) => {\n    console.log(tagId);\n    if (tagId === \"noanytag\") {\n      db.collection(\"Tags\")\n        .add({\n          name: tagName,\n          articles: [articleId],\n        })\n        .then(function (docRef) {\n          console.log(\"Document written with ID: \", docRef.id);\n\n          docRef.update({ id: docRef.id });\n          return docRef.id;\n        })\n        .then((tagId) => {\n          db.collection(\"Articles\")\n            .doc(articleId)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n          return tagId;\n        })\n        .then((tagId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({ tags: [tagId] });\n          return tagId;\n        })\n        .then((tagId) => {\n          db.collection(\"articleFolders\")\n            .doc(\"un\" + uid)\n            .set({\n              id: \"un\" + uid,\n              name: \"Uncategorized\",\n              tags: firebase.firestore.FieldValue.arrayUnion(tagId),\n            })\n            .then(() => {\n              db.collection(\"Member\")\n                .doc(uid)\n                .update({\n                  articleFolders: firebase.firestore.FieldValue.arrayUnion(\n                    \"un\" + uid\n                  ),\n                });\n            });\n        })\n        .catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n    } else if (tagId === \"notExist\") {\n      console.log(\"user dont have this tag, CREAT AND ADD to ARTICLE\");\n      db.collection(\"Tags\")\n        .add({\n          name: tagName,\n          articles: [articleId],\n        })\n        .then(function (docRef) {\n          console.log(\"Document written with ID: \", docRef.id);\n\n          docRef.update({ id: docRef.id });\n          return docRef.id;\n        })\n        .then((tagId) => {\n          db.collection(\"Articles\")\n            .doc(articleId)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n          return tagId;\n        })\n        .then((tagId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n          return tagId;\n        })\n        .then((tagId) => {\n          console.log(\"tag add to :\", \"un\" + uid, \"value is\", tagId);\n          db.collection(\"articleFolders\")\n            .doc(\"un\" + uid)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n        })\n\n        .catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n    } else {\n      console.log(\"user already has this tag, ADD ATICLE\");\n      db.collection(\"Tags\")\n        .doc(tagId)\n        .update({\n          articles: firebase.firestore.FieldValue.arrayUnion(articleId),\n        });\n      db.collection(\"Articles\")\n        .doc(articleId)\n        .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n    }\n  });\n};\napp.deleteTagFromArticle = function (articleId, uid, tagId) {\n  db.collection(\"Articles\")\n    .doc(articleId)\n    .update({ tags: firebase.firestore.FieldValue.arrayRemove(tagId) });\n};\n\napp.checkRSSInFetchList = function (url) {\n  return new Promise((resolve, reject) => {\n    console.log(url);\n    db.collection(\"RSSFetchList\")\n      .where(\"url\", \"==\", url)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.empty) {\n          console.log(\"not in fetch list\");\n          resolve(false);\n        } else {\n          snapshot.forEach((doc) => {\n            if (doc.data()) {\n              console.log(\"already id fetch list, the id is:\");\n              resolve(doc.data().id);\n            } else {\n              console.log(\"sth pretty weird happened\");\n            }\n          });\n        }\n      });\n  });\n};\napp.addRSSToFetchList = function (feed, url) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"RSSFetchList\")\n      .add({\n        title: feed.title || \"null\",\n        url: url || \"null\",\n        link: feed.link || \"null\",\n        description: feed.description || \"null\",\n        img: (feed.image || {}).url || \"null\",\n        lastUpdate: feed.lastBuildDate || \"null\",\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => resolve(id));\n  });\n};\napp.checkUserHasUncaFolder = function (uid) {\n  return new Promise((resolve, reject) => {\n    console.log(uid);\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        if (doc.data().RSSFolders.includes(\"unCa_\" + uid)) {\n          resolve(true);\n        } else resolve(false);\n      });\n  });\n};\n\napp.addRSSToMember = function (uid, feedId) {\n  return new Promise(async (resolve, reject) => {\n    if (!(await app.checkUserHasUncaFolder(uid))) {\n      console.log(\"user dont have unCat folder, create and as RSS to it \");\n      db.collection(\"RSSFolders\")\n        .doc(\"unCa_\" + uid)\n        .set({\n          uid: uid,\n          name: \"Uncategorized\",\n          RSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n          id: \"unCa_\" + uid,\n        })\n        .then((folderId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({\n              subscribedRSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n              RSSFolders: firebase.firestore.FieldValue.arrayUnion(\n                \"unCa_\" + uid\n              ),\n            })\n            .then(console.log(\"successfully add to user\"));\n        });\n    } else {\n      console.log(\"user already has unCat folder, as RSS to it \");\n      db.collection(\"RSSFolders\")\n        .doc(\"unCa_\" + uid)\n        .update({\n          RSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n        })\n        .then((folderId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({\n              subscribedRSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n            })\n            .then(console.log(\"successfully add to user\"));\n        });\n    }\n  });\n};\n\napp.subscribeRSS = async function (uid, title, url, feed) {\n  console.log(\"add to \", uid, title, url);\n  app.checkRSSInFetchList(url).then((RSSId) => {\n    if (RSSId) {\n      console.log(\"RSS already in Fetch List\");\n      app.addRSSToMember(uid, RSSId);\n    } else {\n      console.log(\"Add RSS to fetch List\");\n      app.addRSSToFetchList(feed, url).then((RSSId) => {\n        console.log(\"add RSS to member\");\n        app.addRSSToMember(uid, RSSId);\n        console.log(\"Add feed to RSSItem\");\n        app.addRSSItem(feed, RSSId);\n      });\n    }\n  });\n};\napp.checkRSSItem = function (title, item) {\n  return db\n    .collection(\"RSSItem\")\n    .where(\"title\", \"==\", title)\n    .get()\n    .then((snapShot) => {\n      let titleList = [];\n      snapShot.forEach((doc) => {\n        titleList.push(doc.data().itemTitle);\n      });\n      console.log(titleList);\n      console.log(item.title);\n      console.log(titleList.includes(item.title));\n      if (titleList.includes(item.title)) {\n        console.log(\"already in db\");\n        return false;\n      } else console.log(\"check and not in db \");\n      return true;\n    });\n};\napp.addRSSItem = function (feed, RSSId) {\n  for (let i in feed.items) {\n    app.checkRSSItem(feed.title, feed.items[i]).then((evaluate) => {\n      console.log(evaluate);\n      if (evaluate) {\n        console.log(\"this feed not in db, let's save it \");\n        db.collection(\"RSSItem\")\n          .add({\n            RSSId: RSSId,\n            content: feed.items[i].content || \"null\",\n            contentSnippet: feed.items[i].contentSnippet || \"null\",\n            RSS: feed.title || \"null\",\n            title: feed.items[i].title || \"null\",\n            creator: feed.items[i].creator || \"null\",\n            guid: feed.items[i].guid || \"null\",\n            isoDate: feed.items[i].isoDate || \"null\",\n            link: feed.items[i].link || \"null\",\n            pubDate: feed.items[i].pubDate || \"null\",\n            author: feed.items[i].author || \"null\",\n          })\n          .then((docRef) => docRef.update({ id: docRef.id }))\n          .then(console.log(\"store successfully!\"));\n      } else {\n        console.log(\"already store this feed, let's skip\");\n      }\n    });\n  }\n};\napp.getMemberRSSFolders = function (uid) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          let RSSFolderIds = doc.data().RSSFolders;\n          let RSSFolders = [];\n          console.log(RSSFolderIds);\n          if (RSSFolderIds !== \"\" && RSSFolderIds) {\n            for (let i in RSSFolderIds) {\n              console.log(RSSFolderIds[i]);\n              await db\n                .collection(\"RSSFolders\")\n                .doc(RSSFolderIds[i])\n                .get()\n                .then((doc) => {\n                  RSSFolders.push({\n                    id: doc.data().id,\n                    name: doc.data().name,\n                    RSSIds: doc.data().RSS,\n                    RSS: [],\n                  });\n                });\n            }\n          }\n          resolve(RSSFolders);\n        } else resolve(\"dont have this user\");\n      });\n  });\n};\napp.getRSSInfo = function (RSSId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"RSSFetchList\")\n      .doc(RSSId)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          resolve({\n            id: doc.data().id,\n            title: doc.data().title,\n            url: doc.data().url,\n          });\n        }\n      });\n  });\n};\napp.getChannelFeeds = function (RSSId) {\n  return new Promise((resolve, reject) => {\n    let items = [];\n    db.collection(\"RSSItem\")\n      .where(\"RSSId\", \"==\", RSSId)\n      // .orderBy(\"isoDate\", \"desc\")\n      .get()\n      .then((snapShot) => {\n        snapShot.forEach((doc) => {\n          items.push({\n            RSSId: doc.data().RSSId,\n            content: doc.data().content,\n            contentSnippet: doc.data().contentSnippet,\n            RSS: doc.data().RSS,\n            title: doc.data().title,\n            creator: doc.data().creator,\n            guid: doc.data().guid,\n            isoDate: doc.data().isoDate,\n            link: doc.data().link,\n            pubDate: doc.data().pubDate,\n            author: doc.data().author,\n          });\n        });\n        resolve(items);\n      });\n  });\n};\napp.getFeedContent = function (feedId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"RSSItem\")\n      .doc(feedId)\n      .get()\n      .then((doc) => {\n        resolve({\n          RSSId: doc.data().RSSId,\n          content: doc.data().content,\n          contentSnippet: doc.data().contentSnippet,\n          RSS: doc.data().RSS,\n          title: doc.data().tilte,\n          creator: doc.data().creator,\n          guid: doc.data().guid,\n          isoDate: doc.data().isoDate,\n          link: doc.data().link,\n          pubDate: doc.data().pubDate,\n          author: doc.data().author,\n        });\n      });\n  });\n};\n\napp.getAllUserFeeds = function (uid) {};\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx",["249","250","251","252"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js",["253"],"import { resolve } from \"path\";\nimport { app } from \"./lib.js\";\napp.getGraphData = function (uid) {\n  return new Promise(async (resolve) => {\n    let memberTags = await app.getMemberTags(uid);\n    console.log(\"2\");\n    resolve(memberTags);\n  });\n};\n\napp.initGraphData = function (uid) {\n  return new Promise((resolve) => {\n    app\n      .getGraphData(uid)\n      .then((memberTags) => {\n        console.log(memberTags);\n        let nodes = [];\n        memberTags.forEach((tag) => {\n          nodes.push({\n            id: tag.value,\n            tagId: tag.id,\n          });\n        });\n        return nodes;\n      })\n      .then((nodes) => {\n        resolve({\n          nodes: nodes,\n          links: [],\n        });\n      });\n  });\n};\n\nexport { app };\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx",["254"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { localUrl, ec2Url } from \"../config.js\";\nimport \"../css/AddArticle.css\";\n\nexport default function AddArticle(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function postDataToServer(\n    url,\n    data = {\n      url: \"www.sylish.com\",\n      uid: \"12344\",\n    }\n  ) {\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n        response.json().then(function (data) {\n          console.log(data);\n        });\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  }\n  return (\n    <div className=\"addArticle\">\n      <input\n        type=\"text\"\n        name=\"input\"\n        className=\"input\"\n        value={reqUrl}\n        onChange={(e) => setReqUrl(e.currentTarget.value)}\n      />\n      <button\n        type=\"submit\"\n        className=\"add\"\n        onClick={(e) => {\n          if (user) {\n            e.preventDefault();\n            postDataToServer(localUrl, {\n              url: reqUrl,\n              uid: user.uid,\n            });\n          }\n        }}\n      >\n        儲存文章\n      </button>\n\n      <br />\n      {/* <a href=\"http://localhost:2000/route/article/before\">Before</a>\n      <br />\n      <a href=\"http://localhost:2000/route/article/after\">after</a>\n      <br />\n      <a href=\"http://localhost:2000/route/article/MD\">Mark Down</a> */}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx",["255","256","257","258"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { uiConfig, auth } from \"../../firebase.js\";\nexport default function Signup() {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  function firebaseSignIn(email, password) {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(\"you click sign in and successfully\");\n        history.push(\"/board\");\n        // Signed in\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className=\"block\" className={styles.block}>\n        <h2 className={styles.title}>Sign In</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignIn(email, password);\n          }}\n        >\n          {/* <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input type=\"text\" name=\"username\" />\n          </div> */}\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign In</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx",["259"],{"ruleId":"260","severity":1,"message":"261","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":17},{"ruleId":"260","severity":1,"message":"264","line":5,"column":23,"nodeType":"262","messageId":"263","endLine":5,"endColumn":34},{"ruleId":"260","severity":1,"message":"265","line":7,"column":27,"nodeType":"262","messageId":"263","endLine":7,"endColumn":33},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"260","severity":1,"message":"270","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":19},{"ruleId":"260","severity":1,"message":"271","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"272","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":14},{"ruleId":"260","severity":1,"message":"273","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":11,"column":6,"nodeType":"262","endLine":11,"endColumn":18},{"ruleId":"274","severity":1,"message":"276","line":11,"column":6,"nodeType":"262","endLine":11,"endColumn":18,"suggestions":"277"},{"ruleId":"266","replacedBy":"278"},{"ruleId":"268","replacedBy":"279"},{"ruleId":"266","replacedBy":"280"},{"ruleId":"268","replacedBy":"281"},{"ruleId":"260","severity":1,"message":"282","line":1,"column":28,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"283","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"274","severity":1,"message":"284","line":36,"column":6,"nodeType":"285","endLine":36,"endColumn":12,"suggestions":"286"},{"ruleId":"266","replacedBy":"287"},{"ruleId":"268","replacedBy":"288"},{"ruleId":"260","severity":1,"message":"289","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":18},{"ruleId":"260","severity":1,"message":"290","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":18},{"ruleId":"260","severity":1,"message":"291","line":3,"column":20,"nodeType":"262","messageId":"263","endLine":3,"endColumn":26},{"ruleId":"266","replacedBy":"292"},{"ruleId":"268","replacedBy":"293"},{"ruleId":"260","severity":1,"message":"294","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":20},{"ruleId":"260","severity":1,"message":"295","line":44,"column":34,"nodeType":"262","messageId":"263","endLine":44,"endColumn":45},{"ruleId":"260","severity":1,"message":"270","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":19},{"ruleId":"260","severity":1,"message":"296","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":13},{"ruleId":"260","severity":1,"message":"297","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":14},{"ruleId":"260","severity":1,"message":"298","line":22,"column":10,"nodeType":"262","messageId":"263","endLine":22,"endColumn":14},{"ruleId":"260","severity":1,"message":"299","line":22,"column":16,"nodeType":"262","messageId":"263","endLine":22,"endColumn":23},{"ruleId":"260","severity":1,"message":"300","line":1,"column":23,"nodeType":"262","messageId":"263","endLine":1,"endColumn":33},{"ruleId":"260","severity":1,"message":"301","line":5,"column":14,"nodeType":"262","messageId":"263","endLine":5,"endColumn":37},{"ruleId":"274","severity":1,"message":"302","line":67,"column":6,"nodeType":"285","endLine":67,"endColumn":12,"suggestions":"303"},{"ruleId":"274","severity":1,"message":"302","line":115,"column":6,"nodeType":"285","endLine":115,"endColumn":8,"suggestions":"304"},{"ruleId":"266","replacedBy":"305"},{"ruleId":"268","replacedBy":"306"},{"ruleId":"260","severity":1,"message":"307","line":6,"column":10,"nodeType":"262","messageId":"263","endLine":6,"endColumn":21},{"ruleId":"260","severity":1,"message":"308","line":18,"column":9,"nodeType":"262","messageId":"263","endLine":18,"endColumn":26},{"ruleId":"260","severity":1,"message":"309","line":19,"column":9,"nodeType":"262","messageId":"263","endLine":19,"endColumn":17},{"ruleId":"260","severity":1,"message":"310","line":100,"column":9,"nodeType":"262","messageId":"263","endLine":100,"endColumn":13},{"ruleId":"274","severity":1,"message":"311","line":145,"column":6,"nodeType":"285","endLine":145,"endColumn":32,"suggestions":"312"},{"ruleId":"274","severity":1,"message":"313","line":148,"column":6,"nodeType":"285","endLine":148,"endColumn":20,"suggestions":"314"},{"ruleId":"260","severity":1,"message":"315","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":16},{"ruleId":"260","severity":1,"message":"316","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"317","line":28,"column":17,"nodeType":"262","messageId":"263","endLine":28,"endColumn":26},{"ruleId":"260","severity":1,"message":"317","line":67,"column":13,"nodeType":"262","messageId":"263","endLine":67,"endColumn":22},{"ruleId":"266","replacedBy":"318"},{"ruleId":"268","replacedBy":"319"},{"ruleId":"260","severity":1,"message":"315","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":16},{"ruleId":"260","severity":1,"message":"320","line":11,"column":8,"nodeType":"262","messageId":"263","endLine":11,"endColumn":22},{"ruleId":"260","severity":1,"message":"294","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":20},{"ruleId":"274","severity":1,"message":"321","line":83,"column":6,"nodeType":"285","endLine":83,"endColumn":12,"suggestions":"322"},{"ruleId":"260","severity":1,"message":"295","line":139,"column":34,"nodeType":"262","messageId":"263","endLine":139,"endColumn":45},{"ruleId":"260","severity":1,"message":"270","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":19},{"ruleId":"260","severity":1,"message":"296","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":13},{"ruleId":"260","severity":1,"message":"323","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":13},{"ruleId":"260","severity":1,"message":"324","line":11,"column":15,"nodeType":"262","messageId":"263","endLine":11,"endColumn":21},{"ruleId":"260","severity":1,"message":"310","line":13,"column":7,"nodeType":"262","messageId":"263","endLine":13,"endColumn":11},{"ruleId":"260","severity":1,"message":"300","line":1,"column":23,"nodeType":"262","messageId":"263","endLine":1,"endColumn":33},{"ruleId":"260","severity":1,"message":"291","line":2,"column":20,"nodeType":"262","messageId":"263","endLine":2,"endColumn":26},{"ruleId":"260","severity":1,"message":"316","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":14},{"ruleId":"260","severity":1,"message":"325","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":12},{"ruleId":"260","severity":1,"message":"296","line":9,"column":10,"nodeType":"262","messageId":"263","endLine":9,"endColumn":13},{"ruleId":"260","severity":1,"message":"326","line":18,"column":7,"nodeType":"262","messageId":"263","endLine":18,"endColumn":13},{"ruleId":"260","severity":1,"message":"327","line":6,"column":23,"nodeType":"262","messageId":"263","endLine":6,"endColumn":38},{"ruleId":"274","severity":1,"message":"284","line":105,"column":6,"nodeType":"285","endLine":105,"endColumn":12,"suggestions":"328"},{"ruleId":"266","replacedBy":"329"},{"ruleId":"268","replacedBy":"330"},{"ruleId":"266","replacedBy":"331"},{"ruleId":"268","replacedBy":"332"},{"ruleId":"260","severity":1,"message":"333","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":17},{"ruleId":"260","severity":1,"message":"334","line":3,"column":14,"nodeType":"262","messageId":"263","endLine":3,"endColumn":24},{"ruleId":"260","severity":1,"message":"335","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":17},{"ruleId":"260","severity":1,"message":"336","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":18},{"ruleId":"260","severity":1,"message":"337","line":17,"column":12,"nodeType":"262","messageId":"263","endLine":17,"endColumn":17},{"ruleId":"260","severity":1,"message":"338","line":48,"column":11,"nodeType":"262","messageId":"263","endLine":48,"endColumn":13},{"ruleId":"260","severity":1,"message":"333","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":17},{"ruleId":"260","severity":1,"message":"291","line":3,"column":20,"nodeType":"262","messageId":"263","endLine":3,"endColumn":26},{"ruleId":"260","severity":1,"message":"316","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":14},{"ruleId":"260","severity":1,"message":"339","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":26},{"ruleId":"260","severity":1,"message":"340","line":7,"column":10,"nodeType":"262","messageId":"263","endLine":7,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":29,"column":30,"nodeType":"343","endLine":29,"endColumn":54},{"ruleId":"260","severity":1,"message":"315","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":16},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Router' is defined but never used.","no-native-reassign",["344"],"no-negated-in-lhs",["345"],"'useEffect' is defined but never used.","'auth' is defined but never used.","'Header' is defined but never used.","'RSSHeader' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["346"],["344"],["345"],["344"],["345"],"'useState' is defined but never used.","'dispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["347"],["344"],["345"],"'AddArticle' is defined but never used.","'localUrl' is defined but never used.","'ec2Url' is defined but never used.",["344"],["345"],"'BookmarkIcon' is defined but never used.","'draggableId' is assigned a value but never used.","'app' is defined but never used.","'blue' is defined but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'useHistory' is defined but never used.","'CheckFirebaseUserStatus' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["348"],["349"],["344"],["345"],"'INITARTICLE' is defined but never used.","'lastVisibleNumber' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'batchFetchAllFeeds'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'fetchChannelFeed'. Either include it or remove the dependency array.",["351"],"'nanoid' is defined but never used.","'Link' is defined but never used.","'errorCode' is assigned a value but never used.",["344"],["345"],"'MarkunreadIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserRSSList'. Either include it or remove the dependency array.",["352"],"'RSS' is assigned a value but never used.","'setRSS' is assigned a value but never used.","'db' is defined but never used.","'params' is assigned a value but never used.","'applyMiddleware' is defined but never used.",["353"],["344"],["345"],["344"],["345"],"'resolve' is defined but never used.","'FieldValue' is defined but never used.","'dataSet' is defined but never used.","'dataSet2' is defined but never used.","'color' is defined but never used.","'id' is defined but never used.","'StyledFirebaseAuth' is defined but never used.","'uiConfig' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"356","fix":"368"},"Update the dependencies array to be: [renderChartFn]",{"range":"369","text":"370"},"Update the dependencies array to be: [dispatch, user]",{"range":"371","text":"372"},"Update the dependencies array to be: [id, user]",{"range":"373","text":"374"},"Update the dependencies array to be: [id]",{"range":"375","text":"376"},"Update the dependencies array to be: [userRSSList, lastVisible, batchFetchAllFeeds]",{"range":"377","text":"378"},"Update the dependencies array to be: [ChannelRSSId, fetchChannelFeed]",{"range":"379","text":"380"},"Update the dependencies array to be: [getUserRSSList, user]",{"range":"381","text":"382"},{"range":"383","text":"372"},[266,278],"[renderChartFn]",[1138,1144],"[dispatch, user]",[1998,2004],"[id, user]",[3414,3416],"[id]",[4194,4220],"[userRSSList, lastVisible, batchFetchAllFeeds]",[4272,4286],"[ChannelRSSId, fetchChannelFeed]",[2595,2601],"[getUserRSSList, user]",[2880,2886]]