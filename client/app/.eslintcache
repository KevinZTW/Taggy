[{"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx":"1","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx":"2","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx":"3","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFolderTab.jsx":"4","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx":"5","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSChannel.jsx":"6","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx":"7","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx":"8","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Landing.jsx":"9","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js":"10","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx":"11","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/GraphBoard.jsx":"12","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx":"13","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph.jsx":"14","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx":"15","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx":"16","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today.jsx":"17","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Explore.jsx":"18","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx":"19","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx":"20","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js":"21","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSSearch.jsx":"22","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx":"23","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today_RSSList.js":"24","/Users/kevinzhang/Documents/Taggy/client/app/src/test/firestore_test_config.js":"25","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx":"26","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx":"27","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/MobileRSSTab.jsx":"28","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx":"29","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx":"30","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/SearchRSS.jsx":"31","/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx":"32","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx":"33","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx":"34","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx":"35","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js":"36","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx":"37","/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js":"38","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx":"39","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx":"40","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js":"41","/Users/kevinzhang/Documents/Taggy/client/app/src/index.js":"42","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js":"43","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Mobile_Burger.jsx":"44","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx":"45","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFunctionTab.jsx":"46","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js":"47","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/group_Reducer.js":"48"},{"size":3200,"mtime":1610379943175,"results":"49","hashOfConfig":"50"},{"size":3729,"mtime":1610381462821,"results":"51","hashOfConfig":"50"},{"size":2975,"mtime":1610381505056,"results":"52","hashOfConfig":"50"},{"size":11605,"mtime":1610381251293,"results":"53","hashOfConfig":"50"},{"size":4287,"mtime":1610380470474,"results":"54","hashOfConfig":"50"},{"size":4801,"mtime":1610380926073,"results":"55","hashOfConfig":"50"},{"size":1885,"mtime":1610381085132,"results":"56","hashOfConfig":"50"},{"size":2110,"mtime":1610381178917,"results":"57","hashOfConfig":"50"},{"size":1336,"mtime":1610275221118,"results":"58","hashOfConfig":"50"},{"size":17865,"mtime":1610381413045,"results":"59","hashOfConfig":"50"},{"size":14656,"mtime":1610381485897,"results":"60","hashOfConfig":"50"},{"size":1235,"mtime":1610381511023,"results":"61","hashOfConfig":"50"},{"size":3870,"mtime":1610381468019,"results":"62","hashOfConfig":"50"},{"size":5927,"mtime":1610380610379,"results":"63","hashOfConfig":"50"},{"size":1642,"mtime":1610380650838,"results":"64","hashOfConfig":"50"},{"size":13458,"mtime":1610380744662,"results":"65","hashOfConfig":"50"},{"size":6078,"mtime":1610380284276,"results":"66","hashOfConfig":"50"},{"size":6600,"mtime":1610380932988,"results":"67","hashOfConfig":"50"},{"size":2811,"mtime":1610328448240,"results":"68","hashOfConfig":"50"},{"size":7423,"mtime":1610379456789,"results":"69","hashOfConfig":"50"},{"size":1187,"mtime":1610381429643,"results":"70","hashOfConfig":"50"},{"size":2595,"mtime":1610381143499,"results":"71","hashOfConfig":"50"},{"size":11642,"mtime":1610381204337,"results":"72","hashOfConfig":"50"},{"size":265,"mtime":1609419007521,"results":"73","hashOfConfig":"50"},{"size":609,"mtime":1609234640291,"results":"74","hashOfConfig":"50"},{"size":1276,"mtime":1610327503053,"results":"75","hashOfConfig":"50"},{"size":645,"mtime":1610381565275,"results":"76","hashOfConfig":"50"},{"size":14044,"mtime":1610380908138,"results":"77","hashOfConfig":"50"},{"size":3937,"mtime":1610380827457,"results":"78","hashOfConfig":"50"},{"size":4540,"mtime":1610380812578,"results":"79","hashOfConfig":"50"},{"size":2179,"mtime":1610380521997,"results":"80","hashOfConfig":"50"},{"size":721,"mtime":1610380569762,"results":"81","hashOfConfig":"50"},{"size":6817,"mtime":1610381517812,"results":"82","hashOfConfig":"50"},{"size":4535,"mtime":1610380768913,"results":"83","hashOfConfig":"50"},{"size":4138,"mtime":1610379203568,"results":"84","hashOfConfig":"50"},{"size":362,"mtime":1606271805707,"results":"85","hashOfConfig":"50"},{"size":339,"mtime":1610381560493,"results":"86","hashOfConfig":"50"},{"size":268,"mtime":1610381397746,"results":"87","hashOfConfig":"50"},{"size":2410,"mtime":1610379728075,"results":"88","hashOfConfig":"50"},{"size":13692,"mtime":1610381168047,"results":"89","hashOfConfig":"50"},{"size":701,"mtime":1610381402794,"results":"90","hashOfConfig":"50"},{"size":613,"mtime":1610381444486,"results":"91","hashOfConfig":"50"},{"size":1730,"mtime":1610381530315,"results":"92","hashOfConfig":"50"},{"size":1177,"mtime":1609305189403,"results":"93","hashOfConfig":"50"},{"size":951,"mtime":1610381547216,"results":"94","hashOfConfig":"50"},{"size":2443,"mtime":1610379511107,"results":"95","hashOfConfig":"50"},{"size":429,"mtime":1609419007560,"results":"96","hashOfConfig":"50"},{"size":573,"mtime":1610381553775,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"qgo3cu",{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx",["206","207"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { app } from \"../lib/lib.js\";\nimport { db } from \"../firebase.js\";\nimport React, { useEffect } from \"react\";\nimport CardWrapper from \"./CardWrapper.jsx\";\n\nimport styles from \"./Board.module.css\";\nimport {\n  ADDFETCHARTICLE,\n  SWITCHARTICLEFETCH,\n  RESETARTICLEFETCH,\n} from \"../redux/actions\";\n\nexport default function Board(props) {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.memberReducer.user);\n  const fetchRequired = useSelector(\n    (state) => state.articleReducer.fetchRequired\n  );\n  const articleList = useSelector((state) => state.articleReducer.articleList);\n  const lastQuery = useSelector((state) => state.articleReducer.lastQuery);\n  useEffect(() => {\n    const handleScroll = () => {\n      app.util.handleScrollBottom(() => {\n        dispatch(SWITCHARTICLEFETCH(true));\n      });\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (lastQuery) {\n  }\n  useEffect(() => {\n    function batchFetchUserArticles(userUid) {\n      if (lastQuery === null) {\n        db.collection(\"Articles\")\n          .orderBy(\"date\", \"desc\")\n          .where(\"uid\", \"==\", userUid)\n          .limit(30)\n          .get()\n          .then((snapshot) => {\n            const tempArticleList = [...articleList];\n            snapshot.forEach((doc) => {\n              tempArticleList.push(doc.data());\n            });\n            const lastQuery = snapshot.docs[snapshot.docs.length - 1];\n            dispatch(ADDFETCHARTICLE(tempArticleList, lastQuery));\n          });\n      } else {\n        if (lastQuery) {\n          db.collection(\"Articles\")\n            .orderBy(\"date\", \"desc\")\n            .where(\"uid\", \"==\", userUid)\n            .startAfter(lastQuery)\n            .limit(8)\n            .get()\n            .then((snapshot) => {\n              const tempArticleList = [...articleList];\n              snapshot.forEach((doc) => {\n                tempArticleList.push(doc.data());\n              });\n              const lastQuery = snapshot.docs[snapshot.docs.length - 1];\n              dispatch(ADDFETCHARTICLE(tempArticleList, lastQuery));\n            });\n        }\n      }\n    }\n\n    if (user && fetchRequired) {\n      batchFetchUserArticles(user.uid);\n    }\n  }, [fetchRequired, user]);\n  let articleSnapshotInit = false;\n  useEffect(() => {\n    let unsubscribe;\n    if (user) {\n      unsubscribe = db\n        .collection(\"Articles\")\n        .where(\"uid\", \"==\", user.uid)\n        .onSnapshot(() => {\n          if (articleSnapshotInit) {\n            dispatch(RESETARTICLEFETCH());\n          }\n        });\n\n      articleSnapshotInit = true;\n    }\n    return () => {\n      if (typeof unsubscribe === \"function\") {\n        unsubscribe();\n      }\n    };\n  }, [user]);\n\n  return (\n    <div className={styles.boardWrapper}>\n      <div className={styles.title}>Saved Article</div>\n      <div className={styles.description}>\n        The article you saved from web and RSS feed, read it anytime you want!\n      </div>\n      <CardWrapper />\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx",["208","209"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx",["210"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFolderTab.jsx",["211"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx",["212","213"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSChannel.jsx",["214","215"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Landing.jsx",[],["216","217"],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx",["218","219","220"],"import { useLocation } from \"react-router-dom\";\nimport BorderColorOutlinedIcon from \"@material-ui/icons/BorderColorOutlined\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db } from \"../../firebase.js\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../css/Article.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport ReactQuill from \"react-quill\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useSelector } from \"react-redux\";\nimport ChromeReaderModeOutlinedIcon from \"@material-ui/icons/ChromeReaderModeOutlined\";\nimport ChromeReaderModeIcon from \"@material-ui/icons/ChromeReaderMode\";\nimport firebase from \"firebase/app\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport \"react-quill/dist/quill.snow.css\";\nexport default function Article() {\n  const [showNote, setShowNote] = useState(false);\n  const [highLightOn, setHighLightOn] = useState(false);\n  const lightOn = useRef(highLightOn);\n  const [articleLoaded, setArticleLoaded] = useState(false);\n  const [highLights, setHighLights] = useState([]);\n  const [tags, setTags] = useState({});\n  const [note, setNote] = useState(\"\");\n  const [article, setArticle] = useState({});\n\n  const [renderArticle, setRenderArticle] = useState(article.readerHtml);\n  const location = useLocation();\n  const search = location.search;\n  const params = new URLSearchParams(search);\n  const id = params.get(\"id\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  const CustomTooltip = withStyles((theme) => ({\n    tooltip: {\n      color: \"white\",\n      fontFamily: \"Open Sans\",\n      fontSize: 14,\n    },\n  }))(Tooltip);\n  const customStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      background: \"black\",\n      borderBottom: \"1px solid gray\",\n      color: \"white\",\n      padding: 10,\n    }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? null\n          : isSelected\n          ? data.color\n          : isFocused\n          ? \"#dcdcdc\"\n          : null,\n        color: isFocused ? \"#39382e\" : \"#dcdcdc\",\n\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n        \":active\": {\n          ...styles[\":active\"],\n          backgroundColor: !isDisabled && (isSelected ? data.color : \"green\"),\n        },\n      };\n    },\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"#000F24\",\n      minWidth: \"300px\",\n    }),\n  };\n  useEffect(() => {\n    if (user) {\n      app.initArticleTags(id, user.uid).then((articleTagSelection) => {\n        setTags(articleTagSelection);\n      });\n    }\n  }, [id, user]);\n  function handleChange(newValue, actionMeta) {\n    switch (actionMeta.action) {\n      case \"select-option\":\n        app.inputTag(id, user.uid, actionMeta.option.label);\n        setTags({ ...tags, values: newValue });\n        break;\n      case \"remove-value\":\n        app.deleteTagFromArticle(id, user.uid, actionMeta.removedValue.tagId);\n        setTags({ ...tags, values: newValue });\n        break;\n      default:\n    }\n  }\n\n  function handleCreate(inputValue) {\n    app.inputTag(id, user.uid, inputValue);\n    setTags({\n      options: [\n        ...tags.options,\n        { label: inputValue, value: inputValue, tagId: id },\n      ],\n      values: [\n        ...tags.values,\n        { label: inputValue, value: inputValue, tagId: id },\n      ],\n    });\n  }\n  useEffect(() => {\n    if (articleLoaded && article.highLight) {\n      initAricleHighLight(article.highLight);\n    }\n  }, [articleLoaded]);\n  useEffect(() => {\n    let unsubscribeNote;\n    function getArticles() {\n      db.collection(\"Articles\")\n        .doc(id)\n        .get()\n        .then(function (doc) {\n          if (doc.data() !== undefined) {\n            setArticle({\n              title: doc.data().title,\n              link: doc.data().link,\n              highLight: doc.data().highLight,\n              readerHtml: doc.data().readerHtml,\n            });\n            setRenderArticle(doc.data().readerHtml);\n            setArticleLoaded(true);\n          }\n        });\n    }\n    function noteUpdateListener(id) {\n      unsubscribeNote = db\n        .collection(\"Articles\")\n        .doc(id)\n        .onSnapshot((doc) => {\n          if (doc.data().note) {\n            if (doc.data().note !== note) {\n              setNote(doc.data().note);\n            }\n          }\n        });\n    }\n    noteUpdateListener(id);\n    getArticles();\n    return () => {\n      unsubscribeNote();\n    };\n  }, []);\n\n  function uploadNote(input) {\n    db.collection(\"Articles\")\n      .doc(id)\n      .update({\n        note: input,\n      })\n      .then(() => {});\n  }\n\n  function findIndexInArticle(\n    articleString,\n    startIndex,\n    startTextContent,\n    endIndex,\n    endTextContent\n  ) {\n    const encodedStart = startTextContent.replace(\"&\", \"&amp;\");\n    const encodedEnd = endTextContent.replace(\"&\", \"&amp;\");\n    const articleStart = articleString.indexOf(encodedStart) + startIndex;\n    const articleStartTail =\n      articleString.indexOf(encodedStart) + encodedStart.length;\n    const articleEnd = articleString.indexOf(encodedEnd) + endIndex;\n    const articleEndHead = articleString.indexOf(encodedEnd);\n    return {\n      articleStart: articleStart,\n      articleStartTail: articleStartTail,\n      articleEnd: articleEnd,\n      articleEndHead: articleEndHead,\n    };\n  }\n\n  function saveHighLightToDB(\n    textSummary,\n    textSlice,\n    highLightId,\n    uid,\n    articleId\n  ) {\n    db.collection(\"Articles\")\n      .doc(articleId)\n      .update({\n        highLight: firebase.firestore.FieldValue.arrayUnion({\n          id: highLightId,\n          textSlice: textSlice,\n          uid: uid,\n          text: textSummary,\n        }),\n      });\n  }\n  function findTextAddSpan(targetText, hightLightId, tempRenderArticle) {\n    var encodedText = targetText.replace(\"&\", \"&amp;\");\n    const indexStart = tempRenderArticle.indexOf(encodedText);\n    const indexEnd = indexStart + targetText.length;\n    if (indexStart !== -1 && indexStart !== 0) {\n      const temp =\n        tempRenderArticle.substr(0, indexStart) +\n        `<span class=highLighter data-id=\"${hightLightId}\">` +\n        tempRenderArticle.substr(indexStart, targetText.length) +\n        `</span><input z=\"${hightLightId}\">` +\n        tempRenderArticle.substr(indexEnd, article.readerHtml.length);\n\n      tempRenderArticle = temp;\n    }\n    return tempRenderArticle;\n  }\n  function initAricleHighLight(highLight) {\n    let tempRenderArticle = article.readerHtml;\n    highLight.forEach((item) => {\n      item.textSlice.forEach((textSlice) => {\n        tempRenderArticle = findTextAddSpan(\n          textSlice,\n          item.id,\n          tempRenderArticle\n        );\n      });\n    });\n\n    setHighLights(highLight);\n    setRenderArticle(tempRenderArticle);\n  }\n\n  function handleMouseUp() {\n    if (lightOn.current) {\n      var selection = window.getSelection();\n      let tempRenderArticle = renderArticle;\n      const dom = selection.getRangeAt(0).cloneContents();\n      const allTextSlice = [];\n      const textSummary = dom.textContent;\n\n      [...dom.children].forEach((child) => {});\n\n      const { articleStart, articleEnd } = findIndexInArticle(\n        renderArticle,\n        selection.anchorOffset,\n        selection.anchorNode.textContent,\n        selection.focusOffset,\n        selection.focusNode.textContent\n      );\n\n      if (articleStart !== articleEnd) {\n        const highLightId = user.uid + \"_\" + Date.now().toString();\n        highLighting(dom, highLightId);\n\n        function highLighting(dom, highLightId) {\n          if ([...dom.children][0]) {\n            [...dom.children].forEach((child) => {\n              highLighting(child, highLightId);\n            });\n\n            const father = dom.textContent;\n\n            const firstChildIndex = father.indexOf(\n              [...dom.children][0].textContent\n            );\n            let fatherHead = father.substr(0, firstChildIndex);\n\n            let fatherTail = father.substr(firstChildIndex, father.length);\n\n            [...dom.children].forEach((child) => {\n              fatherHead = fatherHead.replace(child.textContent, \"\");\n              fatherTail = fatherTail.replace(child.textContent, \"\");\n            });\n            findTextAddSpan(fatherHead, highLightId);\n            findTextAddSpan(fatherTail, highLightId);\n          } else {\n            const father = dom.textContent;\n            findTextAddSpan(father, highLightId);\n          }\n        }\n\n        function findTextAddSpan(targetText, hightLightId) {\n          var encodedText = targetText.replace(\"&\", \"&amp;\");\n          const indexStart = tempRenderArticle.indexOf(encodedText);\n          const indexEnd = indexStart + targetText.length;\n          if (indexStart !== -1 && indexStart !== 0) {\n            allTextSlice.push(targetText);\n            const temp =\n              tempRenderArticle.substr(0, indexStart) +\n              `<span class=highLighter data-id=\"${hightLightId}\">` +\n              tempRenderArticle.substr(indexStart, targetText.length) +\n              `</span><input z=\"${hightLightId}\">` +\n              tempRenderArticle.substr(indexEnd, renderArticle.length);\n\n            tempRenderArticle = temp;\n          }\n        }\n        const hightLight = {\n          id: highLightId,\n          textSlice: allTextSlice,\n          uid: user.uid,\n          text: textSummary,\n        };\n        setHighLights([...highLights, hightLight]);\n        setRenderArticle(tempRenderArticle);\n        saveHighLightToDB(textSummary, allTextSlice, highLightId, user.uid, id);\n      }\n    }\n  }\n\n  const quillRef = React.useRef();\n\n  function renderHightLight(highLights) {\n    const highLightBoxes = [];\n    highLights.forEach((highLight) => {\n      highLightBoxes.push(\n        <div className={styles.highLightBox}>\n          <div className={styles.highLightText}>{highLight.text}</div>\n          <DeleteOutlineIcon\n            onClick={() => {\n              deleteHightLight(highLight.id, id);\n            }}\n          />\n        </div>\n      );\n    });\n    return highLightBoxes;\n  }\n\n  function deleteHightLight(id, articleId) {\n    let tempArticle = renderArticle;\n\n    tempArticle = tempArticle\n      .replaceAll(`<span class=highLighter data-id=\"${id}\">`, \"\")\n      .replaceAll(`</span><input z=\"${id}\">`, \"\");\n\n    const tempHighLight = highLights.filter((item) => {\n      return item.id !== id;\n    });\n\n    db.collection(\"Articles\").doc(articleId).update({\n      highLight: tempHighLight,\n    });\n\n    setHighLights(tempHighLight);\n    setRenderArticle(tempArticle);\n  }\n  useEffect(() => {\n    const articleMain = document.querySelector(\".\" + styles.articleMain);\n\n    articleMain.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      articleMain.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [renderArticle]);\n\n  const highLightBoxes = renderHightLight(highLights);\n\n  return (\n    <div className={styles.articleWrapper}>\n      <div className={showNote ? styles.mainWithNote : styles.main}>\n        <div className={styles.head}>\n          <Link to={\"/board\"}>\n            <div className={styles.arrowWrapper}>\n              <ArrowBack className={styles.Icon} />\n            </div>\n          </Link>\n        </div>\n        <div className={styles.title}>{article.title}</div>\n        <div className={styles.tagWrapper}>\n          <CreatableSelect\n            isMulti\n            width=\"200px\"\n            menuColor=\"red\"\n            styles={customStyles}\n            onChange={handleChange}\n            onCreateOption={handleCreate}\n            options={tags.options}\n            defaultValue={tags.values}\n            value={tags.values}\n          />\n        </div>\n        <div className={styles.actionIconWrapper}>\n          {showNote ? (\n            <CustomTooltip title=\"note tab\" arrow>\n              <div className={styles.noteOnWrapper}>\n                <ChromeReaderModeOutlinedIcon\n                  style={{ color: \"#FFFCEC\" }}\n                  onClick={() => {\n                    setShowNote(false);\n                  }}\n                />\n              </div>\n            </CustomTooltip>\n          ) : (\n            <CustomTooltip title=\"note tab\" arrow>\n              <div className={styles.noteOffWrapper}>\n                <ChromeReaderModeIcon\n                  className={styles.Icon}\n                  onClick={() => {\n                    setShowNote(true);\n                  }}\n                />\n              </div>\n            </CustomTooltip>\n          )}\n\n          {highLightOn ? (\n            <CustomTooltip title=\"article highlighter\" arrow>\n              <div className={styles.highLightOnWrapper}>\n                <BorderColorOutlinedIcon\n                  style={{ color: \"#FFFCEC\" }}\n                  onClick={() => {\n                    setHighLightOn(false);\n                    lightOn.current = false;\n                  }}\n                />\n              </div>\n            </CustomTooltip>\n          ) : (\n            <CustomTooltip title=\"article highlighter\" arrow>\n              <div className={styles.highLightOffWrapper}>\n                <BorderColorOutlinedIcon\n                  className={styles.Icon}\n                  onClick={() => {\n                    setHighLightOn(true);\n                    lightOn.current = true;\n                  }}\n                />\n              </div>\n            </CustomTooltip>\n          )}\n        </div>\n        <div className={styles.articleMain}>\n          <div\n            className={styles.articleBody}\n            dangerouslySetInnerHTML={{ __html: renderArticle }}\n          ></div>\n        </div>\n      </div>\n      {showNote ? (\n        <div className={styles.noteWrapper}>\n          <div className={styles.note}>\n            <div className={styles.noteTitle}> Note</div>\n\n            <ReactQuill\n              className={styles.quill1}\n              onChangeSelection={(a, b, c) => {}}\n              theme=\"snow\"\n              ref={(el) => {\n                quillRef.current = el;\n              }}\n              value={note}\n              onChange={(e, a, source) => {\n                if (source === \"user\") {\n                  uploadNote(e);\n                }\n              }}\n            />\n            <div className={styles.highLightTitle}>Highlights</div>\n            {highLightBoxes}\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/GraphBoard.jsx",["221"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph.jsx",["222","223","224"],"import * as d3 from \"d3\";\nimport { useD3 } from \"../../hooks/useD3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { app } from \"../../lib/gragh_lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport styles from \"./Graph.module.css\";\nexport default function Graph() {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  const [data, setData] = useState({});\n  function color() {\n    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n    return (d) => scale(d.group);\n  }\n  function drag(simulation) {\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let id;\n      const height = 800;\n      const width = 1000;\n      svg.selectAll(\"*\").remove();\n      if (data.nodes) {\n        const links = data.links.map((d) => Object.create(d));\n        const nodes = data.nodes.map((d) => Object.create(d));\n\n        const simulation = d3\n          .forceSimulation(nodes)\n          .force(\n            \"link\",\n            d3.forceLink(links).id((d) => d.id)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(-500).distanceMax([500]))\n          .force(\"center\", d3.forceCenter(width / 2 - 300, height / 2));\n\n        const link = svg\n          .append(\"g\")\n          .attr(\"stroke\", \"#999\")\n          .attr(\"stroke-opacity\", 0.6)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\n\n        const node = svg\n          .append(\"g\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"stroke-linejoin\", \"round\")\n          .selectAll(\"g\")\n          .data(nodes)\n          .join(\"g\")\n          .call(drag(simulation));\n        const circle = node\n          .append(\"circle\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"r\", 5)\n          .attr(\"fill\", \"#4F4F4F\");\n        const text = node\n          .append(\"text\")\n          .text((d) => d.id)\n          .clone(true)\n          .lower()\n          .attr(\"stroke-width\", 0.2)\n          .attr(\"stroke\", \"white\")\n          .attr(\"fill\", \"white\")\n          .attr(\"id\", (d) => d.tagId)\n          .on(\"click\", (a) => {\n            d3.select(this).style(\"stroke\", \"yellow\");\n            dispatch(SWITCHARTICLE(a.target.id));\n          });\n\n        node.append(\"title\").text((d) => d.id);\n\n        simulation.on(\"tick\", () => {\n          link\n            .attr(\"x1\", (d) => d.source.x)\n            .attr(\"y1\", (d) => d.source.y)\n            .attr(\"x2\", (d) => d.target.x)\n            .attr(\"y2\", (d) => d.target.y);\n\n          circle.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n          text.attr(\"x\", (d) => d.x + 10).attr(\"y\", (d) => d.y);\n        });\n      }\n\n      return svg.node();\n    },\n    [data]\n  );\n  const articleList = useSelector((state) => {\n    return state.articleReducer.articleList;\n  });\n  function getGraphData(uid) {\n    return new Promise(async (resolve) => {\n      const memberTags = await app.getMemberTags(uid);\n\n      resolve(memberTags);\n    });\n  }\n  function createCombinationList(tags) {\n    const combList = [];\n    for (let i = 0; i < tags.length - 1; i++) {\n      for (let j = i + 1; j < tags.length; j++) {\n        combList.push([tags[i], tags[j]]);\n      }\n    }\n    return combList;\n  }\n  function countCombinationNumber(articleList, combList) {\n    const links = [];\n    for (let i = 0; i < combList.length; i++) {\n      let combNumber = 0;\n      articleList.forEach((article) => {\n        if (article.tags) {\n          if (\n            article.tags.includes(combList[i][0].tagId) &&\n            article.tags.includes(combList[i][1].tagId)\n          ) {\n            combNumber += 1;\n          }\n        }\n      });\n      links.push({\n        source: combList[i][0].label,\n        target: combList[i][1].label,\n        value: combNumber,\n      });\n    }\n    return links;\n  }\n  function combInit(tags) {\n    const combList = createCombinationList(tags);\n    return countCombinationNumber(articleList, combList);\n  }\n\n  function initGraphData(uid) {\n    return new Promise((resolve) => {\n      getGraphData(uid)\n        .then((memberTags) => {\n          const links = combInit(memberTags);\n          const nodes = [];\n          memberTags.forEach((tag) => {\n            nodes.push({\n              id: tag.value,\n              tagId: tag.id,\n            });\n          });\n          return [nodes, links];\n        })\n        .then(([nodes, links]) => {\n          resolve({\n            nodes: nodes,\n            links: links,\n          });\n        });\n    });\n  }\n  useEffect(() => {\n    if (user && articleList[0]) {\n      initGraphData(user.uid).then((data) => {\n        setData(data);\n      });\n    }\n  }, [user, articleList]);\n  return (\n    <div className={styles.graphWrapper}>\n      <div className={styles.graphContainer}>\n        <div className={styles.titleWrapper}></div>\n        <div className={styles.graph}>\n          <svg\n            ref={ref}\n            style={{\n              height: 800,\n              width: \"100%\",\n              marginRight: \"20px\",\n              marginLeft: \"0px\",\n            }}\n          >\n            <g className=\"plot-area\" />\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx",["225"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today.jsx",["226"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Explore.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSSearch.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx",["227"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today_RSSList.js",[],["228","229"],"/Users/kevinzhang/Documents/Taggy/client/app/src/test/firestore_test_config.js",["230"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/MobileRSSTab.jsx",["231","232","233","234","235"],"import Tooltip from \"@material-ui/core/Tooltip\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport CreateNewFolderOutlinedIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { SWITCHRSS } from \"../../redux/actions\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\n\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\nimport { INITUSERRSSLIST } from \"../../redux/actions\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport RSSFolder from \"./RSSFolder\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\n\nimport TrendingUpOutlinedIcon from \"@material-ui/icons/TrendingUpOutlined\";\n\nimport addRSSFolderImg from \"../../imgs/add_RSS_folder.png\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n    flexGrow: 10,\n    maxWidth: 220,\n    marginBottom: \"10px\",\n    paddingLeft: \"25px\",\n    paddingRight: \"24px\",\n  },\n});\n\nconst CustomTooltip = withStyles((theme) => ({\n  tooltip: {\n    color: \"white\",\n    fontFamily: \"Open Sans\",\n    fontSize: 14,\n  },\n}))(Tooltip);\nexport default function RSSTab(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [showPage, setShowPage] = useState(false);\n  const [RSSFolders, setRSSFolders] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const folderstyle = makeStyles({\n    root: {\n      paddingLeft: \"23px\",\n      paddingBottom: \"8px\",\n      maxWidth: 200,\n      fontSize: \"15px important\",\n      marginBottom: \"3px\",\n    },\n  });\n  const folderStyle = folderstyle();\n  function getUserRSSList(uid) {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        if (doc.data().subscribedRSS) {\n          dispatch(INITUSERRSSLIST(doc.data().subscribedRSS));\n        }\n      });\n  }\n  function addNewGroup(uid, name) {\n    db.collection(\"GroupBoard\")\n      .add({\n        name: name,\n        member: [uid],\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            board: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const userRSSList = useSelector((state) => {\n    return state.RSSReducer.UserRSSList;\n  });\n  useEffect(() => {}, [userRSSList]);\n  useEffect(() => {\n    function getRSSFolders() {\n      if (user) {\n        db.collection(\"Member\")\n          .doc(user.uid)\n          .onSnapshot((doc) => {\n            app\n              .getMemberRSSFolders(user.uid)\n              .then((RSSFolders) => {\n                return RSSFolders;\n              })\n              .then(async (RSSFolders) => {\n                for (const folder of RSSFolders) {\n                  if (folder.RSSIds) {\n                    for (const RSSId of folder.RSSIds) {\n                      const RSS = await app.getRSSInfo(RSSId);\n                      folder.RSS.push(RSS);\n                    }\n                  }\n                }\n\n                setRSSFolders(RSSFolders);\n              });\n          });\n      }\n    }\n    if (user) {\n      getUserRSSList(user.uid);\n    }\n    getRSSFolders();\n  }, [user]);\n  function addRSSFolder(name, uid) {\n    db.collection(\"RSSFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            RSSFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  function showRSSFolders(folders) {\n    const RSSFolderList = [];\n    if (folders.length > 0) {\n      for (const i in folders) {\n        RSSFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"rgba(225,225,225,0.3)\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {}}\n              >\n                <RSSFolder\n                  user={user}\n                  folderId={folders[i].id}\n                  folderRSS={folders[i].RSS}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return RSSFolderList;\n  }\n\n  const articleFolderList = showRSSFolders(RSSFolders);\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      const newRSSFolders = [...RSSFolders];\n      let newRSSIds;\n\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          const moveId = folder.RSSIds[source.index];\n          newRSSIds = [...folder.RSSIds];\n\n          newRSSIds.splice(source.index, 1);\n\n          newRSSIds.splice(destination.index, 0, moveId);\n\n          const moveItem = folder.RSS[source.index];\n\n          folder.RSS.splice(source.index, 1);\n          folder.RSS.splice(destination.index, 0, moveItem);\n\n          folder.RSSIds = newRSSIds;\n        }\n      });\n\n      db.collection(\"RSSFolders\").doc(destination.droppableId).update({\n        RSS: newRSSIds,\n      });\n      setRSSFolders(newRSSFolders);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      const newRSSFolders = [...RSSFolders];\n\n      let moveId;\n      let moveItem;\n      let newSourceRSSIds;\n      let newDestinationRSSIds;\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          moveId = folder.RSSIds[source.index];\n          moveItem = folder.RSS[source.index];\n          newSourceRSSIds = [...folder.RSSIds];\n          newSourceRSSIds.splice(source.index, 1);\n          folder.RSS.splice(source.index, 1);\n          folder.RSSIds = newSourceRSSIds;\n          db.collection(\"RSSFolders\").doc(source.droppableId).update({\n            RSS: newSourceRSSIds,\n          });\n        }\n      });\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          newDestinationRSSIds = [...folder.RSSIds];\n          newDestinationRSSIds.splice(destination.index, 0, moveId);\n          folder.RSS.splice(destination.index, 0, moveItem);\n          folder.RSSIds = newDestinationRSSIds;\n          db.collection(\"RSSFolders\").doc(destination.droppableId).update({\n            RSS: newDestinationRSSIds,\n          });\n        }\n      });\n      setRSSFolders(newRSSFolders);\n    }\n  }\n  return (\n    <div className={styles.mobileFolderTabWrapper}>\n      <div className={styles.mobileFolderTab}>\n        <div className={styles.sectionTitle}>Taggy</div>\n        <Link to={\"/rssexplore\"}>\n          <div className={styles.importWrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AddOutlinedIcon />}\n            >\n              Add RSS\n            </Button>\n          </div>\n        </Link>\n\n        <Link to={\"/home\"}>\n          <div\n            className={\n              props.focus === \"home\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <TrendingUpOutlinedIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"home\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div className={styles.keyTitle}>Today</div>\n          </div>\n        </Link>\n        <Link to={\"/home/channels\"}>\n          <div\n            className={\n              props.focus === \"channels\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <ExploreOutlinedIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"channels\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div className={styles.keyTitle}>Explore</div>\n          </div>\n        </Link>\n        <Link to={\"/home/myfeeds\"}>\n          <div\n            className={\n              props.focus === \"myfeeds\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <RssFeedIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"myfeeds\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div\n              className={styles.keyTitle}\n              onClick={() => {\n                dispatch(SWITCHRSS(\"all\"));\n              }}\n            >\n              My Feeds\n            </div>\n          </div>\n        </Link>\n        <Link to={\"/home/searchfeeds\"}>\n          <div\n            className={\n              props.focus === \"searchfeeds\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <SearchIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"searchfeeds\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div className={styles.keyTitle} onClick={() => {}}>\n              Search Feeds\n            </div>\n          </div>\n        </Link>\n        <div className={styles.subscriptionWrapper}>\n          <div className={styles.subscription}>Subscription</div>\n          <CustomTooltip title=\"Add new folder\" placement=\"right\" arrow>\n            <CreateNewFolderOutlinedIcon\n              onClick={() => {\n                setShowPage(true);\n              }}\n              className={styles.setting}\n              fontSize=\"small\"\n              style={{ color: \"#b2b2b2\" }}\n            />\n          </CustomTooltip>\n        </div>\n        <TreeView\n          className={classes.root}\n          defaultexpanded={expanded}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n        >\n          <DragDropContext onDragEnd={onDragEnd}>\n            {articleFolderList}\n          </DragDropContext>\n        </TreeView>\n\n        {showPage\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setShowPage(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Add new folder</div>\n                  <div className={styles.addSubTitle}>\n                    Create folder to organize RSS resources you love\n                  </div>\n                  <label className={styles.addFolderLabel} htmlFor=\"addForm\">\n                    Enter new folder name\n                  </label>\n                  <div className={styles.addFormWrapper}>\n                    <form id=\"addForm\" action=\"\">\n                      <input\n                        className={styles.addInput}\n                        type=\"text\"\n                        value={addFolderInput}\n                        onChange={(e) => {\n                          setAddFolderInput(e.target.value);\n                        }}\n                      />\n                      <button\n                        type=\"submit\"\n                        className={styles.saveBtn}\n                        form=\"addForm\"\n                        onClick={() => {\n                          if (user) {\n                            addRSSFolder(addFolderInput, user.uid);\n                            setShowPage(false);\n                          } else {\n                            alert(\"Please login to add folder!\");\n                          }\n                        }}\n                      >\n                        Create\n                      </button>\n                      <button\n                        onClick={() => {\n                          setShowPage(false);\n                        }}\n                        className={styles.cancelBtn}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n\n                  <div className={styles.imgWrapper}>\n                    <img src={addRSSFolderImg} alt=\"\" />\n                  </div>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx",["236"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/SearchRSS.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx",["237"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx",["238","239","240","241","242","243","244","245","246"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx",["247","248","249","250","251","252"],"import React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport logo from \"../../imgs/taggy_logo_1x.png\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { db, auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nexport default function Signup() {\n  const notify_fail = () =>\n    toast.warn(\n      <div>Sign in fail, please check your account and password</div>,\n      {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        const newUser = await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .get()\n          .then((doc) => {\n            if (doc.data()) {\n              return false;\n            } else {\n              return true;\n            }\n          });\n        if (newUser) {\n          await db\n            .collection(\"Member\")\n            .doc(authResult.uid)\n            .set({\n              uid: authResult.uid,\n              email: authResult.email,\n              displaynamename: authResult.displayName,\n            })\n            .then(() => {\n              fetch(\"https://www.shopcard.site/route/user/syncuser\");\n            })\n            .then(history.push(\"home\"))\n            .catch((error) => {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              notify_fail();\n            });\n        } else {\n          history.push(\"home\");\n        }\n      },\n    },\n\n    signInFlow: \"popup\",\n\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  const [email, setEmail] = useState(\"user@gmail.com\");\n  const [password, setPassword] = useState(\"123123\");\n  const history = useHistory();\n  function firebaseSignIn(email, password) {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        history.push(\"/home\");\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        notify_fail();\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.headWrapper}>\n        <Link to={\"/\"}>\n          <div className={styles.homeWrapper}>\n            <div className={styles.logoWrapper}>\n              <img src={logo} alt=\"\" />\n            </div>\n            <div className={styles.logoTitle}>Taggy</div>\n          </div>\n        </Link>\n        <Link to={\"/signin\"} className={styles.logInWrapper}>\n          <div className={styles.logInBtn}>Login</div>\n        </Link>\n        <Link to={\"/signup\"}>\n          <div className={styles.SignUpBtn}>Sign up</div>\n        </Link>\n      </div>\n      <div className={styles.blockWrapper}>\n        <div className=\"block\" className={styles.block}>\n          <h2 className={styles.title}>Login</h2>\n          <form\n            className={styles.form}\n            onSubmit={(e) => {\n              e.preventDefault();\n              firebaseSignIn(email, password);\n            }}\n          >\n            <div className={styles.inputbox}>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <div className={styles.inputbox}>\n              <label htmlFor=\"email\">Password</label>\n              <input\n                type=\"password\"\n                name=\"passowrd\"\n                placeholder=\"123123\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.currentTarget.value);\n                }}\n              />\n            </div>\n            <div\n              className={styles.demoBtn}\n              onClick={() => {\n                firebaseSignIn(\"user@gmail.com\", \"123123\");\n              }}\n            >\n              Try with demo account\n            </div>\n            <button>Login</button>\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js",[],["253","254"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js",["255","256"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx",["257"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx",["258","259","260","261","262"],"import Tooltip from \"@material-ui/core/Tooltip\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport CreateNewFolderOutlinedIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { SWITCHRSS } from \"../../redux/actions\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\nimport { INITUSERRSSLIST } from \"../../redux/actions\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport RSSFolder from \"./RSSFolder\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport TrendingUpOutlinedIcon from \"@material-ui/icons/TrendingUpOutlined\";\nimport addRSSFolderImg from \"../../imgs/add_RSS_folder.png\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n    flexGrow: 10,\n    maxWidth: 220,\n    marginBottom: \"10px\",\n    paddingLeft: \"25px\",\n    paddingRight: \"24px\",\n  },\n});\n\nconst CustomTooltip = withStyles((theme) => ({\n  tooltip: {\n    color: \"white\",\n    fontFamily: \"Open Sans\",\n    fontSize: 14,\n  },\n}))(Tooltip);\nexport default function RSSTab(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [showPage, setShowPage] = useState(false);\n  const [RSSFolders, setRSSFolders] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const folderstyle = makeStyles({\n    root: {\n      paddingLeft: \"23px\",\n      paddingBottom: \"8px\",\n      maxWidth: 200,\n      fontSize: \"15px important\",\n      marginBottom: \"3px\",\n    },\n  });\n  const folderStyle = folderstyle();\n  function getUserRSSList(uid) {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        if (doc.data()) {\n          if (doc.data().subscribedRSS) {\n            dispatch(INITUSERRSSLIST(doc.data().subscribedRSS));\n          }\n        }\n      });\n  }\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const userRSSList = useSelector((state) => {\n    return state.RSSReducer.UserRSSList;\n  });\n  useEffect(() => {}, [userRSSList]);\n  useEffect(() => {\n    function getRSSFolders() {\n      if (user) {\n        db.collection(\"Member\")\n          .doc(user.uid)\n          .onSnapshot((doc) => {\n            app\n              .getMemberRSSFolders(user.uid)\n              .then((RSSFolders) => {\n                return RSSFolders;\n              })\n              .then(async (RSSFolders) => {\n                for (const folder of RSSFolders) {\n                  if (folder.RSSIds) {\n                    for (const RSSId of folder.RSSIds) {\n                      const RSS = await app.getRSSInfo(RSSId);\n\n                      folder.RSS.push(RSS);\n                    }\n                  }\n                }\n                for (const i in RSSFolders) {\n                }\n\n                setRSSFolders(RSSFolders);\n              });\n          });\n      }\n    }\n    if (user) {\n      getUserRSSList(user.uid);\n    }\n    getRSSFolders();\n  }, [user]);\n  function addRSSFolder(name, uid) {\n    db.collection(\"RSSFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            RSSFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  function showRSSFolders(folders) {\n    const RSSFolderList = [];\n    if (folders.length > 0) {\n      for (const i in folders) {\n        RSSFolderList.push(\n          <Droppable droppableId={folders[i].id} key={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"rgba(225,225,225,0.3)\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n              >\n                <RSSFolder\n                  user={user}\n                  folderId={folders[i].id}\n                  folderRSS={folders[i].RSS}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return RSSFolderList;\n  }\n\n  const articleFolderList = showRSSFolders(RSSFolders);\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      const newRSSFolders = [...RSSFolders];\n      let newRSSIds;\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          const moveId = folder.RSSIds[source.index];\n          newRSSIds = [...folder.RSSIds];\n          newRSSIds.splice(source.index, 1);\n          newRSSIds.splice(destination.index, 0, moveId);\n          const moveItem = folder.RSS[source.index];\n          folder.RSS.splice(source.index, 1);\n          folder.RSS.splice(destination.index, 0, moveItem);\n          folder.RSSIds = newRSSIds;\n        }\n      });\n\n      db.collection(\"RSSFolders\").doc(destination.droppableId).update({\n        RSS: newRSSIds,\n      });\n      setRSSFolders(newRSSFolders);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      const newRSSFolders = [...RSSFolders];\n\n      let moveId;\n      let moveItem;\n      let newSourceRSSIds;\n      let newDestinationRSSIds;\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          moveId = folder.RSSIds[source.index];\n          moveItem = folder.RSS[source.index];\n          newSourceRSSIds = [...folder.RSSIds];\n          newSourceRSSIds.splice(source.index, 1);\n          folder.RSS.splice(source.index, 1);\n          folder.RSSIds = newSourceRSSIds;\n          db.collection(\"RSSFolders\").doc(source.droppableId).update({\n            RSS: newSourceRSSIds,\n          });\n        }\n      });\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          newDestinationRSSIds = [...folder.RSSIds];\n          newDestinationRSSIds.splice(destination.index, 0, moveId);\n          folder.RSS.splice(destination.index, 0, moveItem);\n          folder.RSSIds = newDestinationRSSIds;\n          db.collection(\"RSSFolders\").doc(destination.droppableId).update({\n            RSS: newDestinationRSSIds,\n          });\n        }\n      });\n      setRSSFolders(newRSSFolders);\n    }\n  }\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <div className={styles.sectionTitle}>Taggy</div>\n        <Link to={\"/rssexplore\"}>\n          <div className={styles.importWrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AddOutlinedIcon />}\n            >\n              Add RSS\n            </Button>\n          </div>\n        </Link>\n\n        <Link to={\"/home\"}>\n          <div\n            className={\n              props.focus === \"home\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <TrendingUpOutlinedIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"home\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div className={styles.keyTitle}>Today</div>\n          </div>\n        </Link>\n        <Link to={\"/home/channels\"}>\n          <div\n            className={\n              props.focus === \"channels\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <ExploreOutlinedIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"channels\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div className={styles.keyTitle}>Explore</div>\n          </div>\n        </Link>\n        <Link to={\"/home/myfeeds\"}>\n          <div\n            className={\n              props.focus === \"myfeeds\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <RssFeedIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"myfeeds\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div\n              className={styles.keyTitle}\n              onClick={() => {\n                dispatch(SWITCHRSS(\"all\"));\n              }}\n            >\n              My Feeds\n            </div>\n          </div>\n        </Link>\n        <Link to={\"/home/searchfeeds\"}>\n          <div\n            className={\n              props.focus === \"searchfeeds\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <SearchIcon\n              fontSize=\"small\"\n              className={\n                props.focus === \"searchfeeds\"\n                  ? styles.folderIcon_focus\n                  : styles.folderIcon\n              }\n            />\n            <div className={styles.keyTitle} onClick={() => {}}>\n              Search Feeds\n            </div>\n          </div>\n        </Link>\n        <div className={styles.subscriptionWrapper}>\n          <div className={styles.subscription}>Subscription</div>\n          <CustomTooltip title=\"Add new folder\" placement=\"right\" arrow>\n            <CreateNewFolderOutlinedIcon\n              onClick={() => {\n                setShowPage(true);\n              }}\n              className={styles.setting}\n              fontSize=\"small\"\n              style={{ color: \"#b2b2b2\" }}\n            />\n          </CustomTooltip>\n        </div>\n        <TreeView\n          className={classes.root}\n          defaultexpanded={expanded}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n        >\n          <DragDropContext onDragEnd={onDragEnd}>\n            {articleFolderList}\n          </DragDropContext>\n        </TreeView>\n\n        {showPage\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setShowPage(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Add new folder</div>\n                  <div className={styles.addSubTitle}>\n                    Create folder to organize RSS resources you love\n                  </div>\n                  <label className={styles.addFolderLabel} htmlFor=\"addForm\">\n                    Enter new folder name\n                  </label>\n                  <div className={styles.addFormWrapper}>\n                    <form id=\"addForm\" action=\"\">\n                      <input\n                        className={styles.addInput}\n                        type=\"text\"\n                        value={addFolderInput}\n                        onChange={(e) => {\n                          setAddFolderInput(e.target.value);\n                        }}\n                      />\n                      <button\n                        type=\"submit\"\n                        className={styles.saveBtn}\n                        form=\"addForm\"\n                        onClick={() => {\n                          if (user) {\n                            addRSSFolder(addFolderInput, user.uid);\n                            setShowPage(false);\n                          } else {\n                            alert(\"Please login to add folder!\");\n                          }\n                        }}\n                      >\n                        Create\n                      </button>\n                      <button\n                        onClick={() => {\n                          setShowPage(false);\n                        }}\n                        className={styles.cancelBtn}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n\n                  <div className={styles.imgWrapper}>\n                    <img src={addRSSFolderImg} alt=\"\" />\n                  </div>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js",["263"],"/Users/kevinzhang/Documents/Taggy/client/app/src/index.js",["264"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Mobile_Burger.jsx",["265"],"import MobileRSSTab from \"../RSS/MobileRSSTab\";\n\nimport styles from \"./MobileFunctionTab.module.css\";\nimport boardStyles from \"../RSS/RSSBoard.module.css\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MobileFolderTab from \"./MobileFolderTab\";\nimport { useState } from \"react\";\n\nexport default function MobileBurger(props) {\n  const [showBurger, setShowBurger] = useState(false);\n  let burgerCategory = \"\";\n  switch (props.position) {\n    case \"board\":\n      burgerCategory = <MobileFolderTab />;\n      break;\n    case \"RSS\":\n      burgerCategory = <MobileRSSTab />;\n      break;\n    default:\n  }\n  return (\n    <div className={styles.burgerWrapper}>\n      <MenuIcon\n        fontSize=\"large\"\n        style={{ color: \"white\" }}\n        onClick={() => {\n          setShowBurger(true);\n        }}\n      />\n      {showBurger ? (\n        <div className={boardStyles.popup}>\n          <div\n            className={boardStyles.blur}\n            onClick={() => {\n              setShowBurger(false);\n            }}\n          ></div>\n          {props.position === \"board\" ? <MobileFolderTab /> : <MobileRSSTab />}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n",["266","267"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/MobileFunctionTab.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js",[],["268","269"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/group_Reducer.js",[],{"ruleId":"270","severity":1,"message":"271","line":76,"column":6,"nodeType":"272","endLine":76,"endColumn":27,"suggestions":"273"},{"ruleId":"270","severity":1,"message":"274","line":90,"column":29,"nodeType":"275","endLine":90,"endColumn":33},{"ruleId":"276","severity":1,"message":"277","line":7,"column":10,"nodeType":"278","messageId":"279","endLine":7,"endColumn":20},{"ruleId":"276","severity":1,"message":"280","line":9,"column":9,"nodeType":"278","messageId":"279","endLine":9,"endColumn":17},{"ruleId":"276","severity":1,"message":"281","line":34,"column":9,"nodeType":"278","messageId":"279","endLine":34,"endColumn":22},{"ruleId":"270","severity":1,"message":"282","line":155,"column":6,"nodeType":"272","endLine":155,"endColumn":23,"suggestions":"283"},{"ruleId":"276","severity":1,"message":"284","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":44},{"ruleId":"270","severity":1,"message":"285","line":96,"column":6,"nodeType":"272","endLine":96,"endColumn":25,"suggestions":"286"},{"ruleId":"270","severity":1,"message":"287","line":148,"column":6,"nodeType":"272","endLine":148,"endColumn":19,"suggestions":"288"},{"ruleId":"270","severity":1,"message":"289","line":151,"column":6,"nodeType":"272","endLine":151,"endColumn":36,"suggestions":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"270","severity":1,"message":"295","line":118,"column":6,"nodeType":"272","endLine":118,"endColumn":21,"suggestions":"296"},{"ruleId":"270","severity":1,"message":"297","line":155,"column":6,"nodeType":"272","endLine":155,"endColumn":8,"suggestions":"298"},{"ruleId":"270","severity":1,"message":"299","line":360,"column":6,"nodeType":"272","endLine":360,"endColumn":21,"suggestions":"300"},{"ruleId":"270","severity":1,"message":"282","line":29,"column":6,"nodeType":"272","endLine":29,"endColumn":12,"suggestions":"301"},{"ruleId":"276","severity":1,"message":"302","line":17,"column":12,"nodeType":"278","messageId":"279","endLine":17,"endColumn":17},{"ruleId":"276","severity":1,"message":"303","line":48,"column":11,"nodeType":"278","messageId":"279","endLine":48,"endColumn":13},{"ruleId":"270","severity":1,"message":"304","line":194,"column":6,"nodeType":"272","endLine":194,"endColumn":25,"suggestions":"305"},{"ruleId":"270","severity":1,"message":"282","line":228,"column":6,"nodeType":"272","endLine":228,"endColumn":23,"suggestions":"306"},{"ruleId":"270","severity":1,"message":"307","line":51,"column":6,"nodeType":"272","endLine":51,"endColumn":38,"suggestions":"308"},{"ruleId":"270","severity":1,"message":"282","line":163,"column":6,"nodeType":"272","endLine":163,"endColumn":23,"suggestions":"309"},{"ruleId":"291","replacedBy":"310"},{"ruleId":"293","replacedBy":"311"},{"ruleId":"276","severity":1,"message":"312","line":4,"column":5,"nodeType":"278","messageId":"279","endLine":4,"endColumn":8},{"ruleId":"276","severity":1,"message":"313","line":57,"column":20,"nodeType":"278","messageId":"279","endLine":57,"endColumn":31},{"ruleId":"276","severity":1,"message":"314","line":67,"column":9,"nodeType":"278","messageId":"279","endLine":67,"endColumn":20},{"ruleId":"276","severity":1,"message":"315","line":78,"column":12,"nodeType":"278","messageId":"279","endLine":78,"endColumn":23},{"ruleId":"270","severity":1,"message":"316","line":133,"column":6,"nodeType":"272","endLine":133,"endColumn":12,"suggestions":"317"},{"ruleId":"276","severity":1,"message":"318","line":191,"column":34,"nodeType":"278","messageId":"279","endLine":191,"endColumn":45},{"ruleId":"276","severity":1,"message":"319","line":51,"column":11,"nodeType":"278","messageId":"279","endLine":51,"endColumn":20},{"ruleId":"270","severity":1,"message":"320","line":21,"column":6,"nodeType":"272","endLine":21,"endColumn":8,"suggestions":"321"},{"ruleId":"276","severity":1,"message":"322","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":16},{"ruleId":"276","severity":1,"message":"323","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":18},{"ruleId":"276","severity":1,"message":"324","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":15},{"ruleId":"276","severity":1,"message":"325","line":14,"column":10,"nodeType":"278","messageId":"279","endLine":14,"endColumn":16},{"ruleId":"276","severity":1,"message":"326","line":21,"column":10,"nodeType":"278","messageId":"279","endLine":21,"endColumn":25},{"ruleId":"276","severity":1,"message":"327","line":21,"column":27,"nodeType":"278","messageId":"279","endLine":21,"endColumn":45},{"ruleId":"276","severity":1,"message":"328","line":25,"column":9,"nodeType":"278","messageId":"279","endLine":25,"endColumn":13},{"ruleId":"270","severity":1,"message":"282","line":58,"column":6,"nodeType":"272","endLine":58,"endColumn":15,"suggestions":"329"},{"ruleId":"276","severity":1,"message":"326","line":65,"column":15,"nodeType":"278","messageId":"279","endLine":65,"endColumn":30},{"ruleId":"276","severity":1,"message":"330","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":24},{"ruleId":"276","severity":1,"message":"331","line":53,"column":19,"nodeType":"278","messageId":"279","endLine":53,"endColumn":28},{"ruleId":"276","severity":1,"message":"332","line":54,"column":19,"nodeType":"278","messageId":"279","endLine":54,"endColumn":31},{"ruleId":"276","severity":1,"message":"331","line":77,"column":13,"nodeType":"278","messageId":"279","endLine":77,"endColumn":22},{"ruleId":"276","severity":1,"message":"332","line":78,"column":13,"nodeType":"278","messageId":"279","endLine":78,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":101,"column":32,"nodeType":"335","endLine":101,"endColumn":56},{"ruleId":"291","replacedBy":"336"},{"ruleId":"293","replacedBy":"337"},{"ruleId":"270","severity":1,"message":"338","line":10,"column":6,"nodeType":"278","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"339","line":10,"column":6,"nodeType":"278","endLine":10,"endColumn":18,"suggestions":"340"},{"ruleId":"270","severity":1,"message":"341","line":27,"column":6,"nodeType":"272","endLine":27,"endColumn":8,"suggestions":"342"},{"ruleId":"276","severity":1,"message":"313","line":53,"column":20,"nodeType":"278","messageId":"279","endLine":53,"endColumn":31},{"ruleId":"276","severity":1,"message":"314","line":63,"column":9,"nodeType":"278","messageId":"279","endLine":63,"endColumn":20},{"ruleId":"276","severity":1,"message":"343","line":105,"column":28,"nodeType":"278","messageId":"279","endLine":105,"endColumn":29},{"ruleId":"270","severity":1,"message":"316","line":117,"column":6,"nodeType":"272","endLine":117,"endColumn":12,"suggestions":"344"},{"ruleId":"276","severity":1,"message":"318","line":174,"column":34,"nodeType":"278","messageId":"279","endLine":174,"endColumn":45},{"ruleId":"276","severity":1,"message":"345","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":17},{"ruleId":"276","severity":1,"message":"346","line":6,"column":23,"nodeType":"278","messageId":"279","endLine":6,"endColumn":38},{"ruleId":"276","severity":1,"message":"347","line":17,"column":7,"nodeType":"278","messageId":"279","endLine":17,"endColumn":21},{"ruleId":"291","replacedBy":"348"},{"ruleId":"293","replacedBy":"349"},{"ruleId":"291","replacedBy":"350"},{"ruleId":"293","replacedBy":"351"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'articleList', 'dispatch', and 'lastQuery'. Either include them or remove the dependency array.","ArrayExpression",["352"],"Assignments to the 'articleSnapshotInit' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'CustomTooltip' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["353"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUserFeeds'. Either include it or remove the dependency array.",["354"],"React Hook useEffect has a missing dependency: 'props.channelId'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'batchFetchAllFeeds'. Either include it or remove the dependency array.",["356"],"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"React Hook useEffect has missing dependencies: 'article.highLight' and 'initAricleHighLight'. Either include them or remove the dependency array.",["359"],"React Hook useEffect has missing dependencies: 'id' and 'note'. Either include them or remove the dependency array.",["360"],"React Hook useEffect has a missing dependency: 'handleMouseUp'. Either include it or remove the dependency array.",["361"],["362"],"'color' is defined but never used.","'id' is defined but never used.","React Hook useEffect has a missing dependency: 'initGraphData'. Either include it or remove the dependency array.",["363"],["364"],"React Hook useEffect has missing dependencies: 'BackEndRSSList', 'FrontEndRSSList', 'PMRSSList', 'TechRSSList', 'UIUXRSSList', and 'batchFetchAllFeeds'. Either include them or remove the dependency array.",["365"],["366"],["357"],["358"],"'app' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'folderStyle' is assigned a value but never used.","'addNewGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserRSSList'. Either include it or remove the dependency array.",["367"],"'draggableId' is assigned a value but never used.","'starttime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'location.pathname'. Either include them or remove the dependency array.",["368"],"'dispatch' is defined but never used.","'AddArticle' is defined but never used.","'teamImg' is defined but never used.","'render' is defined but never used.","'memberEmailList' is assigned a value but never used.","'setMemberEmailList' is assigned a value but never used.","'user' is assigned a value but never used.",["369"],"'ToastContainer' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["357"],["358"],"React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["370"],"React Hook useEffect has a missing dependency: 'src'. Either include it or remove the dependency array.",["371"],"'i' is assigned a value but never used.",["372"],"'resolve' is defined but never used.","'applyMiddleware' is defined but never used.","'burgerCategory' is assigned a value but never used.",["357"],["358"],["357"],["358"],{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},"no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"375","fix":"393"},{"desc":"394","fix":"395"},{"desc":"375","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"397","fix":"407"},"Update the dependencies array to be: [articleList, dispatch, fetchRequired, lastQuery, user]",{"range":"408","text":"409"},"Update the dependencies array to be: [user, tabChange, dispatch]",{"range":"410","text":"411"},"Update the dependencies array to be: [user, queryPaging, fetchUserFeeds]",{"range":"412","text":"413"},"Update the dependencies array to be: [props.channelId, userRSSList]",{"range":"414","text":"415"},"Update the dependencies array to be: [props.channelId, lastVisible, batchFetchAllFeeds]",{"range":"416","text":"417"},"Update the dependencies array to be: [article.highLight, articleLoaded, initAricleHighLight]",{"range":"418","text":"419"},"Update the dependencies array to be: [id, note]",{"range":"420","text":"421"},"Update the dependencies array to be: [handleMouseUp, renderArticle]",{"range":"422","text":"423"},"Update the dependencies array to be: [dispatch, user]",{"range":"424","text":"425"},"Update the dependencies array to be: [user, articleList, initGraphData]",{"range":"426","text":"427"},{"range":"428","text":"411"},"Update the dependencies array to be: [selectCategory, feedFetchTimes, batchFetchAllFeeds, FrontEndRSSList, BackEndRSSList, PMRSSList, UIUXRSSList, TechRSSList]",{"range":"429","text":"430"},{"range":"431","text":"411"},"Update the dependencies array to be: [getUserRSSList, user]",{"range":"432","text":"433"},"Update the dependencies array to be: [dispatch, history, location.pathname]",{"range":"434","text":"435"},"Update the dependencies array to be: [dispatch, groupId]",{"range":"436","text":"437"},"Update the dependencies array to be: [renderChartFn]",{"range":"438","text":"439"},"Update the dependencies array to be: [src]",{"range":"440","text":"441"},{"range":"442","text":"433"},[2415,2436],"[articleList, dispatch, fetchRequired, lastQuery, user]",[5206,5223],"[user, tabChange, dispatch]",[2521,2540],"[user, queryPaging, fetchUserFeeds]",[4240,4253],"[props.channelId, userRSSList]",[4335,4365],"[props.channelId, lastVisible, batchFetchAllFeeds]",[3765,3780],"[article.highLight, articleLoaded, initAricleHighLight]",[4735,4737],"[id, note]",[11083,11098],"[handleMouseUp, renderArticle]",[891,897],"[dispatch, user]",[5360,5379],"[user, articleList, initGraphData]",[6708,6725],[1753,1785],"[selectCategory, feedFetchTimes, batchFetchAllFeeds, FrontEndRSSList, BackEndRSSList, PMRSSList, UIUXRSSList, TechRSSList]",[5368,5385],[4098,4104],"[getUserRSSList, user]",[691,693],"[dispatch, history, location.pathname]",[1987,1996],"[dispatch, groupId]",[236,248],"[renderChartFn]",[873,875],"[src]",[3779,3785]]