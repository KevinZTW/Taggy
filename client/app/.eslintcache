[{"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js":"1","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js":"2","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx":"3","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx":"4","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx":"5","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/group_Reducer.js":"6","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx":"7","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx":"8","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx":"9","/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js":"10","/Users/kevinzhang/Documents/Taggy/client/app/src/config.js":"11","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx":"12","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx":"13","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx":"14","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx":"15","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js":"16","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx":"17","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx":"18","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx":"19","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx":"20","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx":"21","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx":"22","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js":"23","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx":"24","/Users/kevinzhang/Documents/Taggy/client/app/src/index.js":"25","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx":"26","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx":"27","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/GraphBoard.jsx":"28","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx":"29","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx":"30","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx":"31","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx":"32","/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx":"33","/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js":"34","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx":"35","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js":"36","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today.jsx":"37","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js":"38"},{"size":429,"mtime":1607912185778,"results":"39","hashOfConfig":"40"},{"size":1886,"mtime":1607952733421,"results":"41","hashOfConfig":"40"},{"size":15679,"mtime":1608021926785,"results":"42","hashOfConfig":"40"},{"size":383,"mtime":1607912844646,"results":"43","hashOfConfig":"40"},{"size":3617,"mtime":1608023472611,"results":"44","hashOfConfig":"40"},{"size":830,"mtime":1607915121828,"results":"45","hashOfConfig":"40"},{"size":11620,"mtime":1608042171014,"results":"46","hashOfConfig":"40"},{"size":3009,"mtime":1608084284901,"results":"47","hashOfConfig":"40"},{"size":1302,"mtime":1608018436332,"results":"48","hashOfConfig":"40"},{"size":298,"mtime":1607331654722,"results":"49","hashOfConfig":"40"},{"size":196,"mtime":1607662167143,"results":"50","hashOfConfig":"40"},{"size":689,"mtime":1607408024999,"results":"51","hashOfConfig":"40"},{"size":6097,"mtime":1607930856635,"results":"52","hashOfConfig":"40"},{"size":2078,"mtime":1607587851112,"results":"53","hashOfConfig":"40"},{"size":2610,"mtime":1607771712223,"results":"54","hashOfConfig":"40"},{"size":1665,"mtime":1607331654716,"results":"55","hashOfConfig":"40"},{"size":11449,"mtime":1608087412499,"results":"56","hashOfConfig":"40"},{"size":2166,"mtime":1606467072664,"results":"57","hashOfConfig":"40"},{"size":755,"mtime":1607956128930,"results":"58","hashOfConfig":"40"},{"size":2663,"mtime":1607510955146,"results":"59","hashOfConfig":"40"},{"size":2171,"mtime":1608082945107,"results":"60","hashOfConfig":"40"},{"size":2822,"mtime":1608087683335,"results":"61","hashOfConfig":"40"},{"size":18503,"mtime":1608097856206,"results":"62","hashOfConfig":"40"},{"size":2520,"mtime":1608043451721,"results":"63","hashOfConfig":"40"},{"size":825,"mtime":1607958770838,"results":"64","hashOfConfig":"40"},{"size":1463,"mtime":1607671519847,"results":"65","hashOfConfig":"40"},{"size":1292,"mtime":1608002261938,"results":"66","hashOfConfig":"40"},{"size":1532,"mtime":1608016317293,"results":"67","hashOfConfig":"40"},{"size":6472,"mtime":1608016451172,"results":"68","hashOfConfig":"40"},{"size":2105,"mtime":1608018527674,"results":"69","hashOfConfig":"40"},{"size":4008,"mtime":1607331654637,"results":"70","hashOfConfig":"40"},{"size":6147,"mtime":1608042843242,"results":"71","hashOfConfig":"40"},{"size":732,"mtime":1607331654640,"results":"72","hashOfConfig":"40"},{"size":1340,"mtime":1607331654713,"results":"73","hashOfConfig":"40"},{"size":916,"mtime":1608084241060,"results":"74","hashOfConfig":"40"},{"size":751,"mtime":1607331654733,"results":"75","hashOfConfig":"40"},{"size":7249,"mtime":1608098951157,"results":"76","hashOfConfig":"40"},{"size":362,"mtime":1606271805707,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1hszq7i",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"172"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js",[],["180","181"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx",["182","183","184","185","186","187","188","189"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  SWITCHARTICLE,\n  GROUPINIT,\n  INITGROUPSELECT,\n  SWITCHGROUPSELECT,\n} from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"../SideTab/Folder\";\nimport GroupFolerSub from \"./GroupFolderSub\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n\n    flexGrow: 1,\n    maxWidth: 400,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function GroupFolderTab() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [tabChange, setTabChange] = useState(\"\");\n  const [editFolder, setEditFolder] = useState(false);\n  const [addGroup, setAddGroup] = useState(false);\n  const [addGroupInput, setAddGroupInput] = useState(\"\");\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [articleFolders, setArticleFolders] = useState([]);\n  console.log(articleFolders);\n\n  const groups = useSelector((state) => {\n    return state.groupReducer.groups;\n  });\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n    }\n  }\n\n  useEffect(() => {\n    function getMemberGroups(user) {\n      return db\n        .collection(\"Member\")\n        .doc(user.uid)\n        .get()\n        .then((doc) => {\n          console.log(doc.data());\n          return doc.data().board;\n        });\n    }\n    function getGroupDbInfo(boardId) {\n      console.log(boardId);\n      return db\n        .collection(\"GroupBoard\")\n        .doc(boardId)\n        .get()\n        .then((doc) => {\n          return {\n            id: doc.data().id,\n            name: doc.data().name,\n            articleFolders: doc.data().articleFolders,\n          };\n        });\n    }\n    async function memberGroupInit(user) {\n      let groupIds = await getMemberGroups(user);\n      let groups = {};\n      console.log(groupIds);\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        groups[groupIds[i]] = info;\n      }\n      console.log(groups);\n      dispatch(\n        INITGROUPSELECT(\n          groups[Object.keys(groups)[0]].id,\n          groups[Object.keys(groups)[0]].name\n        )\n      );\n      //=========!!!!!!!!!!!!!!!!!!!===========\n      // dispatch(GROUPINIT(groups));\n\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        //info ={  id: \"group1\",\n        //name: front end,\n        //articleFolders: [id1, id2, id3],}\n        let folders = await app.getGroupArticleFolders(groupIds[i]);\n        //folders=[{id, name, tags}, {id, name, tags}]\n        console.log(folders);\n        let folderWithTagInfo = folders.map(async (folder) => {\n          let tags = await app.getMemberFolderTags(folder.id);\n          folder.tags = tags;\n          return folder;\n        });\n\n        let group = await Promise.all(folderWithTagInfo).then((folder) => {\n          info.articleFolders = folder;\n          return info;\n        });\n        console.log(group);\n        let groupId = groupIds[i];\n        groups[groupId] = group;\n        console.log(groups);\n      }\n      console.log(groups);\n\n      dispatch(GROUPINIT(groups));\n    }\n    async function updateMemberGroup(user, changeId) {\n      let groupIds = await getMemberGroups(user);\n      let groups = {};\n      console.log(groupIds);\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        groups[groupIds[i]] = info;\n      }\n      console.log(groups);\n      console.log(changeId);\n      dispatch(SWITCHGROUPSELECT(groups[changeId].id, groups[changeId].name));\n      //=========!!!!!!!!!!!!!!!!!!!===========\n      // dispatch(GROUPINIT(groups));\n\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        //info ={  id: \"group1\",\n        //name: front end,\n        //articleFolders: [id1, id2, id3],}\n        let folders = await app.getGroupArticleFolders(groupIds[i]);\n        //folders=[{id, name, tags}, {id, name, tags}]\n        console.log(folders);\n        let folderWithTagInfo = folders.map(async (folder) => {\n          let tags = await app.getMemberFolderTags(folder.id);\n          folder.tags = tags;\n          return folder;\n        });\n\n        let group = await Promise.all(folderWithTagInfo).then((folder) => {\n          info.articleFolders = folder;\n          return info;\n        });\n        console.log(group);\n        let groupId = groupIds[i];\n        groups[groupId] = group;\n        console.log(groups);\n      }\n      console.log(groups);\n\n      dispatch(GROUPINIT(groups));\n    }\n    if (tabChange) {\n      updateMemberGroup(user, tabChange).then(() => {});\n    } else if (user) {\n      memberGroupInit(user).then((groups) => {});\n    }\n  }, [user, tabChange]);\n\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  function addGroupBoard(name, uid) {\n    db.collection(\"GroupBoard\")\n      .add({\n        name: name,\n        member: [uid],\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id, articleFolders: [\"un\" + docRef.id] });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            board: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n        return id;\n      })\n      .then((id) => {\n        db.collection(\"articleFolders\")\n          .doc(\"un\" + id)\n          .set({\n            id: \"un\" + id,\n            name: \"Uncategorized\",\n          });\n        return id;\n      })\n      .then((id) => {\n        setTabChange(id);\n      });\n  }\n  function renderGroupTabs(groups) {\n    let groupTabs = [];\n    console.log(groups);\n    for (const key in groups) {\n      console.log(groups[key]);\n      groupTabs.push(\n        <TreeView\n          className={classes.root}\n          defaultExpanded={[\"\"]}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n          onClick={() => {\n            console.log(groups[key].name);\n            dispatch(SWITCHGROUPSELECT(key, groups[key].name));\n          }}\n        >\n          <TreeItem\n            nodeId={groups[key].name}\n            label={\n              <div className={styles.labelWrapper}>\n                <PeopleAltIcon />\n                <div className={styles.labelTitle}>{groups[key].name}</div>\n              </div>\n            }\n            onClick={() => {\n              console.log(\"all\");\n              dispatch(SWITCHARTICLE(\"all\"));\n            }}\n          >\n            <TreeItem\n              nodeId={\"tagAll_\" + groups[key].name}\n              label={\n                <div className={styles.labelWrapper}>\n                  <div className={styles.labelTitle}>All Articles</div>\n                </div>\n              }\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            ></TreeItem>\n            {/* <TreeItem\n              nodeId=\"unTag2\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <MarkunreadIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                  <div className={styles.labelTitle}>Untaged</div>\n                </div>\n              }\n            /> */}\n            <DragDropContext onDragEnd={onDragEnd}>\n              <GroupFolerSub folders={groups[key].articleFolders} />\n            </DragDropContext>\n          </TreeItem>\n        </TreeView>\n      );\n    }\n    return groupTabs;\n  }\n  const groupTabs = renderGroupTabs(groups);\n  // const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <div className={styles.sectionTitle}>Group Boards</div>\n        <div\n          className={styles.subTitle}\n          onClick={() => {\n            setAddGroup(true);\n          }}\n        >\n          Create New Group\n        </div>\n        {groupTabs}\n\n        {editFolder\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setEditFolder(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Add New Folder</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Folder Name\"\n                      value={addFolderInput}\n                      onChange={(e) => {\n                        setAddFolderInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addArticleFolder(addFolderInput, user.uid);\n                          setEditFolder(false);\n                        } else {\n                          alert(\"Please login to add folder!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setEditFolder(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n        {addGroup\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setAddGroup(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Create New Group Board</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Group Board Name\"\n                      value={addGroupInput}\n                      onChange={(e) => {\n                        setAddGroupInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addGroupBoard(addGroupInput, user.uid);\n                          setAddGroup(false);\n                        } else {\n                          alert(\"Please login to add group!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setAddGroup(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n        <div\n          className={styles.subTitle}\n          onClick={() => {\n            setEditFolder(true);\n          }}\n        >\n          Add Folder\n        </div>\n      </div>\n    </div>\n  );\n}\n",["190","191"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx",["192"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx",["193","194","195","196","197","198"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport CardWrapper from \"../CardWrapper.jsx\";\nimport dispatch from \"react-redux\";\nimport styles from \"./GroupBoard.module.css\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddArticle from \"../AddArticle\";\nimport firebase from \"firebase/app\";\nimport teamImg from \"../../img/undraw_team.svg\";\nimport team_img from \"../../img/undraw_team.svg\";\n\nexport default function Board(props) {\n  const dispatch = useDispatch();\n  const [addMember, setAddMember] = useState(false);\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const groupId = useSelector((state) => {\n    return state.groupReducer.groupId;\n  });\n  const groupName = useSelector((state) => {\n    return state.groupReducer.groupName;\n  });\n  // const memebrList = getMembers();\n  // function getMembers() {\n  //   let memberList = [];\n  //   return db\n  //     .collection(\"Member\")\n  //     .get()\n  //     .then((snapShot) => {\n  //       sn;\n  //       memberList.push({\n  //         email: doc.data().emil,\n  //         uid: doc.data().uid,\n  //         password: doc.data().password,\n  //       });\n  //       return memberList;\n  //     });\n  // }\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .orderBy(\"date\", \"desc\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n              readerHtml: doc.data().readerHtml,\n            });\n          });\n          console.log(list);\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (groupId) {\n      checkArticleUpdate(groupId);\n    }\n  }, [groupId]);\n  const articleList = useSelector((state) => {\n    return state.articleReducer.articleList;\n  });\n  console.log(articleList);\n  return (\n    <div\n      className={styles.boardWrapper}\n      onClick={() => {\n        setAddMember(false);\n      }}\n    >\n      <div className={styles.titleWrapper}>\n        <div className={styles.title}>{groupName}</div>\n\n        <div className={styles.actionList}>\n          <EditIcon />\n          <GroupAddIcon\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddMember(true);\n              console.log(addMember);\n            }}\n          />\n          {addMember ? (\n            <div\n              className={styles.addMemberWrapper}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              <div>Add New Member</div>\n              <form action=\"\">\n                <input type=\"text\" />\n              </form>\n              <hr />\n              <div className={styles.memberWrapper}>\n                <div>kevin@gmail.com</div>\n                <button>Add</button>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n\n      {articleList[0] ? (\n        <CardWrapper />\n      ) : (\n        <div class={styles.emptyWrapper}>\n          <img src={team_img} alt=\"\" />\n          <div class={styles.subtitle}>\n            Share the content by using our extension\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n",["199","200"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/group_Reducer.js",[],["201","202"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx",["203","204","205","206"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport AddArticle from \"../AddArticle\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE, INITARTICLEFOLDERS } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport Folder from \"./Folder\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n    textAlign: \"left\",\n    padding: \"0px\",\n    flexGrow: 1,\n    maxWidth: 200,\n    marginBottom: \"15px\",\n  },\n});\n\nexport default function FolderTab() {\n  const itemstyle = makeStyles({\n    root: {\n      paddingLeft: \"25px\",\n\n      maxWidth: 200,\n      marginBottom: \"5px\",\n    },\n  });\n  const classes = useStyles();\n  const itemStyle = itemstyle();\n  const dispatch = useDispatch();\n  const [addArticle, setAddArticle] = useState(false);\n  const [tabChange, setTabChange] = useState(\"\");\n  const [editFolder, setEditFolder] = useState(false);\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n\n  const articleFolders = useSelector((state) => {\n    console.log(state);\n    return state.articleReducer.articleFolders;\n  });\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      dispatch(INITARTICLEFOLDERS(newArticleFolders));\n\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      dispatch(INITARTICLEFOLDERS(newArticleFolders));\n    }\n  }\n\n  useEffect(() => {\n    console.log(tabChange);\n    function getArticleFolders() {\n      if (user) {\n        app\n          .getMemberArticleFolders(user.uid)\n          .then((articleFolders) => {\n            console.log(articleFolders);\n            dispatch(INITARTICLEFOLDERS(articleFolders));\n\n            return articleFolders;\n          })\n          .then(async (articleFolders) => {\n            let tempFolderList = [];\n            for (let i = 0; i < articleFolders.length; i++) {\n              let tags = await app.getMemberFolderTags(articleFolders[i].id);\n              console.log(tags);\n              tempFolderList.push({ ...articleFolders[i], tags: tags });\n            }\n            console.log(tempFolderList);\n            return tempFolderList;\n          })\n          .then((newFolder) => {\n            console.log(newFolder);\n            dispatch(INITARTICLEFOLDERS(newFolder));\n          });\n      }\n    }\n    getArticleFolders();\n  }, [user, tabChange]);\n\n  function showArticleFolders(folders) {\n    let articleFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        articleFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                className={itemStyle.root}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"#5B5B5B\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {\n                  console.log(folders[i].id);\n                  // dispatch(SWITCHARTICLE(folders[i].id));\n                }}\n              >\n                <Folder\n                  user={user}\n                  folderTags={folders[i].tags}\n                  key={folders[i].id}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return articleFolderList;\n  }\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      })\n      .then(() => {\n        setTabChange(tabChange + 1);\n      });\n  }\n  const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <Link to={\"/board\"}>\n          <div className={styles.sectionTitle}>My Board</div>\n          <TreeView\n            className={classes.root}\n            defaultExpanded={[\"\"]}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            <div\n              className={styles.importWrapper}\n              onClick={() => {\n                setAddArticle(true);\n              }}\n            >\n              <AddCircleIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n              <div className={styles.importTitle}>Import Article</div>\n            </div>\n            <TreeItem\n              nodeId=\"tagAll\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <DescriptionIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                  <div className={styles.labelTitle}>All Articles</div>\n                </div>\n              }\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            ></TreeItem>\n            <div>Tags</div>\n            <DragDropContext onDragEnd={onDragEnd}>\n              {articleFolderList}\n            </DragDropContext>\n          </TreeView>\n          {addArticle\n            ? createPortal(\n                <div className={styles.popup}>\n                  <div\n                    className={styles.blur}\n                    onClick={() => {\n                      setAddArticle(false);\n                    }}\n                  ></div>\n                  <AddArticle user={user} />\n                </div>,\n                document.body\n              )\n            : \"\"}\n          {editFolder\n            ? createPortal(\n                <div className={styles.popup}>\n                  <div\n                    className={styles.blur}\n                    onClick={() => {\n                      setEditFolder(false);\n                    }}\n                  ></div>\n                  <div className={styles.addFolder}>\n                    <div className={styles.addTitle}>Add New Folder</div>\n                    <form id=\"addForm\" action=\"\">\n                      <input\n                        className={styles.input}\n                        type=\"text\"\n                        placeholder=\"Folder Name\"\n                        value={addFolderInput}\n                        onChange={(e) => {\n                          setAddFolderInput(e.target.value);\n                        }}\n                      />\n                      <button\n                        type=\"submit\"\n                        className={styles.saveBtn}\n                        form=\"addForm\"\n                        onClick={() => {\n                          if (user) {\n                            addArticleFolder(addFolderInput, user.uid);\n                            setEditFolder(false);\n                          } else {\n                            alert(\"Please login to add folder!\");\n                          }\n                        }}\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditFolder(false);\n                        }}\n                        className={styles.cancelBtn}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n                </div>,\n                document.body\n              )\n            : \"\"}\n          <div\n            className={styles.subTitle}\n            onClick={() => {\n              setEditFolder(true);\n            }}\n          >\n            Add Folder\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx",["207","208","209","210","211","212"],"import { useLocation, useHistory } from \"react-router-dom\";\nimport { localUrl, ec2Url } from \"../../config.js\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db } from \"../../firebase.js\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport styles from \"./RSSPage.module.css\";\nimport { app } from \"../../lib/lib.js\";\n\nimport { useSelector } from \"react-redux\";\n\nexport default function RSSPage(props) {\n  console.log(\"page rerender, props is \", props.item);\n  const [feedItem, setFeedItem] = useState({});\n\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n\n  let user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function postDataToServer(\n    url,\n    data = {\n      url: \"www.sylish.com\",\n      uid: \"12344\",\n    }\n  ) {\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n        response.json().then(function (data) {\n          console.log(data);\n          alert(data.msg);\n        });\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  }\n  useEffect(() => {\n    if (props.item) {\n      console.log(props.item);\n      setFeedItem(props.item);\n    } else {\n      console.log(\"this is in else ...run\");\n      //   console.log(\"useeffect run\");\n      //   app.getFeedContent(feedId).then((feedItem) => {\n      //     console.log(feedItem);\n      //     setFeedItem(feedItem);\n      //   });\n    }\n  }, [props.item]);\n\n  //   useEffect(() => {\n  //     function getArticles() {\n  //       db.collection(\"Articles\")\n  //         .doc(id)\n  //         .onSnapshot(function (doc) {\n  //           setArticle({\n  //             title: doc.data().title,\n  //             markDown: doc.data().markDown,\n  //           });\n  //         });\n  //     }\n  //     getArticles();\n  //   }, []);\n  console.log(feedItem);\n  return (\n    <div className={styles.page}>\n      <div className={styles.head}>\n        <ArrowBack\n          style={{ color: \"#FFFCEC\", cursor: \"pointer\" }}\n          onClick={props.onClick}\n        />\n        <BookmarkBorderIcon\n          onClick={() => {\n            postDataToServer(localUrl, {\n              url: feedItem.link,\n              uid: user.uid,\n            });\n          }}\n        />\n      </div>\n      <div className={styles.title}>{feedItem.title}</div>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: feedItem.content || feedItem[\"content:encoded\"],\n        }}\n        className={styles.content}\n      ></div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx",["213","214","215"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { db } from \"../firebase.js\";\nimport CardWrapper from \"./CardWrapper.jsx\";\nimport dispatch from \"react-redux\";\nimport styles from \"./Board.module.css\";\nimport { INITARTICLE } from \"../redux/actions\";\n\nexport default function Board(props) {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .orderBy(\"date\", \"desc\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n              readerHtml: doc.data().readerHtml,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.boardWrapper}>\n      <div className={styles.title}>My Saved Article</div>\n      <CardWrapper />\n    </div>\n  );\n}\n",["216","217"],"/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js",["218","219"],"/Users/kevinzhang/Documents/Taggy/client/app/src/config.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx",["220"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst RSS_Reducer = (state = { feed: {}, ChannelRSSId: \"all\" }, action) => {\n  switch (action.type) {\n    case \"GETRSSRESPONSE\":\n      return {\n        ...state,\n        feed: action.feed,\n        url: action.url,\n      };\n\n    case \"SWITCHRSS\":\n      return {\n        ...state,\n        ChannelRSSId: action.ChannelRSSId,\n      };\n    case \"INITUSERRSSLIST\":\n      return {\n        ...state,\n        UserRSSList: action.RSSList,\n      };\n    case \"SETUSERALLFEEDS\":\n      return {\n        ...state,\n        userAllFeeds: [...state.userAllFeeds, action.userAllFeeds],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default RSS_Reducer;\n",["221","222"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx",["223","224"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx",["225","226","227","228","229"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { SWITCHRSS } from \"../../redux/actions\";\nexport default function RSSFolder(props) {\n  const [RSS, setRSS] = useState([]);\n  const dispatch = useDispatch();\n  let user = props.user;\n  //   useEffect(() => {\n  //     function getMemberFolderTags() {\n  //       if (user) {\n  //         app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //           setRSS(folderTags);\n  //         });\n  //       }\n  //     }\n  //     getMemberFolderTags();\n  //   }, [user]);\n\n  function showRSSItem(RSS) {\n    let RSSList = [];\n    if (RSS.length > 0) {\n      let count = 0;\n      for (let i in RSS) {\n        console.log(RSS[i]);\n        RSSList.push(\n          <Draggable draggableId={RSS[i].id} index={count} key={RSS[i].id}>\n            {(provided) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <TreeItem\n                  key={RSS[i].id}\n                  nodeId={RSS[i].id}\n                  label={\n                    <div className={styles.labelWrapper}>\n                      <BookmarkIcon style={{ fontSize: 20 }} />\n                      <div className={styles.labelTitle}>{RSS[i].title}</div>\n                    </div>\n                  }\n                  onClick={() => {\n                    console.log(RSS[i].id);\n                    dispatch(SWITCHRSS(RSS[i].id));\n                    //   dispatch(SWITCHARTICLE(tabs[i].id));\n                  }}\n                />\n              </div>\n            )}\n          </Draggable>\n        );\n        count++;\n      }\n    }\n    return RSSList;\n  }\n  const RSSList = showRSSItem(props.folderRSS);\n  return <div>{RSSList}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"../SideTab/Folder\";\n\nexport default function GroupFolderSub(props) {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function showArticleFolders(folders) {\n    console.log(folders);\n    let articleFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        console.log(folders[i].tags);\n        articleFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"#5B5B5B\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {\n                  console.log(folders[i].id);\n                  // dispatch(SWITCHARTICLE(folders[i].id));\n                }}\n              >\n                <Folder\n                  user={user}\n                  folderTags={folders[i].tags}\n                  key={folders[i].id}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return articleFolderList;\n  }\n  let folderList = showArticleFolders(props.folders);\n  return folderList;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx",["247","248","249","250","251"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { SWITCHRSS } from \"../../redux/actions\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport { INITUSERRSSLIST } from \"../../redux/actions\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport RSSFolder from \"./RSSFolder\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n    flexGrow: 10,\n    maxWidth: 220,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function RSSTab(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [showPage, setShowPage] = useState(false);\n  const [RSSFolders, setRSSFolders] = useState([]);\n\n  function getUserRSSList(uid) {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        dispatch(INITUSERRSSLIST(doc.data().subscribedRSS));\n      });\n  }\n  function addNewGroup(uid, name) {\n    db.collection(\"GroupBoard\")\n      .add({\n        name: name,\n        member: [uid],\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            board: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const userRSSList = useSelector((state) => {\n    return state.RSSReducer.UserRSSList;\n  });\n  useEffect(() => {}, [userRSSList]);\n  useEffect(() => {\n    function getRSSFolders() {\n      if (user) {\n        app\n          .getMemberRSSFolders(user.uid)\n          .then((RSSFolders) => {\n            setRSSFolders(RSSFolders);\n            return RSSFolders;\n          })\n          .then((RSSFolders) => {\n            RSSFolders.forEach(async (folder) => {\n              if (folder.RSSIds) {\n                await folder.RSSIds.forEach(async (RSSId) => {\n                  let RSS = await app.getRSSInfo(RSSId);\n                  folder.RSS.push(RSS);\n                });\n              }\n\n              return folder;\n            });\n\n            setRSSFolders(RSSFolders);\n          });\n      }\n    }\n    if (user) {\n      getUserRSSList(user.uid);\n    }\n    getRSSFolders();\n  }, [user]);\n  function addRSSFolder(name, uid) {\n    db.collection(\"RSSFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            RSSFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  function showRSSFolders(folders) {\n    let RSSFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        RSSFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon style={{ fontSize: 20 }} />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {}}\n              >\n                <RSSFolder\n                  user={user}\n                  folderId={folders[i].id}\n                  folderRSS={folders[i].RSS}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return RSSFolderList;\n  }\n  console.log(RSSFolders);\n  const articleFolderList = showRSSFolders(RSSFolders);\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newRSSFolders = [...RSSFolders];\n      let newRSSIds;\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let moveId = folder.RSSIds[source.index];\n          newRSSIds = [...folder.RSSIds];\n\n          newRSSIds.splice(source.index, 1);\n          newRSSIds.splice(destination.index, 0, moveId);\n          console.log(newRSSIds);\n          let moveItem = folder.RSS[source.index];\n          folder.RSS.splice(source.index, 1);\n          folder.RSS.splice(destination.index, 0, moveItem);\n          folder.RSSIds = newRSSIds;\n        }\n      });\n      console.log(newRSSFolders);\n\n      db.collection(\"RSSFolders\").doc(destination.droppableId).update({\n        RSS: newRSSIds,\n      });\n      setRSSFolders(newRSSFolders);\n\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newRSSFolders = [...RSSFolders];\n      let moveId;\n      let moveItem;\n      let newSourceRSSIds;\n      let newDestinationRSSIds;\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          moveId = folder.RSSIds[source.index];\n          moveItem = folder.RSS[source.index];\n          newSourceRSSIds = [...folder.RSSIds];\n          newSourceRSSIds.splice(source.index, 1);\n          folder.RSS.splice(source.index, 1);\n          folder.RSSIds = newSourceRSSIds;\n          db.collection(\"RSSFolders\").doc(source.droppableId).update({\n            RSS: newSourceRSSIds,\n          });\n        }\n      });\n      newRSSFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          newDestinationRSSIds = [...folder.RSSIds];\n          newDestinationRSSIds.splice(destination.index, 0, moveId);\n          folder.RSS.splice(destination.index, 0, moveItem);\n          folder.RSSIds = newDestinationRSSIds;\n          db.collection(\"RSSFolders\").doc(destination.droppableId).update({\n            RSS: newDestinationRSSIds,\n          });\n        }\n      });\n      setRSSFolders(newRSSFolders);\n    }\n  }\n  console.log(props.focus);\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <div className={styles.sectionTitle}>Home</div>\n        <Link to={\"/home\"}>\n          <div\n            className={\n              props.focus === \"home\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <TodayIcon fontSize=\"small\" />\n            <div className={styles.keyTitle}>Today</div>\n          </div>\n        </Link>\n        <Link to={\"/home/explore\"}>\n          <div\n            className={\n              props.focus === \"explore\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <ExploreIcon fontSize=\"small\" />\n            <div className={styles.keyTitle}>Explore</div>\n          </div>\n        </Link>\n        <Link to={\"/home/myfeeds\"}>\n          <div\n            className={\n              props.focus === \"myfeeds\"\n                ? styles.keyTitleWrapper\n                : styles.titleWrapper\n            }\n          >\n            <RssFeedIcon fontSize=\"small\" />\n            <div\n              className={styles.keyTitle}\n              onClick={() => {\n                dispatch(SWITCHRSS(\"all\"));\n              }}\n            >\n              My Feeds\n            </div>\n          </div>\n        </Link>\n        <div className={styles.subscriptionWrapper}>\n          <div className={styles.subscription}>Subscription</div>\n          <SettingsIcon fontSize=\"small\" style={{ color: \"#b2b2b2\" }} />\n        </div>\n        <TreeView\n          className={classes.root}\n          defaultExpanded={[\"\"]}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n        >\n          <DragDropContext onDragEnd={onDragEnd}>\n            {articleFolderList}\n          </DragDropContext>\n        </TreeView>\n\n        <Link to={\"/rssexplore\"}>\n          <div className={styles.subTitle}>Follow New Source</div>\n        </Link>\n        <div\n          className={styles.subTitle}\n          onClick={() => {\n            setShowPage(true);\n          }}\n        >\n          Add New Folder\n        </div>\n        {showPage\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setShowPage(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Add New Folder</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Folder Name\"\n                      value={addFolderInput}\n                      onChange={(e) => {\n                        setAddFolderInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addRSSFolder(addFolderInput, user.uid);\n                          setShowPage(false);\n                        } else {\n                          alert(\"Please login to add folder!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setShowPage(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx",["252","253","254","255"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { uiConfig, auth } from \"../../firebase.js\";\nexport default function Signup() {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  function firebaseSignIn(email, password) {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(\"you click sign in and successfully\");\n        history.push(\"/board\");\n        // Signed in\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className=\"block\" className={styles.block}>\n        <h2 className={styles.title}>Sign In</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignIn(email, password);\n          }}\n        >\n          {/* <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input type=\"text\" name=\"username\" />\n          </div> */}\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign In</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx",["256"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx",["257","258","259","260","261"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./FolderTab.module.css\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"#4F4F4F\",\n  },\n});\nexport default function Folder(props) {\n  console.log(\"rerender la \");\n  const classes = useStyles();\n  const [tags, setTags] = useState([]);\n  const dispatch = useDispatch();\n  let folderTags = props.folderTags;\n  // let user = props.user;\n  // useEffect(() => {\n  //   function getMemberFolderTags() {\n  //     if (user) {\n  //       app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //         setTags(folderTags);\n  //       });\n  //     }\n  //   }\n  //   getMemberFolderTags();\n  // }, [user]);\n  console.log(\"======================================\");\n  console.log(folderTags);\n  function showTabTreeList(tags) {\n    let tabList = [];\n    if (tags) {\n      let count = 0;\n      for (let i in tags) {\n        tabList.push(\n          <Draggable draggableId={tags[i].id} index={count} key={tags[i].id}>\n            {(provided) => (\n              <TreeItem\n                key={tags[i].id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n                nodeId={tags[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <BookmarkIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                    {tags[i].label ? (\n                      <div className={styles.labelTitle}>{tags[i].label}</div>\n                    ) : (\n                      <Skeleton\n                        className={classes.root}\n                        variant=\"rect\"\n                        width={100}\n                        height={12}\n                        animation=\"pulse\"\n                      />\n                    )}\n                  </div>\n                }\n                onClick={() => {\n                  console.log(tags[i].id);\n                  dispatch(SWITCHARTICLE(tags[i].id));\n                }}\n              />\n            )}\n          </Draggable>\n        );\n        count++;\n      }\n    }\n    return tabList;\n  }\n  const tabList = showTabTreeList(folderTags);\n  return <div>{tabList}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx",["262","263"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { local, ec2Url } from \"../../config.js\";\nimport styles from \"./FindRSS.module.css\";\nimport * as RSSParser from \"rss-parser\";\nimport { GETRSSRESPONSE } from \"../../redux/actions\";\nimport Axios from \"axios\";\nexport default function FindRSS(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function requestRSS(url) {\n    const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n    let parser = new RSSParser();\n    parser.parseURL(CORS_PROXY + url, function (err, feed) {\n      if (err) {\n        fetch(local + \"rss/fetch\", {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify({ url: url }),\n        }).then(function (response) {\n          if (response.status !== 200) {\n            console.log(\"sth goes wrong in backend \");\n          } else {\n            response.json().then((data) => {\n              dispatch(GETRSSRESPONSE(data.rss, url));\n            });\n          }\n        });\n      } else {\n        console.log(feed);\n        console.log(feed.title);\n        dispatch(GETRSSRESPONSE(feed, url));\n        feed.items.forEach(function (entry) {\n          console.log(entry.title + \":\" + entry.link);\n        });\n      }\n    });\n  }\n\n  return (\n    <div className={styles.addArticle}>\n      <div class={styles.addTitle}>Add new source to reach this world</div>\n      <form\n        className={styles.addForm}\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (user) {\n            requestRSS(reqUrl);\n          }\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"input\"\n          className={styles.input}\n          value={reqUrl}\n          onChange={(e) => setReqUrl(e.currentTarget.value)}\n        />\n        <button type=\"submit\" className={styles.add}>\n          搜尋\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx",["264","265","266","267"],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js",["268","269"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx",["270"],"/Users/kevinzhang/Documents/Taggy/client/app/src/index.js",["271"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(allReducers, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/GraphBoard.jsx",["272","273","274","275"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx",["276","277","278","279","280"],"import * as d3 from \"d3\";\nimport { dataSet } from \"../../data.js\";\nimport { dataSet2 } from \"../../data2.js\";\nimport { useD3 } from \"../../hooks/useD3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { app } from \"../../lib/gragh_lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport styles from \"./Graph.module.css\";\nexport default function Graph() {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  const [data, setData] = useState({});\n  function color() {\n    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n    return (d) => scale(d.group);\n  }\n  function drag(simulation) {\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let id;\n      const height = 800;\n      const width = 1000;\n      svg.selectAll(\"*\").remove();\n      if (data.nodes) {\n        const links = data.links.map((d) => Object.create(d));\n        const nodes = data.nodes.map((d) => Object.create(d));\n\n        const simulation = d3\n          .forceSimulation(nodes)\n          .force(\n            \"link\",\n            d3.forceLink(links).id((d) => d.id)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(-500).distanceMax([500]))\n          .force(\"center\", d3.forceCenter(width / 2 - 300, height / 2));\n\n        const link = svg\n          .append(\"g\")\n          .attr(\"stroke\", \"#999\")\n          .attr(\"stroke-opacity\", 0.6)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\n\n        const node = svg\n          .append(\"g\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"stroke-linejoin\", \"round\")\n          .selectAll(\"g\")\n          .data(nodes)\n          .join(\"g\")\n          .call(drag(simulation));\n        const circle = node\n          .append(\"circle\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"r\", 5)\n          .attr(\"fill\", \"#4F4F4F\");\n        const text = node\n          .append(\"text\")\n          .text((d) => d.id)\n          .clone(true)\n          .lower()\n          .attr(\"stroke-width\", 0.2)\n          .attr(\"stroke\", \"white\")\n          .attr(\"fill\", \"white\")\n          .attr(\"id\", (d) => d.tagId)\n          .on(\"click\", (a) => {\n            console.log(a);\n            console.log(a.target.id);\n            dispatch(SWITCHARTICLE(a.target.id));\n          });\n\n        node.append(\"title\").text((d) => d.id);\n\n        simulation.on(\"tick\", () => {\n          link\n            .attr(\"x1\", (d) => d.source.x)\n            .attr(\"y1\", (d) => d.source.y)\n            .attr(\"x2\", (d) => d.target.x)\n            .attr(\"y2\", (d) => d.target.y);\n\n          circle.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n          text.attr(\"x\", (d) => d.x + 10).attr(\"y\", (d) => d.y);\n        });\n      }\n\n      return svg.node();\n    },\n    [data]\n  );\n  const articleList = useSelector((state) => {\n    console.log(state);\n    return state.articleReducer.articleList;\n  });\n  function getGraphData(uid) {\n    return new Promise(async (resolve) => {\n      let memberTags = await app.getMemberTags(uid);\n\n      resolve(memberTags);\n    });\n  }\n  // {\n  //   id: \"1qeqw\",\n  //   value: \"ee\"\n  //   label: \"ee\"\n  // }\n  function createCombinationList(tags) {\n    let combList = [];\n    for (let i = 0; i < tags.length - 1; i++) {\n      for (let j = i + 1; j < tags.length; j++) {\n        combList.push([tags[i], tags[j]]);\n      }\n    }\n    return combList;\n  }\n  function countCombinationNumber(articleList, combList) {\n    console.error(articleList);\n    let links = [];\n    console.log(combList);\n    for (let i = 0; i < combList.length; i++) {\n      let combNumber = 0;\n      articleList.forEach((article) => {\n        if (article.tags) {\n          if (\n            article.tags.includes(combList[i][0].id) &&\n            article.tags.includes(combList[i][1].id)\n          ) {\n            combNumber += 1;\n          }\n        }\n      });\n      links.push({\n        source: combList[i][0].label,\n        target: combList[i][1].label,\n        value: combNumber,\n      });\n    }\n    return links;\n  }\n  function combInit(tags) {\n    let combList = createCombinationList(tags);\n    console.warn(articleList);\n    return countCombinationNumber(articleList, combList);\n  }\n\n  function initGraphData(uid) {\n    return new Promise((resolve) => {\n      getGraphData(uid)\n        .then((memberTags) => {\n          let links = combInit(memberTags);\n          let nodes = [];\n          memberTags.forEach((tag) => {\n            nodes.push({\n              id: tag.value,\n              tagId: tag.id,\n            });\n          });\n          console.log(links);\n          return [nodes, links];\n        })\n        .then(([nodes, links]) => {\n          resolve({\n            nodes: nodes,\n            links: links,\n          });\n        });\n    });\n  }\n  useEffect(() => {\n    if (user && articleList[0]) {\n      console.log(articleList);\n      // setDataRun(true);\n      console.log(user);\n      initGraphData(user.uid).then((data) => {\n        console.log(\"lets set dat=============================a\");\n        console.log(data);\n        setData(data);\n      });\n    }\n  }, [user, articleList]);\n  return (\n    <div className={styles.graphWrapper}>\n      <div className={styles.graphContainer}>\n        <div className={styles.titleWrapper}>\n          {/* <div className={styles.title}>Tags Graph</div> */}\n        </div>\n        <div className={styles.graph}>\n          <svg\n            ref={ref}\n            style={{\n              height: 800,\n              width: \"100%\",\n              marginRight: \"20px\",\n              marginLeft: \"0px\",\n            }}\n          >\n            <g className=\"plot-area\" />\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx",["281","282"],"import styles from \"./AddArticle.module.css\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { localUrl, ec2Url } from \"../config.js\";\nimport { style } from \"d3\";\n\nexport default function AddArticle(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function postDataToServer(\n    url,\n    data = {\n      url: \"www.sylish.com\",\n      uid: \"12344\",\n    }\n  ) {\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n        response.json().then(function (data) {\n          console.log(data);\n        });\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  }\n  return (\n    <div className={styles.addArticle}>\n      <div className={styles.title}>Import Article</div>\n      <div className={styles.description}>Import the web content you love</div>\n      <input\n        type=\"text\"\n        name=\"input\"\n        className={styles.input}\n        value={reqUrl}\n        onChange={(e) => setReqUrl(e.currentTarget.value)}\n      />\n      <button\n        type=\"submit\"\n        className={styles.add}\n        onClick={(e) => {\n          if (user) {\n            e.preventDefault();\n            postDataToServer(localUrl, {\n              url: reqUrl,\n              uid: user.uid,\n            });\n          }\n        }}\n      >\n        Import Article\n      </button>\n      <button>Cancel</button>\n\n      <br />\n      {/* <a href=\"http://localhost:2000/route/article/before\">Before</a>\n      <br />\n      <a href=\"http://localhost:2000/route/article/after\">after</a>\n      <br />\n      <a href=\"http://localhost:2000/route/article/MD\">Mark Down</a> */}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx",["283","284"],"import React, { useState } from \"react\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nexport default function Signup() {\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        console.log(authResult.uid);\n        console.log(redirectUrl);\n        await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .set({\n            uid: authResult.uid,\n            email: authResult.email,\n            displaynamename: authResult.displayName,\n          })\n\n          .then(() => console.log(\"Add user to db successfully\"))\n          .then(history.push(\"board\"))\n          .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n          });\n      },\n    },\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  function firebaseSignUp(name, email, password) {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user.user);\n        db.collection(\"Member\").doc(user.user.uid).set({\n          displaynamename: name,\n          email: email,\n          password: password,\n          uid: user.user.uid,\n        });\n      })\n      .then(() => {\n        var user = auth.currentUser;\n        user\n          .updateProfile({\n            displayName: name,\n          })\n          .then(() => console.log(\"update user name successfully\"));\n      })\n      .then(history.push(\"/board\"))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.block}>\n        <h2 className={styles.title}>Sign Up</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignUp(name, email, password);\n          }}\n        >\n          <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={name}\n              onChange={(e) => {\n                setName(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign Up</button>\n        </form>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        <div className={styles.login}>\n          <span>Already have an account? </span>\n          <Link to={\"/Signin\"}>Sign in</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["285","286"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx",["287","288","289","290","291","292"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx",["293","294","295"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx",["296"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./RSSCard.module.css\";\n\nexport default function RSSCard(props) {\n  var elem = document.createElement(\"div\");\n  elem.innerHTML = props.item.content;\n  let src;\n  if (elem.querySelector(\"img\")) {\n    src = elem.querySelector(\"img\").src;\n  }\n\n  return (\n    <div className={styles.container} onClick={props.onClick}>\n      <div className={styles.card}>\n        <div className={styles.color}>\n          <img src={src} alt=\"\" className={styles.img} />\n        </div>\n\n        <div className={styles.wordWrapper}>\n          <div className={styles.title}>{props.item.title}</div>\n          <div className={styles.creator}>{props.item.creator}</div>\n          <div className={styles.content}>\n            {props.item.contentSnippet || props.item[\"content:encodedSnippet\"]}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["297","298"],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js",["299"],"import { resolve } from \"path\";\nimport { app } from \"./lib.js\";\napp.getGraphData = function (uid) {\n  return new Promise(async (resolve) => {\n    let memberTags = await app.getMemberTags(uid);\n    console.log(\"2\");\n    resolve(memberTags);\n  });\n};\n\napp.initGraphData = function (uid) {\n  return new Promise((resolve) => {\n    app\n      .getGraphData(uid)\n      .then((memberTags) => {\n        console.log(memberTags);\n        let nodes = [];\n        memberTags.forEach((tag) => {\n          nodes.push({\n            id: tag.value,\n            tagId: tag.id,\n          });\n        });\n        return nodes;\n      })\n      .then((nodes) => {\n        resolve({\n          nodes: nodes,\n          links: [],\n        });\n      });\n  });\n};\n\nexport { app };\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard_Today.jsx",["300","301","302","303","304","305","306"],"/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js",[],{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":11,"column":10,"nodeType":"313","messageId":"314","endLine":11,"endColumn":14},{"ruleId":"311","severity":1,"message":"315","line":12,"column":8,"nodeType":"313","messageId":"314","endLine":12,"endColumn":22},{"ruleId":"311","severity":1,"message":"316","line":13,"column":8,"nodeType":"313","messageId":"314","endLine":13,"endColumn":20},{"ruleId":"311","severity":1,"message":"317","line":14,"column":8,"nodeType":"313","messageId":"314","endLine":14,"endColumn":22},{"ruleId":"311","severity":1,"message":"318","line":25,"column":27,"nodeType":"313","messageId":"314","endLine":25,"endColumn":36},{"ruleId":"311","severity":1,"message":"319","line":26,"column":8,"nodeType":"313","messageId":"314","endLine":26,"endColumn":14},{"ruleId":"311","severity":1,"message":"320","line":56,"column":34,"nodeType":"313","messageId":"314","endLine":56,"endColumn":45},{"ruleId":"321","severity":1,"message":"322","line":254,"column":6,"nodeType":"323","endLine":254,"endColumn":23,"suggestions":"324"},{"ruleId":"307","replacedBy":"325"},{"ruleId":"309","replacedBy":"326"},{"ruleId":"311","severity":1,"message":"327","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"328","line":5,"column":8,"nodeType":"313","messageId":"314","endLine":5,"endColumn":16},{"ruleId":"311","severity":1,"message":"329","line":10,"column":8,"nodeType":"313","messageId":"314","endLine":10,"endColumn":18},{"ruleId":"311","severity":1,"message":"330","line":11,"column":8,"nodeType":"313","messageId":"314","endLine":11,"endColumn":16},{"ruleId":"311","severity":1,"message":"331","line":12,"column":8,"nodeType":"313","messageId":"314","endLine":12,"endColumn":15},{"ruleId":"311","severity":1,"message":"332","line":19,"column":9,"nodeType":"313","messageId":"314","endLine":19,"endColumn":13},{"ruleId":"321","severity":1,"message":"322","line":67,"column":6,"nodeType":"323","endLine":67,"endColumn":15,"suggestions":"333"},{"ruleId":"307","replacedBy":"334"},{"ruleId":"309","replacedBy":"335"},{"ruleId":"307","replacedBy":"336"},{"ruleId":"309","replacedBy":"337"},{"ruleId":"311","severity":1,"message":"315","line":11,"column":8,"nodeType":"313","messageId":"314","endLine":11,"endColumn":22},{"ruleId":"311","severity":1,"message":"316","line":14,"column":8,"nodeType":"313","messageId":"314","endLine":14,"endColumn":20},{"ruleId":"311","severity":1,"message":"320","line":63,"column":34,"nodeType":"313","messageId":"314","endLine":63,"endColumn":45},{"ruleId":"321","severity":1,"message":"322","line":175,"column":6,"nodeType":"323","endLine":175,"endColumn":23,"suggestions":"338"},{"ruleId":"311","severity":1,"message":"339","line":1,"column":23,"nodeType":"313","messageId":"314","endLine":1,"endColumn":33},{"ruleId":"311","severity":1,"message":"340","line":2,"column":20,"nodeType":"313","messageId":"314","endLine":2,"endColumn":26},{"ruleId":"311","severity":1,"message":"312","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":14},{"ruleId":"311","severity":1,"message":"341","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":12},{"ruleId":"311","severity":1,"message":"342","line":9,"column":10,"nodeType":"313","messageId":"314","endLine":9,"endColumn":13},{"ruleId":"311","severity":1,"message":"343","line":19,"column":7,"nodeType":"313","messageId":"314","endLine":19,"endColumn":13},{"ruleId":"311","severity":1,"message":"344","line":1,"column":28,"nodeType":"313","messageId":"314","endLine":1,"endColumn":36},{"ruleId":"311","severity":1,"message":"328","line":5,"column":8,"nodeType":"313","messageId":"314","endLine":5,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":37,"column":6,"nodeType":"323","endLine":37,"endColumn":12,"suggestions":"345"},{"ruleId":"307","replacedBy":"346"},{"ruleId":"309","replacedBy":"347"},{"ruleId":"321","severity":1,"message":"348","line":11,"column":6,"nodeType":"313","endLine":11,"endColumn":18},{"ruleId":"321","severity":1,"message":"349","line":11,"column":6,"nodeType":"313","endLine":11,"endColumn":18,"suggestions":"350"},{"ruleId":"311","severity":1,"message":"327","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"307","replacedBy":"351"},{"ruleId":"309","replacedBy":"352"},{"ruleId":"311","severity":1,"message":"353","line":11,"column":10,"nodeType":"313","messageId":"314","endLine":11,"endColumn":15},{"ruleId":"321","severity":1,"message":"322","line":111,"column":6,"nodeType":"323","endLine":111,"endColumn":12,"suggestions":"354"},{"ruleId":"311","severity":1,"message":"355","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":19},{"ruleId":"311","severity":1,"message":"342","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":13},{"ruleId":"311","severity":1,"message":"356","line":11,"column":10,"nodeType":"313","messageId":"314","endLine":11,"endColumn":13},{"ruleId":"311","severity":1,"message":"357","line":11,"column":15,"nodeType":"313","messageId":"314","endLine":11,"endColumn":21},{"ruleId":"311","severity":1,"message":"332","line":13,"column":7,"nodeType":"313","messageId":"314","endLine":13,"endColumn":11},{"ruleId":"311","severity":1,"message":"355","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":19},{"ruleId":"311","severity":1,"message":"344","line":1,"column":21,"nodeType":"313","messageId":"314","endLine":1,"endColumn":29},{"ruleId":"311","severity":1,"message":"358","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":22},{"ruleId":"311","severity":1,"message":"359","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":20},{"ruleId":"311","severity":1,"message":"360","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":18},{"ruleId":"311","severity":1,"message":"361","line":6,"column":8,"nodeType":"313","messageId":"314","endLine":6,"endColumn":22},{"ruleId":"311","severity":1,"message":"362","line":8,"column":8,"nodeType":"313","messageId":"314","endLine":8,"endColumn":24},{"ruleId":"311","severity":1,"message":"363","line":9,"column":8,"nodeType":"313","messageId":"314","endLine":9,"endColumn":21},{"ruleId":"311","severity":1,"message":"312","line":11,"column":10,"nodeType":"313","messageId":"314","endLine":11,"endColumn":14},{"ruleId":"311","severity":1,"message":"315","line":12,"column":8,"nodeType":"313","messageId":"314","endLine":12,"endColumn":22},{"ruleId":"311","severity":1,"message":"316","line":13,"column":8,"nodeType":"313","messageId":"314","endLine":13,"endColumn":20},{"ruleId":"311","severity":1,"message":"342","line":15,"column":10,"nodeType":"313","messageId":"314","endLine":15,"endColumn":13},{"ruleId":"311","severity":1,"message":"364","line":17,"column":10,"nodeType":"313","messageId":"314","endLine":17,"endColumn":23},{"ruleId":"311","severity":1,"message":"341","line":18,"column":10,"nodeType":"313","messageId":"314","endLine":18,"endColumn":12},{"ruleId":"311","severity":1,"message":"330","line":19,"column":8,"nodeType":"313","messageId":"314","endLine":19,"endColumn":16},{"ruleId":"311","severity":1,"message":"365","line":20,"column":10,"nodeType":"313","messageId":"314","endLine":20,"endColumn":25},{"ruleId":"311","severity":1,"message":"366","line":24,"column":9,"nodeType":"313","messageId":"314","endLine":24,"endColumn":17},{"ruleId":"311","severity":1,"message":"315","line":11,"column":8,"nodeType":"313","messageId":"314","endLine":11,"endColumn":22},{"ruleId":"311","severity":1,"message":"316","line":12,"column":8,"nodeType":"313","messageId":"314","endLine":12,"endColumn":20},{"ruleId":"311","severity":1,"message":"367","line":50,"column":12,"nodeType":"313","messageId":"314","endLine":50,"endColumn":23},{"ruleId":"321","severity":1,"message":"368","line":104,"column":6,"nodeType":"323","endLine":104,"endColumn":12,"suggestions":"369"},{"ruleId":"311","severity":1,"message":"320","line":160,"column":34,"nodeType":"313","messageId":"314","endLine":160,"endColumn":45},{"ruleId":"311","severity":1,"message":"312","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":14},{"ruleId":"311","severity":1,"message":"370","line":6,"column":8,"nodeType":"313","messageId":"314","endLine":6,"endColumn":26},{"ruleId":"311","severity":1,"message":"371","line":7,"column":10,"nodeType":"313","messageId":"314","endLine":7,"endColumn":18},{"ruleId":"372","severity":1,"message":"373","line":29,"column":30,"nodeType":"374","endLine":29,"endColumn":54},{"ruleId":"311","severity":1,"message":"327","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"355","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":19},{"ruleId":"311","severity":1,"message":"342","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":13},{"ruleId":"311","severity":1,"message":"375","line":11,"column":10,"nodeType":"313","messageId":"314","endLine":11,"endColumn":14},{"ruleId":"311","severity":1,"message":"376","line":22,"column":10,"nodeType":"313","messageId":"314","endLine":22,"endColumn":14},{"ruleId":"311","severity":1,"message":"377","line":22,"column":16,"nodeType":"313","messageId":"314","endLine":22,"endColumn":23},{"ruleId":"311","severity":1,"message":"340","line":3,"column":17,"nodeType":"313","messageId":"314","endLine":3,"endColumn":23},{"ruleId":"311","severity":1,"message":"378","line":7,"column":8,"nodeType":"313","messageId":"314","endLine":7,"endColumn":13},{"ruleId":"311","severity":1,"message":"355","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":19},{"ruleId":"311","severity":1,"message":"379","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":14},{"ruleId":"311","severity":1,"message":"380","line":5,"column":8,"nodeType":"313","messageId":"314","endLine":5,"endColumn":14},{"ruleId":"311","severity":1,"message":"381","line":15,"column":8,"nodeType":"313","messageId":"314","endLine":15,"endColumn":17},{"ruleId":"311","severity":1,"message":"382","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":17},{"ruleId":"311","severity":1,"message":"383","line":3,"column":14,"nodeType":"313","messageId":"314","endLine":3,"endColumn":24},{"ruleId":"311","severity":1,"message":"384","line":9,"column":8,"nodeType":"313","messageId":"314","endLine":9,"endColumn":19},{"ruleId":"311","severity":1,"message":"385","line":6,"column":23,"nodeType":"313","messageId":"314","endLine":6,"endColumn":38},{"ruleId":"311","severity":1,"message":"344","line":1,"column":28,"nodeType":"313","messageId":"314","endLine":1,"endColumn":36},{"ruleId":"311","severity":1,"message":"328","line":5,"column":8,"nodeType":"313","messageId":"314","endLine":5,"endColumn":16},{"ruleId":"311","severity":1,"message":"329","line":8,"column":8,"nodeType":"313","messageId":"314","endLine":8,"endColumn":18},{"ruleId":"321","severity":1,"message":"322","line":37,"column":6,"nodeType":"323","endLine":37,"endColumn":12,"suggestions":"386"},{"ruleId":"311","severity":1,"message":"387","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":17},{"ruleId":"311","severity":1,"message":"388","line":3,"column":10,"nodeType":"313","messageId":"314","endLine":3,"endColumn":18},{"ruleId":"311","severity":1,"message":"389","line":19,"column":12,"nodeType":"313","messageId":"314","endLine":19,"endColumn":17},{"ruleId":"311","severity":1,"message":"390","line":50,"column":11,"nodeType":"313","messageId":"314","endLine":50,"endColumn":13},{"ruleId":"321","severity":1,"message":"391","line":211,"column":6,"nodeType":"323","endLine":211,"endColumn":25,"suggestions":"392"},{"ruleId":"311","severity":1,"message":"340","line":4,"column":20,"nodeType":"313","messageId":"314","endLine":4,"endColumn":26},{"ruleId":"311","severity":1,"message":"353","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":15},{"ruleId":"311","severity":1,"message":"393","line":28,"column":17,"nodeType":"313","messageId":"314","endLine":28,"endColumn":26},{"ruleId":"311","severity":1,"message":"393","line":67,"column":13,"nodeType":"313","messageId":"314","endLine":67,"endColumn":22},{"ruleId":"307","replacedBy":"394"},{"ruleId":"309","replacedBy":"395"},{"ruleId":"311","severity":1,"message":"396","line":6,"column":10,"nodeType":"313","messageId":"314","endLine":6,"endColumn":21},{"ruleId":"311","severity":1,"message":"397","line":18,"column":9,"nodeType":"313","messageId":"314","endLine":18,"endColumn":26},{"ruleId":"311","severity":1,"message":"366","line":19,"column":9,"nodeType":"313","messageId":"314","endLine":19,"endColumn":17},{"ruleId":"311","severity":1,"message":"332","line":104,"column":9,"nodeType":"313","messageId":"314","endLine":104,"endColumn":13},{"ruleId":"321","severity":1,"message":"398","line":149,"column":6,"nodeType":"323","endLine":149,"endColumn":32,"suggestions":"399"},{"ruleId":"321","severity":1,"message":"400","line":152,"column":6,"nodeType":"323","endLine":152,"endColumn":20,"suggestions":"401"},{"ruleId":"311","severity":1,"message":"402","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":17},{"ruleId":"311","severity":1,"message":"403","line":5,"column":23,"nodeType":"313","messageId":"314","endLine":5,"endColumn":34},{"ruleId":"311","severity":1,"message":"404","line":7,"column":27,"nodeType":"313","messageId":"314","endLine":7,"endColumn":33},{"ruleId":"311","severity":1,"message":"312","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":14},{"ruleId":"307","replacedBy":"405"},{"ruleId":"309","replacedBy":"406"},{"ruleId":"311","severity":1,"message":"382","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":17},{"ruleId":"311","severity":1,"message":"407","line":1,"column":47,"nodeType":"313","messageId":"314","endLine":1,"endColumn":53},{"ruleId":"311","severity":1,"message":"396","line":6,"column":10,"nodeType":"313","messageId":"314","endLine":6,"endColumn":21},{"ruleId":"311","severity":1,"message":"342","line":8,"column":10,"nodeType":"313","messageId":"314","endLine":8,"endColumn":13},{"ruleId":"321","severity":1,"message":"408","line":22,"column":6,"nodeType":"323","endLine":22,"endColumn":22,"suggestions":"409"},{"ruleId":"311","severity":1,"message":"366","line":23,"column":9,"nodeType":"313","messageId":"314","endLine":23,"endColumn":17},{"ruleId":"311","severity":1,"message":"332","line":168,"column":9,"nodeType":"313","messageId":"314","endLine":168,"endColumn":13},{"ruleId":"321","severity":1,"message":"410","line":233,"column":6,"nodeType":"323","endLine":233,"endColumn":35,"suggestions":"411"},"no-native-reassign",["412"],"no-negated-in-lhs",["413"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'MarkunreadIcon' is defined but never used.","'BookmarkIcon' is defined but never used.","'FolderOpenIcon' is defined but never used.","'Droppable' is defined but never used.","'Folder' is defined but never used.","'draggableId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["414"],["412"],["413"],"'nanoid' is defined but never used.","'dispatch' is defined but never used.","'AddArticle' is defined but never used.","'firebase' is defined but never used.","'teamImg' is defined but never used.","'user' is assigned a value but never used.",["415"],["412"],["413"],["412"],["413"],["416"],"'useHistory' is defined but never used.","'ec2Url' is defined but never used.","'db' is defined but never used.","'app' is defined but never used.","'params' is assigned a value but never used.","'useState' is defined but never used.",["417"],["412"],["413"],"React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["418"],["412"],["413"],"'style' is defined but never used.",["419"],"'useEffect' is defined but never used.","'RSS' is assigned a value but never used.","'setRSS' is assigned a value but never used.","'createPortal' is defined but never used.","'makeStyles' is defined but never used.","'TreeView' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'PeopleAltIcon' is defined but never used.","'SWITCHARTICLE' is defined but never used.","'DragDropContext' is defined but never used.","'dispatch' is assigned a value but never used.","'addNewGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserRSSList'. Either include it or remove the dependency array.",["420"],"'StyledFirebaseAuth' is defined but never used.","'uiConfig' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'blue' is defined but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'Axios' is defined but never used.","'auth' is defined but never used.","'Header' is defined but never used.","'RSSHeader' is defined but never used.","'resolve' is defined but never used.","'FieldValue' is defined but never used.","'RssFeedIcon' is defined but never used.","'applyMiddleware' is defined but never used.",["421"],"'dataSet' is defined but never used.","'dataSet2' is defined but never used.","'color' is defined but never used.","'id' is defined but never used.","React Hook useEffect has a missing dependency: 'initGraphData'. Either include it or remove the dependency array.",["422"],"'errorCode' is assigned a value but never used.",["412"],["413"],"'INITARTICLE' is defined but never used.","'lastVisibleNumber' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'batchFetchAllFeeds'. Either include it or remove the dependency array.",["423"],"React Hook useEffect has a missing dependency: 'fetchChannelFeed'. Either include it or remove the dependency array.",["424"],"'Divider' is defined but never used.","'useSelector' is defined but never used.","'Router' is defined but never used.",["412"],["413"],"'useRef' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'selectCategory'. Either exclude it or remove the dependency array.",["425"],"React Hook useEffect has missing dependencies: 'BackEndRSSList', 'FrontEndRSSList', 'PMRSSList', 'TechRSSList', 'UIUXRSSList', and 'batchFetchAllFeeds'. Either include them or remove the dependency array.",["426"],"no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"427","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"432","fix":"436"},{"desc":"437","fix":"438"},{"desc":"432","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},"Update the dependencies array to be: [user, tabChange, dispatch]",{"range":"450","text":"451"},"Update the dependencies array to be: [dispatch, groupId]",{"range":"452","text":"453"},{"range":"454","text":"451"},"Update the dependencies array to be: [dispatch, user]",{"range":"455","text":"456"},"Update the dependencies array to be: [renderChartFn]",{"range":"457","text":"458"},{"range":"459","text":"456"},"Update the dependencies array to be: [getUserRSSList, user]",{"range":"460","text":"461"},{"range":"462","text":"456"},"Update the dependencies array to be: [user, articleList, initGraphData]",{"range":"463","text":"464"},"Update the dependencies array to be: [userRSSList, lastVisible, batchFetchAllFeeds]",{"range":"465","text":"466"},"Update the dependencies array to be: [ChannelRSSId, fetchChannelFeed]",{"range":"467","text":"468"},"Update the dependencies array to be: []",{"range":"469","text":"470"},"Update the dependencies array to be: [selectCategory, lastVisible, batchFetchAllFeeds, FrontEndRSSList, BackEndRSSList, PMRSSList, UIUXRSSList, TechRSSList]",{"range":"471","text":"472"},[8312,8329],"[user, tabChange, dispatch]",[2111,2120],"[dispatch, groupId]",[5796,5813],[1141,1147],"[dispatch, user]",[266,278],"[renderChartFn]",[2990,2996],[3236,3242],"[getUserRSSList, user]",[1188,1194],[5800,5819],"[user, articleList, initGraphData]",[4245,4271],"[userRSSList, lastVisible, batchFetchAllFeeds]",[4323,4337],"[ChannelRSSId, fetchChannelFeed]",[863,879],"[]",[6734,6763],"[selectCategory, lastVisible, batchFetchAllFeeds, FrontEndRSSList, BackEndRSSList, PMRSSList, UIUXRSSList, TechRSSList]"]