[{"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx":"1","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx":"2","/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js":"3","/Users/kevinzhang/Documents/Taggy/client/app/src/data.js":"4","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx":"5","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/MD.jsx":"6","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx":"7","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx":"8","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx":"9","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js":"10","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx":"11","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx":"12","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx":"13","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx":"14","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js":"15","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js":"16","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx":"17","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx":"18","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx":"19","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx":"20","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx":"21","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx":"22","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx":"23","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx":"24","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx":"25","/Users/kevinzhang/Documents/Taggy/client/app/src/index.js":"26","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx":"27","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx":"28","/Users/kevinzhang/Documents/Taggy/client/app/src/config.js":"29","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js":"30","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js":"31","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx":"32","/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js":"33","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js":"34","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx":"35","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx":"36","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx":"37","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx":"38","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph.jsx":"39","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx":"40","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx":"41"},{"size":732,"mtime":1606899622921,"results":"42","hashOfConfig":"43"},{"size":2201,"mtime":1607677683685,"results":"44","hashOfConfig":"43"},{"size":298,"mtime":1607331654722,"results":"45","hashOfConfig":"43"},{"size":1041,"mtime":1607331654707,"results":"46","hashOfConfig":"43"},{"size":1341,"mtime":1607669249055,"results":"47","hashOfConfig":"43"},{"size":1162,"mtime":1606789151511,"results":"48","hashOfConfig":"43"},{"size":1096,"mtime":1607331654660,"results":"49","hashOfConfig":"43"},{"size":208,"mtime":1607331654631,"results":"50","hashOfConfig":"43"},{"size":2171,"mtime":1607662309527,"results":"51","hashOfConfig":"43"},{"size":1665,"mtime":1607331654716,"results":"52","hashOfConfig":"43"},{"size":10412,"mtime":1607673467844,"results":"53","hashOfConfig":"43"},{"size":2663,"mtime":1607510955146,"results":"54","hashOfConfig":"43"},{"size":4721,"mtime":1607670665506,"results":"55","hashOfConfig":"43"},{"size":6119,"mtime":1607691514745,"results":"56","hashOfConfig":"43"},{"size":1070,"mtime":1607754611386,"results":"57","hashOfConfig":"43"},{"size":353,"mtime":1607331654747,"results":"58","hashOfConfig":"43"},{"size":689,"mtime":1607408024999,"results":"59","hashOfConfig":"43"},{"size":852,"mtime":1607422807319,"results":"60","hashOfConfig":"43"},{"size":1463,"mtime":1607671519847,"results":"61","hashOfConfig":"43"},{"size":1292,"mtime":1607491558410,"results":"62","hashOfConfig":"43"},{"size":4008,"mtime":1607331654637,"results":"63","hashOfConfig":"43"},{"size":611,"mtime":1607393736001,"results":"64","hashOfConfig":"43"},{"size":10207,"mtime":1607698420103,"results":"65","hashOfConfig":"43"},{"size":2078,"mtime":1607587851112,"results":"66","hashOfConfig":"43"},{"size":2909,"mtime":1607693537552,"results":"67","hashOfConfig":"43"},{"size":825,"mtime":1607415224800,"results":"68","hashOfConfig":"43"},{"size":6063,"mtime":1607657739214,"results":"69","hashOfConfig":"43"},{"size":1825,"mtime":1607672724924,"results":"70","hashOfConfig":"43"},{"size":196,"mtime":1607662167143,"results":"71","hashOfConfig":"43"},{"size":362,"mtime":1606271805707,"results":"72","hashOfConfig":"43"},{"size":17090,"mtime":1607752591655,"results":"73","hashOfConfig":"43"},{"size":6148,"mtime":1607676830832,"results":"74","hashOfConfig":"43"},{"size":1340,"mtime":1607331654713,"results":"75","hashOfConfig":"43"},{"size":751,"mtime":1607331654733,"results":"76","hashOfConfig":"43"},{"size":1873,"mtime":1607331654597,"results":"77","hashOfConfig":"43"},{"size":2166,"mtime":1606467072664,"results":"78","hashOfConfig":"43"},{"size":455,"mtime":1607754617427,"results":"79","hashOfConfig":"43"},{"size":2568,"mtime":1607698408208,"results":"80","hashOfConfig":"43"},{"size":6106,"mtime":1607677654567,"results":"81","hashOfConfig":"43"},{"size":14694,"mtime":1607757119059,"results":"82","hashOfConfig":"43"},{"size":2610,"mtime":1607771712223,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"1hszq7i",{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"172"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx",["192","193","194"],"import { Divider } from \"material-ui\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { auth } from \"../firebase.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SETMEMBER } from \"../redux/actions\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nexport default function MyRouter() {\n  let dispatch = useDispatch();\n\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        // setUser(user);\n        dispatch(SETMEMBER(user.uid, user.displayName, user.email));\n      } else {\n        history.push(\"/signup\");\n      }\n    });\n  }, [dispatch, history]);\n\n  return <div></div>;\n}\n",["195","196"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx",["197","198","199","200"],"/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js",["201","202"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data.js",[],["203","204"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx",["205","206","207"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { db } from \"../firebase.js\";\nimport CardWrapper from \"./CardWrapper.jsx\";\nimport dispatch from \"react-redux\";\nimport styles from \"./Board.module.css\";\nimport { INITARTICLE } from \"../redux/actions\";\nimport AddArticle from \"./AddArticle\";\nexport default function Board(props) {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .orderBy(\"date\", \"desc\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n              readerHtml: doc.data().readerHtml,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.boardWrapper}>\n      <AddArticle className=\"headMemberIcon\" user={user} />\n      <CardWrapper />\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/MD.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx",[],["208","209"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx",["210"],"import React from \"react\";\n\nimport AddArticle from \"../AddArticle\";\n\nimport styles from \"./Header.module.css\";\n\nexport default function Header(props) {\n  return <header className={styles.header}></header>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx",["211","212"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { local, ec2Url } from \"../../config.js\";\nimport styles from \"./FindRSS.module.css\";\nimport * as RSSParser from \"rss-parser\";\nimport { GETRSSRESPONSE } from \"../../redux/actions\";\nimport Axios from \"axios\";\nexport default function FindRSS(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function requestRSS(url) {\n    const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n    let parser = new RSSParser();\n    parser.parseURL(CORS_PROXY + url, function (err, feed) {\n      if (err) {\n        fetch(local + \"rss/fetch\", {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify({ url: url }),\n        }).then(function (response) {\n          if (response.status !== 200) {\n            console.log(\"sth goes wrong in backend \");\n          } else {\n            response.json().then((data) => {\n              dispatch(GETRSSRESPONSE(data.rss, url));\n            });\n          }\n        });\n      } else {\n        console.log(feed);\n        console.log(feed.title);\n        dispatch(GETRSSRESPONSE(feed, url));\n        feed.items.forEach(function (entry) {\n          console.log(entry.title + \":\" + entry.link);\n        });\n      }\n    });\n  }\n\n  return (\n    <div className={styles.addArticle}>\n      <div class={styles.addTitle}>Add new source to reach this world</div>\n      <form\n        className={styles.addForm}\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (user) {\n            requestRSS(reqUrl);\n          }\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"input\"\n          className={styles.input}\n          value={reqUrl}\n          onChange={(e) => setReqUrl(e.currentTarget.value)}\n        />\n        <button type=\"submit\" className={styles.add}>\n          搜尋\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx",["213","214"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"./Folder\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n\n    flexGrow: 1,\n    maxWidth: 400,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function FolderTab() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [editFolder, setEditFolder] = useState(false);\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [articleFolders, setArticleFolders] = useState([]);\n  console.log(articleFolders);\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n    }\n  }\n\n  useEffect(() => {\n    function getArticleFolders() {\n      if (user) {\n        app\n          .getMemberArticleFolders(user.uid)\n          .then((articleFolders) => {\n            console.log(articleFolders);\n            setArticleFolders(articleFolders);\n            return articleFolders;\n          })\n          .then(async (articleFolders) => {\n            let tempFolderList = [];\n            for (let i = 0; i < articleFolders.length; i++) {\n              let tags = await app.getMemberFolderTags(articleFolders[i].id);\n              console.log(tags);\n              tempFolderList.push({ ...articleFolders[i], tags: tags });\n            }\n            console.log(tempFolderList);\n            return tempFolderList;\n          })\n          .then((newFolder) => {\n            console.log(newFolder);\n            setArticleFolders(newFolder);\n          });\n      }\n    }\n    getArticleFolders();\n  }, [user]);\n\n  function showArticleFolders(folders) {\n    console.log(folders);\n    let articleFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        console.log(folders[i].tags);\n        articleFolderList.push(\n          <Droppable droppableId={folders[i].id}>\n            {(provided) => (\n              <TreeItem\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                key={folders[i].id}\n                nodeId={folders[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <FolderOpenIcon\n                      style={{ fontSize: 20, color: \"#5B5B5B\" }}\n                    />\n                    <div className={styles.labelTitle}>{folders[i].name}</div>\n                  </div>\n                }\n                onClick={() => {\n                  console.log(folders[i].id);\n                  // dispatch(SWITCHARTICLE(folders[i].id));\n                }}\n              >\n                <Folder\n                  user={user}\n                  folderTags={folders[i].tags}\n                  key={folders[i].id}\n                />\n                {provided.placeholder}\n              </TreeItem>\n            )}\n          </Droppable>\n        );\n      }\n    }\n    return articleFolderList;\n  }\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <Link to={\"/board\"}>\n          <div className={styles.sectionTitle}>My Board</div>\n          <TreeView\n            className={classes.root}\n            defaultExpanded={[\"\"]}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            <TreeItem\n              nodeId=\"tagAll\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <div className={styles.labelTitle}>All</div>\n                </div>\n              }\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            ></TreeItem>\n            <TreeItem\n              nodeId=\"unTag\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <MarkunreadIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                  <div className={styles.labelTitle}>Untaged</div>\n                </div>\n              }\n            />\n            <DragDropContext onDragEnd={onDragEnd}>\n              {articleFolderList}\n            </DragDropContext>\n          </TreeView>\n          {editFolder\n            ? createPortal(\n                <div className={styles.popup}>\n                  <div\n                    className={styles.blur}\n                    onClick={() => {\n                      setEditFolder(false);\n                    }}\n                  ></div>\n                  <div className={styles.addFolder}>\n                    <div className={styles.addTitle}>Add New Folder</div>\n                    <form id=\"addForm\" action=\"\">\n                      <input\n                        className={styles.input}\n                        type=\"text\"\n                        placeholder=\"Folder Name\"\n                        value={addFolderInput}\n                        onChange={(e) => {\n                          setAddFolderInput(e.target.value);\n                        }}\n                      />\n                      <button\n                        type=\"submit\"\n                        className={styles.saveBtn}\n                        form=\"addForm\"\n                        onClick={() => {\n                          if (user) {\n                            addArticleFolder(addFolderInput, user.uid);\n                            setEditFolder(false);\n                          } else {\n                            alert(\"Please login to add folder!\");\n                          }\n                        }}\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditFolder(false);\n                        }}\n                        className={styles.cancelBtn}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n                </div>,\n                document.body\n              )\n            : \"\"}\n          <div\n            className={styles.subTitle}\n            onClick={() => {\n              setEditFolder(true);\n            }}\n          >\n            Add Folder\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n",["215","216"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx",["217","218","219","220","221"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./FolderTab.module.css\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"#4F4F4F\",\n  },\n});\nexport default function Folder(props) {\n  console.log(\"rerender la \");\n  const classes = useStyles();\n  const [tags, setTags] = useState([]);\n  const dispatch = useDispatch();\n  let folderTags = props.folderTags;\n  // let user = props.user;\n  // useEffect(() => {\n  //   function getMemberFolderTags() {\n  //     if (user) {\n  //       app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //         setTags(folderTags);\n  //       });\n  //     }\n  //   }\n  //   getMemberFolderTags();\n  // }, [user]);\n  console.log(\"======================================\");\n  console.log(folderTags);\n  function showTabTreeList(tags) {\n    let tabList = [];\n    if (tags) {\n      let count = 0;\n      for (let i in tags) {\n        tabList.push(\n          <Draggable draggableId={tags[i].id} index={count} key={tags[i].id}>\n            {(provided) => (\n              <TreeItem\n                key={tags[i].id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n                nodeId={tags[i].id}\n                label={\n                  <div className={styles.labelWrapper}>\n                    <BookmarkIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                    {tags[i].label ? (\n                      <div className={styles.labelTitle}>{tags[i].label}</div>\n                    ) : (\n                      <Skeleton\n                        className={classes.root}\n                        variant=\"rect\"\n                        width={100}\n                        height={12}\n                        animation=\"pulse\"\n                      />\n                    )}\n                  </div>\n                }\n                onClick={() => {\n                  console.log(tags[i].id);\n                  dispatch(SWITCHARTICLE(tags[i].id));\n                }}\n              />\n            )}\n          </Draggable>\n        );\n        count++;\n      }\n    }\n    return tabList;\n  }\n  const tabList = showTabTreeList(folderTags);\n  return <div>{tabList}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx",["222","223","224","225"],"import { useLocation, useHistory } from \"react-router-dom\";\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db, CheckFirebaseUserStatus } from \"../../firebase.js\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport styles from \"../../css/Article.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport ReactQuill from \"react-quill\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useSelector } from \"react-redux\";\nimport \"react-quill/dist/quill.snow.css\";\nexport default function Article() {\n  let [tags, setTags] = useState({});\n  let [article, setArticle] = useState({});\n  let [note, setNote] = useState(\"\");\n  const location = useLocation();\n  let search = location.search;\n  let params = new URLSearchParams(search);\n  let id = params.get(\"id\");\n  let user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const customStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      background: \"black\",\n      borderBottom: \"1px solid gray\",\n      color: \"white\",\n      padding: 10,\n    }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? null\n          : isSelected\n          ? data.color\n          : isFocused\n          ? \"#dcdcdc\"\n          : null,\n        color: isFocused ? \"#39382e\" : \"#dcdcdc\",\n\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n        \":active\": {\n          ...styles[\":active\"],\n          backgroundColor: !isDisabled && (isSelected ? data.color : \"green\"),\n        },\n      };\n    },\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"#121212\",\n      minWidth: \"300px\",\n    }),\n  };\n  useEffect(() => {\n    if (user) {\n      console.log(\"useeffect run\");\n\n      app.initArticleTags(id, user.uid).then((articleTagSelection) => {\n        console.log(articleTagSelection);\n        setTags(articleTagSelection);\n      });\n    }\n  }, [user]);\n  function handleChange(newValue, actionMeta) {\n    switch (actionMeta.action) {\n      case \"select-option\":\n        console.log(\"select option!\");\n        app.inputTag(id, user.uid, actionMeta.option.label);\n        setTags({ ...tags, values: newValue });\n        break;\n      case \"remove-value\":\n        app.deleteTagFromArticle(id, user.uid, actionMeta.removedValue.tagId);\n        setTags({ ...tags, values: newValue });\n        break;\n      default:\n        console.group(\"Value Changed\");\n        console.log(\"newvalueis \", newValue);\n\n        console.dir(`action: ${actionMeta.action}`);\n        console.dir(actionMeta.removedValue);\n        console.groupEnd();\n    }\n  }\n\n  function handleCreate(inputValue) {\n    console.group(\"Option created\");\n\n    console.log(tags);\n    app.inputTag(id, user.uid, inputValue);\n    setTags({\n      options: [...tags.options, { label: inputValue, value: inputValue }],\n      values: [...tags.values, { label: inputValue, value: inputValue }],\n    });\n    console.log(tags);\n    console.groupEnd();\n  }\n  useEffect(() => {\n    let getArticles = function () {\n      db.collection(\"Articles\")\n        .doc(id)\n        .onSnapshot(function (doc) {\n          if (doc.data() !== undefined) {\n            setArticle({\n              title: doc.data().title,\n              readerHtml: doc.data().readerHtml,\n            });\n          }\n        });\n    };\n    getArticles();\n    return () => {\n      getArticles();\n    };\n  }, []);\n\n  return (\n    <div className={styles.articleWrapper}>\n      <img\n        data-src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d072fabce4c74b95a416ced1d5743949~tplv-k3u1fbpfcp-zoom-1.image\"\n        alt=\"\"\n      />\n      <div className={styles.head}>\n        <Link to={\"/board\"}>\n          <ArrowBack style={{ color: \"#FFFCEC\" }} />\n        </Link>\n      </div>\n      <div className={styles.title}>{article.title}</div>\n      <div className={styles.tagWrapper}>\n        <CreatableSelect\n          isMulti\n          width=\"200px\"\n          menuColor=\"red\"\n          styles={customStyles}\n          onChange={handleChange}\n          onCreateOption={handleCreate}\n          options={tags.options}\n          defaultValue={tags.values}\n          value={tags.values}\n        />\n      </div>\n      <div className={styles.articleMain}>\n        <div\n          className={styles.articleBody}\n          dangerouslySetInnerHTML={{ __html: article.readerHtml }}\n        ></div>\n        <div className={styles.note}>\n          <div>Your Summary</div>\n          <ReactQuill\n            theme=\"snow\"\n            value={note}\n            onChange={(e) => {\n              setNote(e);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx",["226","227","228","229","230","231"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx",["232"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst RSS_Reducer = (state = { feed: {}, ChannelRSSId: \"all\" }, action) => {\n  switch (action.type) {\n    case \"GETRSSRESPONSE\":\n      return {\n        ...state,\n        feed: action.feed,\n        url: action.url,\n      };\n\n    case \"SWITCHRSS\":\n      return {\n        ...state,\n        ChannelRSSId: action.ChannelRSSId,\n      };\n    case \"INITUSERRSSLIST\":\n      return {\n        ...state,\n        UserRSSList: action.RSSList,\n      };\n    case \"SETUSERALLFEEDS\":\n      return {\n        ...state,\n        userAllFeeds: [...state.userAllFeeds, action.userAllFeeds],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default RSS_Reducer;\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx",["233"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx",[],["234","235"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx",["236","237"],"import React, { useState } from \"react\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nexport default function Signup() {\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        console.log(authResult.uid);\n        console.log(redirectUrl);\n        await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .set({\n            uid: authResult.uid,\n            email: authResult.email,\n            displaynamename: authResult.displayName,\n          })\n\n          .then(() => console.log(\"Add user to db successfully\"))\n          .then(history.push(\"board\"))\n          .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n          });\n      },\n    },\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  function firebaseSignUp(name, email, password) {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user.user);\n        db.collection(\"Member\").doc(user.user.uid).set({\n          displaynamename: name,\n          email: email,\n          password: password,\n          uid: user.user.uid,\n        });\n      })\n      .then(() => {\n        var user = auth.currentUser;\n        user\n          .updateProfile({\n            displayName: name,\n          })\n          .then(() => console.log(\"update user name successfully\"));\n      })\n      .then(history.push(\"/board\"))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.block}>\n        <h2 className={styles.title}>Sign Up</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignUp(name, email, password);\n          }}\n        >\n          <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={name}\n              onChange={(e) => {\n                setName(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign Up</button>\n        </form>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        <div className={styles.login}>\n          <span>Already have an account? </span>\n          <Link to={\"/Signin\"}>Sign in</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx",["238"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst article_Reducer = (\n  state = {\n    tagSelected: \"all\",\n    articleList: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    // case \"DeleteTask\":\n    //   let remaintasks = state.tasks.filter((task) => task.id != action.id);\n\n    //   return { tasks: remaintasks };\n    case \"INITARTICLE\":\n      return {\n        ...state,\n\n        articleList: action.articleList,\n      };\n    case \"SWITCHARTICLE\":\n      return {\n        ...state,\n\n        tagSelected: action.tagSelected,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default article_Reducer;\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx",["239","240","241","242","243"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx",["244","245","246","247","248"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { SWITCHRSS } from \"../../redux/actions\";\nexport default function RSSFolder(props) {\n  const [RSS, setRSS] = useState([]);\n  const dispatch = useDispatch();\n  let user = props.user;\n  //   useEffect(() => {\n  //     function getMemberFolderTags() {\n  //       if (user) {\n  //         app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //           setRSS(folderTags);\n  //         });\n  //       }\n  //     }\n  //     getMemberFolderTags();\n  //   }, [user]);\n\n  function showRSSItem(RSS) {\n    let RSSList = [];\n    if (RSS.length > 0) {\n      let count = 0;\n      for (let i in RSS) {\n        console.log(RSS[i]);\n        RSSList.push(\n          <Draggable draggableId={RSS[i].id} index={count} key={RSS[i].id}>\n            {(provided) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <TreeItem\n                  key={RSS[i].id}\n                  nodeId={RSS[i].id}\n                  label={\n                    <div className={styles.labelWrapper}>\n                      <BookmarkIcon style={{ fontSize: 20 }} />\n                      <div className={styles.labelTitle}>{RSS[i].title}</div>\n                    </div>\n                  }\n                  onClick={() => {\n                    console.log(RSS[i].id);\n                    dispatch(SWITCHRSS(RSS[i].id));\n                    //   dispatch(SWITCHARTICLE(tabs[i].id));\n                  }}\n                />\n              </div>\n            )}\n          </Draggable>\n        );\n        count++;\n      }\n    }\n    return RSSList;\n  }\n  const RSSList = showRSSItem(props.folderRSS);\n  return <div>{RSSList}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx",["249","250","251","252","253","254"],"/Users/kevinzhang/Documents/Taggy/client/app/src/index.js",["255"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(allReducers, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx",["256","257"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FindRSS from \"./FindRSS\";\nimport { db } from \"../../firebase.js\";\nimport RSSCard from \"./RSSCard\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport styles from \"./RSSBoard.module.css\";\nimport { app } from \"../../lib/lib.js\";\nimport RSSPage from \"./RSSPage\";\nimport sfLogo from \"../../img/sf_logo.png\";\nimport { style } from \"d3\";\nexport default function Board(props) {\n  const [showPage, setShowPage] = useState(false);\n  const [feedItem, setFeedItem] = useState(\"\");\n  const dispatch = useDispatch();\n  console.log(\"rerender\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  function renderFeedPage(feedItem) {\n    console.log(\"redner run again\");\n    console.log(feedItem);\n    return <RSSPage item={feedItem} />;\n  }\n\n  const ChannelRSSId = useSelector((state) => {\n    console.log(\"hihi\");\n    return state.RSSReducer.ChannelRSSId;\n  });\n  console.log(\"rerender channelid is \", ChannelRSSId);\n\n  const searchFeed = useSelector((state) => {\n    return state.RSSReducer.feed;\n  });\n  const searchFeedUrl = useSelector((state) => {\n    return state.RSSReducer.url;\n  });\n\n  function renderSearchFeed(feed) {\n    let feedList = [];\n    for (let i in feed.items) {\n      feedList.push(\n        <RSSCard\n          item={feed.items[i]}\n          onClick={(e) => {\n            console.log(\"hihi\");\n            setShowPage(true);\n            setFeedItem(feed.items[i]);\n          }}\n        />\n      );\n    }\n\n    return (\n      <div className={styles.board}>\n        <h1 className={styles.title}>{feed.title}</h1>\n        <div\n          className={styles.content}\n          dangerouslySetInnerHTML={{ __html: feed.description }}\n        ></div>\n        {feed.title ? (\n          <button\n            className={styles.subscribe_btn}\n            onClick={() => {\n              app.subscribeRSS(user.uid, feed.title, searchFeedUrl, feed);\n            }}\n          >\n            Follow\n          </button>\n        ) : (\n          \"\"\n        )}\n        {feedList}\n      </div>\n    );\n  }\n  //   useEffect(() => {\n\n  //     if (searchFeed) {\n  //       checkArticleUpdate(user.uid);\n  //     }\n  //   }, [user]);\n  const feedPage = renderFeedPage(feedItem);\n  const searchOutcome = renderSearchFeed(searchFeed);\n\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n  return (\n    <div className={styles.boardWrapper}>\n      <FindRSS className=\"headMemberIcon\" user={props.user} />\n      <div className={styles.title}># Explore</div>\n      <div className={styles.categoryTitle}>Tech</div>\n      <div className={styles.categoryWrapper}>\n        <div className={styles.categoryCard}>\n          <div className={styles.cardUpper}>\n            <div className={styles.cardImg}>\n              <img src={sfLogo} alt=\"\" />\n            </div>\n            <div className={styles.cardWording}>\n              <div className={styles.cardTitle}>Segment Fault - 前端</div>\n              <div className={styles.cardDescription}>前端新知</div>\n            </div>\n          </div>\n          <div className={styles.cardBtn}>Follow</div>\n        </div>\n        <div className={styles.categoryCard}>\n          <div className={styles.cardUpper}>\n            <div className={styles.cardImg}>\n              <img src={sfLogo} alt=\"\" />\n            </div>\n            <div className={styles.cardWording}>\n              <div className={styles.cardTitle}>掘金前端</div>\n              <div className={styles.cardDescription}>前端新知</div>\n            </div>\n          </div>\n          <div className={styles.cardBtn}>Follow</div>\n        </div>\n        <div className={styles.categoryCard}>\n          <div className={styles.cardUpper}>\n            <div className={styles.cardImg}>\n              <img src={sfLogo} alt=\"\" />\n            </div>\n            <div className={styles.cardWording}>\n              <div className={styles.cardTitle}>Segment Fault - 前端</div>\n              <div className={styles.cardDescription}>前端新知</div>\n            </div>\n          </div>\n          <div className={styles.cardBtn}>Follow</div>\n        </div>\n        <div className={styles.categoryCard}>\n          <div className={styles.cardUpper}>\n            <div className={styles.cardImg}>\n              <img src={sfLogo} alt=\"\" />\n            </div>\n            <div className={styles.cardWording}>\n              <div className={styles.cardTitle}>Segment Fault - 前端</div>\n              <div className={styles.cardDescription}>前端新知</div>\n            </div>\n          </div>\n          <div className={styles.cardBtn}>Follow</div>\n        </div>\n        <div className={styles.categoryCard}>\n          <div className={styles.cardUpper}>\n            <div className={styles.cardImg}>\n              <img src={sfLogo} alt=\"\" />\n            </div>\n            <div className={styles.cardWording}>\n              <div className={styles.cardTitle}>Segment Fault - 前端</div>\n              <div className={styles.cardDescription}>前端新知</div>\n            </div>\n          </div>\n          <div className={styles.cardBtn}>Follow</div>\n        </div>\n      </div>\n\n      {searchOutcome}\n      {showPage ? (\n        <div className={styles.popup}>\n          <button\n            onClick={() => {\n              setShowPage(false);\n            }}\n          >\n            Close Page\n          </button>\n          {feedPage}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/config.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js",["258","259"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx",["260","261","262","263","264"],"import * as d3 from \"d3\";\nimport { dataSet } from \"../../data.js\";\nimport { dataSet2 } from \"../../data2.js\";\nimport { useD3 } from \"../../hooks/useD3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { app } from \"../../lib/gragh_lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nimport styles from \"./Graph.module.css\";\nexport default function Graph() {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n\n  const [data, setData] = useState({});\n  function color() {\n    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n    return (d) => scale(d.group);\n  }\n  function drag(simulation) {\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let id;\n      const height = 1000;\n      const width = 1000;\n      if (data.nodes) {\n        const links = data.links.map((d) => Object.create(d));\n        const nodes = data.nodes.map((d) => Object.create(d));\n\n        const simulation = d3\n          .forceSimulation(nodes)\n          .force(\n            \"link\",\n            d3.forceLink(links).id((d) => d.id)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(-500).distanceMax([500]))\n          .force(\"center\", d3.forceCenter(width / 2 - 300, height / 2));\n\n        const link = svg\n          .append(\"g\")\n          .attr(\"stroke\", \"#999\")\n          .attr(\"stroke-opacity\", 0.6)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\n\n        const node = svg\n          .append(\"g\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"stroke-linejoin\", \"round\")\n          .selectAll(\"g\")\n          .data(nodes)\n          .join(\"g\")\n          .call(drag(simulation));\n        const circle = node\n          .append(\"circle\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"r\", 5)\n          .attr(\"fill\", \"#4F4F4F\");\n        const text = node\n          .append(\"text\")\n          .text((d) => d.id)\n          .clone(true)\n          .lower()\n          .attr(\"stroke-width\", 0.5)\n          .attr(\"stroke\", \"white\")\n          .attr(\"fill\", \"white\")\n          .attr(\"id\", (d) => d.tagId)\n          .on(\"click\", (a) => {\n            console.log(a);\n            console.log(a.target.id);\n            dispatch(SWITCHARTICLE(a.target.id));\n          });\n\n        node.append(\"title\").text((d) => d.id);\n\n        simulation.on(\"tick\", () => {\n          link\n            .attr(\"x1\", (d) => d.source.x)\n            .attr(\"y1\", (d) => d.source.y)\n            .attr(\"x2\", (d) => d.target.x)\n            .attr(\"y2\", (d) => d.target.y);\n\n          circle.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n          text.attr(\"x\", (d) => d.x + 10).attr(\"y\", (d) => d.y);\n        });\n      }\n\n      return svg.node();\n    },\n    [data]\n  );\n  const articleList = useSelector((state) => {\n    console.log(state);\n    return state.articleReducer.articleList;\n  });\n  function getGraphData(uid) {\n    return new Promise(async (resolve) => {\n      let memberTags = await app.getMemberTags(uid);\n\n      resolve(memberTags);\n    });\n  }\n  // {\n  //   id: \"1qeqw\",\n  //   value: \"ee\"\n  //   label: \"ee\"\n  // }\n  function createCombinationList(tags) {\n    let combList = [];\n    for (let i = 0; i < tags.length - 1; i++) {\n      for (let j = i + 1; j < tags.length; j++) {\n        combList.push([tags[i], tags[j]]);\n      }\n    }\n    return combList;\n  }\n  function countCombinationNumber(articleList, combList) {\n    console.error(articleList);\n    let links = [];\n    console.log(combList);\n    for (let i = 0; i < combList.length; i++) {\n      let combNumber = 0;\n      articleList.forEach((article) => {\n        if (article.tags) {\n          if (\n            article.tags.includes(combList[i][0].id) &&\n            article.tags.includes(combList[i][1].id)\n          ) {\n            combNumber += 1;\n          }\n        }\n      });\n      links.push({\n        source: combList[i][0].label,\n        target: combList[i][1].label,\n        value: combNumber,\n      });\n    }\n    return links;\n  }\n  function combInit(tags) {\n    let combList = createCombinationList(tags);\n    console.warn(articleList);\n    return countCombinationNumber(articleList, combList);\n  }\n\n  function initGraphData(uid) {\n    return new Promise((resolve) => {\n      getGraphData(uid)\n        .then((memberTags) => {\n          let links = combInit(memberTags);\n          let nodes = [];\n          memberTags.forEach((tag) => {\n            nodes.push({\n              id: tag.value,\n              tagId: tag.id,\n            });\n          });\n          console.log(links);\n          return [nodes, links];\n        })\n        .then(([nodes, links]) => {\n          resolve({\n            nodes: nodes,\n            links: links,\n          });\n        });\n    });\n  }\n  useEffect(() => {\n    if (user && articleList[0]) {\n      console.log(articleList);\n      // setDataRun(true);\n      console.log(user);\n      initGraphData(user.uid).then((data) => {\n        console.log(\"lets set dat=============================a\");\n        console.log(data);\n        setData(data);\n      });\n    }\n  }, [user, articleList]);\n  return (\n    <div className={styles.graphWrapper}>\n      <svg\n        ref={ref}\n        style={{\n          height: 1000,\n          width: \"100%\",\n          marginRight: \"20px\",\n          marginLeft: \"0px\",\n        }}\n      >\n        <g className=\"plot-area\" />\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js",["265"],"import { resolve } from \"path\";\nimport { app } from \"./lib.js\";\napp.getGraphData = function (uid) {\n  return new Promise(async (resolve) => {\n    let memberTags = await app.getMemberTags(uid);\n    console.log(\"2\");\n    resolve(memberTags);\n  });\n};\n\napp.initGraphData = function (uid) {\n  return new Promise((resolve) => {\n    app\n      .getGraphData(uid)\n      .then((memberTags) => {\n        console.log(memberTags);\n        let nodes = [];\n        memberTags.forEach((tag) => {\n          nodes.push({\n            id: tag.value,\n            tagId: tag.id,\n          });\n        });\n        return nodes;\n      })\n      .then((nodes) => {\n        resolve({\n          nodes: nodes,\n          links: [],\n        });\n      });\n  });\n};\n\nexport { app };\n",["266","267"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx",["268"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { localUrl, ec2Url } from \"../config.js\";\nimport \"../css/AddArticle.css\";\n\nexport default function AddArticle(props) {\n  const [reqUrl, setReqUrl] = useState(\"\");\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function postDataToServer(\n    url,\n    data = {\n      url: \"www.sylish.com\",\n      uid: \"12344\",\n    }\n  ) {\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n        response.json().then(function (data) {\n          console.log(data);\n        });\n      })\n      .catch(function (err) {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  }\n  return (\n    <div className=\"addArticle\">\n      <input\n        type=\"text\"\n        name=\"input\"\n        className=\"input\"\n        value={reqUrl}\n        onChange={(e) => setReqUrl(e.currentTarget.value)}\n      />\n      <button\n        type=\"submit\"\n        className=\"add\"\n        onClick={(e) => {\n          if (user) {\n            e.preventDefault();\n            postDataToServer(localUrl, {\n              url: reqUrl,\n              uid: user.uid,\n            });\n          }\n        }}\n      >\n        儲存文章\n      </button>\n\n      <br />\n      {/* <a href=\"http://localhost:2000/route/article/before\">Before</a>\n      <br />\n      <a href=\"http://localhost:2000/route/article/after\">after</a>\n      <br />\n      <a href=\"http://localhost:2000/route/article/MD\">Mark Down</a> */}\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signin.jsx",["269","270","271","272"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { uiConfig, auth } from \"../../firebase.js\";\nexport default function Signup() {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  function firebaseSignIn(email, password) {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(\"you click sign in and successfully\");\n        history.push(\"/board\");\n        // Signed in\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode);\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className=\"block\" className={styles.block}>\n        <h2 className={styles.title}>Sign In</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignIn(email, password);\n          }}\n        >\n          {/* <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input type=\"text\" name=\"username\" />\n          </div> */}\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign In</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n",["273","274"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/member_Reducer.jsx",["275"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupBoard.jsx",["276","277","278"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport CardWrapper from \"../CardWrapper.jsx\";\nimport dispatch from \"react-redux\";\nimport styles from \"./GroupBoard.module.css\";\nimport { INITARTICLE } from \"../../redux/actions\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddArticle from \"../AddArticle\";\nimport firebase from \"firebase/app\";\n\nexport default function Board(props) {\n  const dispatch = useDispatch();\n  const [addMember, setAddMember] = useState(false);\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  useEffect(() => {\n    function checkArticleUpdate(uid) {\n      db.collection(\"Articles\")\n        .orderBy(\"date\", \"desc\")\n        .where(\"uid\", \"==\", uid)\n        .onSnapshot(function (querySnapshot) {\n          let list = [];\n          querySnapshot.forEach(function (doc) {\n            list.push({\n              title: doc.data().title,\n              content: doc.data().markDown.slice(0, 100),\n              id: doc.data().id,\n              tags: doc.data().tags,\n              readerHtml: doc.data().readerHtml,\n            });\n          });\n          dispatch(INITARTICLE(list));\n        });\n    }\n    if (user) {\n      checkArticleUpdate(user.uid);\n    }\n  }, [user]);\n\n  return (\n    <div\n      className={styles.boardWrapper}\n      onClick={() => {\n        setAddMember(false);\n      }}\n    >\n      <AddArticle className=\"headMemberIcon\" user={user} />\n      <div className={styles.titleWrapper}>\n        <div className={styles.title}>前端群組</div>\n\n        <div className={styles.actionList}>\n          <EditIcon />\n          <GroupAddIcon\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddMember(true);\n              console.log(addMember);\n            }}\n          />\n          {addMember ? (\n            <div\n              className={styles.addMemberWrapper}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              <div>Add New Member</div>\n              <form action=\"\">\n                <input type=\"text\" />\n              </form>\n              <hr />\n              <div className={styles.memberWrapper}>\n                <div>kevin@gmail.com</div>\n                <button>Add</button>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <CardWrapper />\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph.jsx",["279","280","281","282","283","284","285","286","287"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderTab.jsx",["288","289","290","291","292","293","294"],"import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { SWITCHARTICLE, GROUPINIT } from \"../../redux/actions\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Folder from \"../SideTab/Folder\";\nimport GroupFolerSub from \"./GroupFolderSub\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n\n    flexGrow: 1,\n    maxWidth: 400,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function GroupFolderTab() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [editFolder, setEditFolder] = useState(false);\n  const [addGroup, setAddGroup] = useState(false);\n  const [addGroupInput, setAddGroupInput] = useState(\"\");\n  const [addFolderInput, setAddFolderInput] = useState(\"\");\n  const [articleFolders, setArticleFolders] = useState([]);\n  console.log(articleFolders);\n\n  const groups = useSelector((state) => {\n    console.log(state.memberReducer.groups);\n    return state.memberReducer.groups;\n  });\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      console.log(\"nothing should happended\");\n      return;\n    }\n    if (destination.droppableId === source.droppableId) {\n      console.log(\"move inside same folder\");\n      let newArticleFolders = [...articleFolders];\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          console.log(\"hihi\");\n          let newTags = [...folder.tags];\n          let moveItem = { ...newTags[source.index] };\n          console.log(moveItem);\n          newTags.splice(source.index, 1);\n          newTags.splice(destination.index, 0, moveItem);\n          console.log(newTags);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n      console.log(destination.index, source.index);\n      console.log(source.droppableId);\n      console.log(destination.droppableId);\n    }\n    if (destination.droppableId !== source.droppableId) {\n      console.log(\"move to another folder\");\n      let newArticleFolders = [...articleFolders];\n      let moveItem;\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === source.droppableId) {\n          let newTags = [...folder.tags];\n          moveItem = { ...newTags[source.index] };\n          newTags.splice(source.index, 1);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(source.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      newArticleFolders.forEach((folder) => {\n        if (folder.id === destination.droppableId) {\n          let newTags = [...folder.tags];\n\n          newTags.splice(destination.index, 0, moveItem);\n          folder.tags = newTags;\n          let firestoreTagArr = [];\n          newTags.forEach((tag) => {\n            firestoreTagArr.push(tag.id);\n          });\n          console.log(firestoreTagArr);\n          db.collection(\"articleFolders\").doc(destination.droppableId).update({\n            tags: firestoreTagArr,\n          });\n        }\n      });\n      setArticleFolders(newArticleFolders);\n    }\n  }\n\n  useEffect(() => {\n    function getMemberGroups(user) {\n      return db\n        .collection(\"Member\")\n        .doc(user.uid)\n        .get()\n        .then((doc) => {\n          console.log(doc.data());\n          return doc.data().board;\n        });\n    }\n    function getGroupDbInfo(boardId) {\n      console.log(boardId);\n      return db\n        .collection(\"GroupBoard\")\n        .doc(boardId)\n        .get()\n        .then((doc) => {\n          return {\n            id: doc.data().id,\n            name: doc.data().name,\n            articleFolders: doc.data().articleFolders,\n          };\n        });\n    }\n    async function memberGroupInit(user) {\n      let groupIds = await getMemberGroups(user);\n      let groups = {};\n      console.log(groupIds);\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        groups[groupIds[i]] = info;\n      }\n      console.log(groups);\n      //=========!!!!!!!!!!!!!!!!!!!===========\n      // dispatch(GROUPINIT(groups));\n\n      for (let i in groupIds) {\n        let info = await getGroupDbInfo(groupIds[i]);\n        //info ={  id: \"group1\",\n        //name: front end,\n        //articleFolders: [id1, id2, id3],}\n        let folders = await app.getGroupArticleFolders(groupIds[i]);\n        //folders=[{id, name, tags}, {id, name, tags}]\n        console.log(folders);\n        let folderWithTagInfo = folders.map(async (folder) => {\n          let tags = await app.getMemberFolderTags(folder.id);\n          folder.tags = tags;\n          return folder;\n        });\n\n        let group = await Promise.all(folderWithTagInfo).then((folder) => {\n          info.articleFolders = folder;\n          return info;\n        });\n        console.log(group);\n        let groupId = groupIds[i];\n        groups[groupId] = group;\n        console.log(groups);\n      }\n      console.log(groups);\n      dispatch(GROUPINIT(groups));\n    }\n    // function getGroupFolders() {\n    //   if (user) {\n    //     app\n    //       .getMemberArticleFolders(user.uid)\n    //       .then((articleFolders) => {\n    //         console.log(articleFolders);\n    //         setArticleFolders(articleFolders);\n    //         return articleFolders;\n    //       })\n    //       .then(async (articleFolders) => {\n    //         let tempFolderList = [];\n    //         for (let i = 0; i < articleFolders.length; i++) {\n    //           let tags = await app.getMemberFolderTags(articleFolders[i].id);\n    //           console.log(tags);\n    //           tempFolderList.push({ ...articleFolders[i], tags: tags });\n    //         }\n    //         console.log(tempFolderList);\n    //         return tempFolderList;\n    //       })\n    //       .then((newFolder) => {\n    //         console.log(newFolder);\n    //         setArticleFolders(newFolder);\n    //       });\n    //   }\n    // }\n    if (user) {\n      memberGroupInit(user).then((groups) => {});\n    }\n  }, [user]);\n\n  function addArticleFolder(name, uid) {\n    db.collection(\"articleFolders\")\n      .add({\n        name: name,\n        uid: uid,\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            articleFolders: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n      });\n  }\n  function addGroupBoard(name, uid) {\n    db.collection(\"GroupBoard\")\n      .add({\n        name: name,\n        member: [uid],\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id, articleFolders: [\"un\" + docRef.id] });\n        return docRef.id;\n      })\n      .then((id) => {\n        db.collection(\"Member\")\n          .doc(uid)\n          .update({\n            board: firebase.firestore.FieldValue.arrayUnion(id),\n          });\n        return id;\n      })\n      .then((id) => {\n        db.collection(\"articleFolders\")\n          .doc(\"un\" + id)\n          .set({\n            id: \"un\" + id,\n            name: \"Uncategorized\",\n          });\n      });\n  }\n  function renderGroupTabs(groups) {\n    let groupTabs = [];\n    console.log(groups);\n    for (const key in groups) {\n      console.log(groups[key]);\n      groupTabs.push(\n        <TreeView\n          className={classes.root}\n          defaultExpanded={[\"\"]}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n        >\n          <TreeItem\n            nodeId={groups[key].name}\n            label={\n              <div className={styles.labelWrapper}>\n                <PeopleAltIcon />\n                <div className={styles.labelTitle}>{groups[key].name}</div>\n              </div>\n            }\n            onClick={() => {\n              console.log(\"all\");\n              dispatch(SWITCHARTICLE(\"all\"));\n            }}\n          >\n            <TreeItem\n              nodeId={\"tagAll_\" + groups[key].name}\n              label={\n                <div className={styles.labelWrapper}>\n                  <div className={styles.labelTitle}>All</div>\n                </div>\n              }\n              onClick={() => {\n                console.log(\"all\");\n                dispatch(SWITCHARTICLE(\"all\"));\n              }}\n            ></TreeItem>\n            <TreeItem\n              nodeId=\"unTag2\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <MarkunreadIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                  <div className={styles.labelTitle}>Untaged</div>\n                </div>\n              }\n            />\n            <DragDropContext onDragEnd={onDragEnd}>\n              <GroupFolerSub folders={groups[key].articleFolders} />\n            </DragDropContext>\n            <div\n              className={styles.subTitle}\n              onClick={() => {\n                setEditFolder(true);\n              }}\n            >\n              Add Folder\n            </div>\n          </TreeItem>\n        </TreeView>\n      );\n    }\n    return groupTabs;\n  }\n  const groupTabs = renderGroupTabs(groups);\n  // const articleFolderList = showArticleFolders(articleFolders);\n  // const allTabList = showTabTreeList(tabs);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <div className={styles.sectionTitle}>Group Boards</div>\n        <div\n          className={styles.subTitle}\n          onClick={() => {\n            setAddGroup(true);\n          }}\n        >\n          Create New Group\n        </div>\n        {groupTabs}\n\n        {editFolder\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setEditFolder(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Add New Folder</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Folder Name\"\n                      value={addFolderInput}\n                      onChange={(e) => {\n                        setAddFolderInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addArticleFolder(addFolderInput, user.uid);\n                          setEditFolder(false);\n                        } else {\n                          alert(\"Please login to add folder!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setEditFolder(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n        {addGroup\n          ? createPortal(\n              <div className={styles.popup}>\n                <div\n                  className={styles.blur}\n                  onClick={() => {\n                    setAddGroup(false);\n                  }}\n                ></div>\n                <div className={styles.addFolder}>\n                  <div className={styles.addTitle}>Create New Group Board</div>\n                  <form id=\"addForm\" action=\"\">\n                    <input\n                      className={styles.input}\n                      type=\"text\"\n                      placeholder=\"Folder Name\"\n                      value={addGroupInput}\n                      onChange={(e) => {\n                        setAddGroupInput(e.target.value);\n                      }}\n                    />\n                    <button\n                      type=\"submit\"\n                      className={styles.saveBtn}\n                      form=\"addForm\"\n                      onClick={() => {\n                        if (user) {\n                          addGroupBoard(addGroupInput, user.uid);\n                          setAddGroup(false);\n                        } else {\n                          alert(\"Please login to add group!\");\n                        }\n                      }}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={() => {\n                        setAddGroup(false);\n                      }}\n                      className={styles.cancelBtn}\n                    >\n                      Cancel\n                    </button>\n                  </form>\n                </div>\n              </div>,\n              document.body\n            )\n          : \"\"}\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Group/GroupFolderSub.jsx",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],{"ruleId":"312","severity":1,"message":"313","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":17},{"ruleId":"312","severity":1,"message":"316","line":5,"column":23,"nodeType":"314","messageId":"315","endLine":5,"endColumn":34},{"ruleId":"312","severity":1,"message":"317","line":7,"column":27,"nodeType":"314","messageId":"315","endLine":7,"endColumn":33},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"312","severity":1,"message":"322","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":19},{"ruleId":"312","severity":1,"message":"323","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":14},{"ruleId":"312","severity":1,"message":"324","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"325","line":14,"column":8,"nodeType":"314","messageId":"315","endLine":14,"endColumn":17},{"ruleId":"326","severity":1,"message":"327","line":11,"column":6,"nodeType":"314","endLine":11,"endColumn":18},{"ruleId":"326","severity":1,"message":"328","line":11,"column":6,"nodeType":"314","endLine":11,"endColumn":18,"suggestions":"329"},{"ruleId":"318","replacedBy":"330"},{"ruleId":"320","replacedBy":"331"},{"ruleId":"312","severity":1,"message":"332","line":1,"column":28,"nodeType":"314","messageId":"315","endLine":1,"endColumn":36},{"ruleId":"312","severity":1,"message":"333","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":16},{"ruleId":"326","severity":1,"message":"334","line":37,"column":6,"nodeType":"335","endLine":37,"endColumn":12,"suggestions":"336"},{"ruleId":"318","replacedBy":"337"},{"ruleId":"320","replacedBy":"338"},{"ruleId":"312","severity":1,"message":"339","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"340","line":3,"column":17,"nodeType":"314","messageId":"315","endLine":3,"endColumn":23},{"ruleId":"312","severity":1,"message":"341","line":7,"column":8,"nodeType":"314","messageId":"315","endLine":7,"endColumn":13},{"ruleId":"312","severity":1,"message":"342","line":12,"column":8,"nodeType":"314","messageId":"315","endLine":12,"endColumn":20},{"ruleId":"312","severity":1,"message":"343","line":44,"column":34,"nodeType":"314","messageId":"315","endLine":44,"endColumn":45},{"ruleId":"318","replacedBy":"344"},{"ruleId":"320","replacedBy":"345"},{"ruleId":"312","severity":1,"message":"322","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":19},{"ruleId":"312","severity":1,"message":"346","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":13},{"ruleId":"312","severity":1,"message":"347","line":11,"column":10,"nodeType":"314","messageId":"315","endLine":11,"endColumn":14},{"ruleId":"312","severity":1,"message":"348","line":22,"column":10,"nodeType":"314","messageId":"315","endLine":22,"endColumn":14},{"ruleId":"312","severity":1,"message":"349","line":22,"column":16,"nodeType":"314","messageId":"315","endLine":22,"endColumn":23},{"ruleId":"312","severity":1,"message":"350","line":1,"column":23,"nodeType":"314","messageId":"315","endLine":1,"endColumn":33},{"ruleId":"312","severity":1,"message":"351","line":5,"column":14,"nodeType":"314","messageId":"315","endLine":5,"endColumn":37},{"ruleId":"326","severity":1,"message":"352","line":67,"column":6,"nodeType":"335","endLine":67,"endColumn":12,"suggestions":"353"},{"ruleId":"326","severity":1,"message":"352","line":118,"column":6,"nodeType":"335","endLine":118,"endColumn":8,"suggestions":"354"},{"ruleId":"312","severity":1,"message":"355","line":6,"column":10,"nodeType":"314","messageId":"315","endLine":6,"endColumn":21},{"ruleId":"312","severity":1,"message":"356","line":18,"column":9,"nodeType":"314","messageId":"315","endLine":18,"endColumn":26},{"ruleId":"312","severity":1,"message":"357","line":19,"column":9,"nodeType":"314","messageId":"315","endLine":19,"endColumn":17},{"ruleId":"312","severity":1,"message":"358","line":102,"column":9,"nodeType":"314","messageId":"315","endLine":102,"endColumn":13},{"ruleId":"326","severity":1,"message":"359","line":147,"column":6,"nodeType":"335","endLine":147,"endColumn":32,"suggestions":"360"},{"ruleId":"326","severity":1,"message":"361","line":150,"column":6,"nodeType":"335","endLine":150,"endColumn":20,"suggestions":"362"},{"ruleId":"312","severity":1,"message":"363","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":16},{"ruleId":"312","severity":1,"message":"364","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":14},{"ruleId":"318","replacedBy":"365"},{"ruleId":"320","replacedBy":"366"},{"ruleId":"312","severity":1,"message":"367","line":28,"column":17,"nodeType":"314","messageId":"315","endLine":28,"endColumn":26},{"ruleId":"312","severity":1,"message":"367","line":67,"column":13,"nodeType":"314","messageId":"315","endLine":67,"endColumn":22},{"ruleId":"312","severity":1,"message":"363","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":16},{"ruleId":"312","severity":1,"message":"368","line":11,"column":8,"nodeType":"314","messageId":"315","endLine":11,"endColumn":22},{"ruleId":"312","severity":1,"message":"342","line":12,"column":8,"nodeType":"314","messageId":"315","endLine":12,"endColumn":20},{"ruleId":"312","severity":1,"message":"369","line":46,"column":12,"nodeType":"314","messageId":"315","endLine":46,"endColumn":23},{"ruleId":"326","severity":1,"message":"370","line":100,"column":6,"nodeType":"335","endLine":100,"endColumn":12,"suggestions":"371"},{"ruleId":"312","severity":1,"message":"343","line":156,"column":34,"nodeType":"314","messageId":"315","endLine":156,"endColumn":45},{"ruleId":"312","severity":1,"message":"322","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":19},{"ruleId":"312","severity":1,"message":"346","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":13},{"ruleId":"312","severity":1,"message":"372","line":11,"column":10,"nodeType":"314","messageId":"315","endLine":11,"endColumn":13},{"ruleId":"312","severity":1,"message":"373","line":11,"column":15,"nodeType":"314","messageId":"315","endLine":11,"endColumn":21},{"ruleId":"312","severity":1,"message":"358","line":13,"column":7,"nodeType":"314","messageId":"315","endLine":13,"endColumn":11},{"ruleId":"312","severity":1,"message":"350","line":1,"column":23,"nodeType":"314","messageId":"315","endLine":1,"endColumn":33},{"ruleId":"312","severity":1,"message":"340","line":2,"column":20,"nodeType":"314","messageId":"315","endLine":2,"endColumn":26},{"ruleId":"312","severity":1,"message":"364","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":14},{"ruleId":"312","severity":1,"message":"374","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":12},{"ruleId":"312","severity":1,"message":"346","line":9,"column":10,"nodeType":"314","messageId":"315","endLine":9,"endColumn":13},{"ruleId":"312","severity":1,"message":"375","line":19,"column":7,"nodeType":"314","messageId":"315","endLine":19,"endColumn":13},{"ruleId":"312","severity":1,"message":"376","line":6,"column":23,"nodeType":"314","messageId":"315","endLine":6,"endColumn":38},{"ruleId":"312","severity":1,"message":"377","line":11,"column":10,"nodeType":"314","messageId":"315","endLine":11,"endColumn":15},{"ruleId":"326","severity":1,"message":"334","line":107,"column":6,"nodeType":"335","endLine":107,"endColumn":12,"suggestions":"378"},{"ruleId":"312","severity":1,"message":"379","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":17},{"ruleId":"312","severity":1,"message":"380","line":3,"column":14,"nodeType":"314","messageId":"315","endLine":3,"endColumn":24},{"ruleId":"312","severity":1,"message":"381","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":17},{"ruleId":"312","severity":1,"message":"382","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"383","line":19,"column":12,"nodeType":"314","messageId":"315","endLine":19,"endColumn":17},{"ruleId":"312","severity":1,"message":"384","line":50,"column":11,"nodeType":"314","messageId":"315","endLine":50,"endColumn":13},{"ruleId":"326","severity":1,"message":"385","line":210,"column":6,"nodeType":"335","endLine":210,"endColumn":25,"suggestions":"386"},{"ruleId":"312","severity":1,"message":"379","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":17},{"ruleId":"318","replacedBy":"387"},{"ruleId":"320","replacedBy":"388"},{"ruleId":"312","severity":1,"message":"340","line":3,"column":20,"nodeType":"314","messageId":"315","endLine":3,"endColumn":26},{"ruleId":"312","severity":1,"message":"364","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"389","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":26},{"ruleId":"312","severity":1,"message":"390","line":7,"column":10,"nodeType":"314","messageId":"315","endLine":7,"endColumn":18},{"ruleId":"391","severity":1,"message":"392","line":29,"column":30,"nodeType":"393","endLine":29,"endColumn":54},{"ruleId":"318","replacedBy":"394"},{"ruleId":"320","replacedBy":"395"},{"ruleId":"312","severity":1,"message":"363","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":16},{"ruleId":"312","severity":1,"message":"333","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":16},{"ruleId":"312","severity":1,"message":"396","line":11,"column":8,"nodeType":"314","messageId":"315","endLine":11,"endColumn":16},{"ruleId":"326","severity":1,"message":"334","line":41,"column":6,"nodeType":"335","endLine":41,"endColumn":12,"suggestions":"397"},{"ruleId":"312","severity":1,"message":"381","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":17},{"ruleId":"312","severity":1,"message":"382","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"398","line":9,"column":10,"nodeType":"314","messageId":"315","endLine":9,"endColumn":23},{"ruleId":"312","severity":1,"message":"357","line":12,"column":9,"nodeType":"314","messageId":"315","endLine":12,"endColumn":17},{"ruleId":"312","severity":1,"message":"383","line":19,"column":12,"nodeType":"314","messageId":"315","endLine":19,"endColumn":17},{"ruleId":"312","severity":1,"message":"384","line":50,"column":11,"nodeType":"314","messageId":"315","endLine":50,"endColumn":13},{"ruleId":"312","severity":1,"message":"399","line":51,"column":13,"nodeType":"314","messageId":"315","endLine":51,"endColumn":19},{"ruleId":"312","severity":1,"message":"400","line":52,"column":13,"nodeType":"314","messageId":"315","endLine":52,"endColumn":18},{"ruleId":"326","severity":1,"message":"385","line":209,"column":6,"nodeType":"335","endLine":209,"endColumn":25,"suggestions":"401"},{"ruleId":"312","severity":1,"message":"364","line":11,"column":10,"nodeType":"314","messageId":"315","endLine":11,"endColumn":14},{"ruleId":"312","severity":1,"message":"342","line":13,"column":8,"nodeType":"314","messageId":"315","endLine":13,"endColumn":20},{"ruleId":"312","severity":1,"message":"402","line":14,"column":8,"nodeType":"314","messageId":"315","endLine":14,"endColumn":22},{"ruleId":"312","severity":1,"message":"403","line":20,"column":27,"nodeType":"314","messageId":"315","endLine":20,"endColumn":36},{"ruleId":"312","severity":1,"message":"404","line":21,"column":8,"nodeType":"314","messageId":"315","endLine":21,"endColumn":14},{"ruleId":"312","severity":1,"message":"343","line":51,"column":34,"nodeType":"314","messageId":"315","endLine":51,"endColumn":45},{"ruleId":"326","severity":1,"message":"334","line":224,"column":6,"nodeType":"335","endLine":224,"endColumn":12,"suggestions":"405"},{"ruleId":"312","severity":1,"message":"322","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":19},{"ruleId":"312","severity":1,"message":"332","line":1,"column":21,"nodeType":"314","messageId":"315","endLine":1,"endColumn":29},{"ruleId":"312","severity":1,"message":"406","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":22},{"ruleId":"312","severity":1,"message":"407","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":20},{"ruleId":"312","severity":1,"message":"408","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":18},{"ruleId":"312","severity":1,"message":"409","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":22},{"ruleId":"312","severity":1,"message":"410","line":8,"column":8,"nodeType":"314","messageId":"315","endLine":8,"endColumn":24},{"ruleId":"312","severity":1,"message":"411","line":9,"column":8,"nodeType":"314","messageId":"315","endLine":9,"endColumn":21},{"ruleId":"312","severity":1,"message":"364","line":11,"column":10,"nodeType":"314","messageId":"315","endLine":11,"endColumn":14},{"ruleId":"312","severity":1,"message":"368","line":12,"column":8,"nodeType":"314","messageId":"315","endLine":12,"endColumn":22},{"ruleId":"312","severity":1,"message":"342","line":13,"column":8,"nodeType":"314","messageId":"315","endLine":13,"endColumn":20},{"ruleId":"312","severity":1,"message":"346","line":15,"column":10,"nodeType":"314","messageId":"315","endLine":15,"endColumn":13},{"ruleId":"312","severity":1,"message":"398","line":17,"column":10,"nodeType":"314","messageId":"315","endLine":17,"endColumn":23},{"ruleId":"312","severity":1,"message":"374","line":18,"column":10,"nodeType":"314","messageId":"315","endLine":18,"endColumn":12},{"ruleId":"312","severity":1,"message":"396","line":19,"column":8,"nodeType":"314","messageId":"315","endLine":19,"endColumn":16},{"ruleId":"312","severity":1,"message":"412","line":20,"column":10,"nodeType":"314","messageId":"315","endLine":20,"endColumn":25},{"ruleId":"312","severity":1,"message":"357","line":24,"column":9,"nodeType":"314","messageId":"315","endLine":24,"endColumn":17},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Router' is defined but never used.","no-native-reassign",["413"],"no-negated-in-lhs",["414"],"'useEffect' is defined but never used.","'auth' is defined but never used.","'Header' is defined but never used.","'RSSHeader' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["415"],["413"],["414"],"'useState' is defined but never used.","'dispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["416"],["413"],["414"],"'AddArticle' is defined but never used.","'ec2Url' is defined but never used.","'Axios' is defined but never used.","'BookmarkIcon' is defined but never used.","'draggableId' is assigned a value but never used.",["413"],["414"],"'app' is defined but never used.","'blue' is defined but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'useHistory' is defined but never used.","'CheckFirebaseUserStatus' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["417"],["418"],"'INITARTICLE' is defined but never used.","'lastVisibleNumber' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'batchFetchAllFeeds'. Either include it or remove the dependency array.",["419"],"React Hook useEffect has a missing dependency: 'fetchChannelFeed'. Either include it or remove the dependency array.",["420"],"'nanoid' is defined but never used.","'Link' is defined but never used.",["413"],["414"],"'errorCode' is assigned a value but never used.","'MarkunreadIcon' is defined but never used.","'addNewGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserRSSList'. Either include it or remove the dependency array.",["421"],"'RSS' is assigned a value but never used.","'setRSS' is assigned a value but never used.","'db' is defined but never used.","'params' is assigned a value but never used.","'applyMiddleware' is defined but never used.","'style' is defined but never used.",["422"],"'resolve' is defined but never used.","'FieldValue' is defined but never used.","'dataSet' is defined but never used.","'dataSet2' is defined but never used.","'color' is defined but never used.","'id' is defined but never used.","React Hook useEffect has a missing dependency: 'initGraphData'. Either include it or remove the dependency array.",["423"],["413"],["414"],"'StyledFirebaseAuth' is defined but never used.","'uiConfig' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["413"],["414"],"'firebase' is defined but never used.",["424"],"'SWITCHARTICLE' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.",["425"],"'FolderOpenIcon' is defined but never used.","'Droppable' is defined but never used.","'Folder' is defined but never used.",["426"],"'createPortal' is defined but never used.","'makeStyles' is defined but never used.","'TreeView' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'PeopleAltIcon' is defined but never used.","'DragDropContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"429","fix":"441"},{"desc":"442","fix":"443"},{"desc":"429","fix":"444"},{"desc":"442","fix":"445"},{"desc":"429","fix":"446"},"Update the dependencies array to be: [renderChartFn]",{"range":"447","text":"448"},"Update the dependencies array to be: [dispatch, user]",{"range":"449","text":"450"},"Update the dependencies array to be: [id, user]",{"range":"451","text":"452"},"Update the dependencies array to be: [id]",{"range":"453","text":"454"},"Update the dependencies array to be: [userRSSList, lastVisible, batchFetchAllFeeds]",{"range":"455","text":"456"},"Update the dependencies array to be: [ChannelRSSId, fetchChannelFeed]",{"range":"457","text":"458"},"Update the dependencies array to be: [getUserRSSList, user]",{"range":"459","text":"460"},{"range":"461","text":"450"},"Update the dependencies array to be: [user, articleList, initGraphData]",{"range":"462","text":"463"},{"range":"464","text":"450"},{"range":"465","text":"463"},{"range":"466","text":"450"},[266,278],"[renderChartFn]",[1179,1185],"[dispatch, user]",[1998,2004],"[id, user]",[3469,3471],"[id]",[4217,4243],"[userRSSList, lastVisible, batchFetchAllFeeds]",[4295,4309],"[ChannelRSSId, fetchChannelFeed]",[3017,3023],"[getUserRSSList, user]",[2952,2958],[5766,5785],"[user, articleList, initGraphData]",[1386,1392],[5724,5743],[7551,7557]]