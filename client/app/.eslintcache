[{"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx":"1","/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx":"2","/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js":"3","/Users/kevinzhang/Documents/Taggy/client/app/src/data.js":"4","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx":"5","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/MD.jsx":"6","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx":"7","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx":"8","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx":"9","/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js":"10","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx":"11","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx":"12","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx":"13","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx":"14","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js":"15","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js":"16","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx":"17","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx":"18","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx":"19","/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx":"20","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx":"21","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx":"22","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx":"23","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx":"24","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx":"25","/Users/kevinzhang/Documents/Taggy/client/app/src/index.js":"26","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx":"27","/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx":"28","/Users/kevinzhang/Documents/Taggy/client/app/src/config.js":"29","/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js":"30","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js":"31","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx":"32","/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js":"33","/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js":"34","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx":"35"},{"size":732,"mtime":1606899622921,"results":"36","hashOfConfig":"37"},{"size":1966,"mtime":1607415200900,"results":"38","hashOfConfig":"37"},{"size":298,"mtime":1606890120744,"results":"39","hashOfConfig":"37"},{"size":1041,"mtime":1607331654707,"results":"40","hashOfConfig":"37"},{"size":1260,"mtime":1607479255211,"results":"41","hashOfConfig":"37"},{"size":1162,"mtime":1606789151511,"results":"42","hashOfConfig":"37"},{"size":1096,"mtime":1607331654660,"results":"43","hashOfConfig":"37"},{"size":208,"mtime":1607182564849,"results":"44","hashOfConfig":"37"},{"size":1844,"mtime":1607331654642,"results":"45","hashOfConfig":"37"},{"size":1665,"mtime":1607331654716,"results":"46","hashOfConfig":"37"},{"size":5517,"mtime":1607335544973,"results":"47","hashOfConfig":"37"},{"size":1458,"mtime":1607308424428,"results":"48","hashOfConfig":"37"},{"size":3576,"mtime":1607484990150,"results":"49","hashOfConfig":"37"},{"size":6244,"mtime":1607423297990,"results":"50","hashOfConfig":"37"},{"size":963,"mtime":1607347055000,"results":"51","hashOfConfig":"37"},{"size":353,"mtime":1606981626000,"results":"52","hashOfConfig":"37"},{"size":689,"mtime":1607408024999,"results":"53","hashOfConfig":"37"},{"size":852,"mtime":1607422807319,"results":"54","hashOfConfig":"37"},{"size":1005,"mtime":1607331654610,"results":"55","hashOfConfig":"37"},{"size":1294,"mtime":1607331654613,"results":"56","hashOfConfig":"37"},{"size":4008,"mtime":1607331654637,"results":"57","hashOfConfig":"37"},{"size":611,"mtime":1607393736001,"results":"58","hashOfConfig":"37"},{"size":4108,"mtime":1607407905686,"results":"59","hashOfConfig":"37"},{"size":1543,"mtime":1607400090925,"results":"60","hashOfConfig":"37"},{"size":1812,"mtime":1607331654667,"results":"61","hashOfConfig":"37"},{"size":825,"mtime":1607415224800,"results":"62","hashOfConfig":"37"},{"size":3323,"mtime":1607423991997,"results":"63","hashOfConfig":"37"},{"size":1642,"mtime":1607331654684,"results":"64","hashOfConfig":"37"},{"size":142,"mtime":1606550687379,"results":"65","hashOfConfig":"37"},{"size":362,"mtime":1606271805707,"results":"66","hashOfConfig":"37"},{"size":16195,"mtime":1607392234658,"results":"67","hashOfConfig":"37"},{"size":3972,"mtime":1607324563402,"results":"68","hashOfConfig":"37"},{"size":1340,"mtime":1607331654713,"results":"69","hashOfConfig":"37"},{"size":751,"mtime":1607331654733,"results":"70","hashOfConfig":"37"},{"size":1873,"mtime":1607331654597,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"1hszq7i",{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"79"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevinzhang/Documents/Taggy/client/app/src/component/MyRouter.jsx",["163","164","165"],"import { Divider } from \"material-ui\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { auth } from \"../firebase.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SETMEMBER } from \"../redux/actions\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nexport default function MyRouter() {\n  let dispatch = useDispatch();\n\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        // setUser(user);\n        dispatch(SETMEMBER(user.uid, user.displayName, user.email));\n      } else {\n        history.push(\"/signup\");\n      }\n    });\n  }, [dispatch, history]);\n\n  return <div></div>;\n}\n",["166","167"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/App.jsx",["168","169","170","171"],"import { useEffect } from \"react\";\nimport { auth } from \"./../firebase.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Article from \"./Article/Aritcle\";\nimport Header from \"./Header/Header\";\nimport Signup from \"./Member/Signup\";\nimport Signin from \"./Member/Signin\";\nimport Board from \"./Board\";\nimport MyRouter from \"./MyRouter\";\nimport FolderTab from \"./SideTab/FolderTab\";\nimport Graph from \"./Graph/Graph1\";\nimport RSSHeader from \"./RSS/RSSHeader\";\nimport RSSTab from \"./RSS/RSSTab\";\nimport RSSBoard from \"./RSS/RSSBoard\";\nimport RSSExplore from \"./RSS/RSSExplore\";\nimport FunctionTab from \"./SideTab/FunctionTab\";\n//React.Memo\n//state prop dispatch history\n\nfunction App() {\n  return (\n    <Router>\n      <div\n        className=\"App\"\n        onClick={() => {\n          console.log(\"you click\");\n        }}\n      >\n        <MyRouter />\n        <Switch>\n          <Route path=\"/signup\" component={Signup}></Route>\n          <Route path=\"/signin\" component={Signin}></Route>\n          <Route path=\"/board\">\n            <div className=\"content\">\n              <FunctionTab />\n              <FolderTab />\n              <Board />\n            </div>\n          </Route>\n          <Route path=\"/article\" component={Article}></Route>\n          <Route path=\"/graph\">\n            <div className=\"content\">\n              <FunctionTab />\n              <Board />\n              <Graph />\n            </div>\n          </Route>\n          <Route path=\"/rss\">\n            <div className=\"content\">\n              <FunctionTab />\n              <RSSTab />\n              <RSSBoard />\n            </div>\n          </Route>\n          <Route path=\"/rssexplore\">\n            <div className=\"content\">\n              <FunctionTab />\n              <RSSTab />\n              <RSSExplore />\n            </div>\n          </Route>\n          <h1 className=\"title\">Welcome to Taggy</h1>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["172","173"],"/Users/kevinzhang/Documents/Taggy/client/app/src/hooks/useD3.js",["174","175"],"import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    console.log(ref.current);\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n",["176","177"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Board.jsx",["178","179","180"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/MD.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSHeader.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Header/Header.jsx",["181"],"import React from \"react\";\n\nimport AddArticle from \"../AddArticle\";\n\nimport styles from \"./Header.module.css\";\n\nexport default function Header(props) {\n  return <header className={styles.header}></header>;\n}\n",["182","183"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/FindRSS.jsx",["184","185"],"/Users/kevinzhang/Documents/Taggy/client/app/src/firebase.js",[],["186","187"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FolderTab.jsx",["188","189","190","191","192"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/Folder.jsx",["193"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./FolderTab.module.css\";\nimport { SWITCHARTICLE } from \"../../redux/actions\";\nexport default function Folder(props) {\n  const [tabs, setTabs] = useState([]);\n  const dispatch = useDispatch();\n  let user = props.user;\n  useEffect(() => {\n    function getMemberFolderTags() {\n      if (user) {\n        app.getMemberFolderTags(props.folderId).then((folderTags) => {\n          setTabs(folderTags);\n        });\n      }\n    }\n    getMemberFolderTags();\n  }, [user]);\n\n  function showTabTreeList(tabs) {\n    let tabList = [];\n    if (tabs.length > 0) {\n      for (let i in tabs) {\n        tabList.push(\n          <TreeItem\n            key={tabs[i].id}\n            nodeId={tabs[i].id}\n            label={\n              <div className={styles.labelWrapper}>\n                <BookmarkIcon style={{ fontSize: 20, color: \"#5B5B5B\" }} />\n                <div className={styles.labelTitle}>{tabs[i].label}</div>\n              </div>\n            }\n            onClick={() => {\n              console.log(tabs[i].id);\n              dispatch(SWITCHARTICLE(tabs[i].id));\n            }}\n          />\n        );\n      }\n    }\n    return tabList;\n  }\n  const tabList = showTabTreeList(tabs);\n  return <div>{tabList}</div>;\n}\n",["194","195"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Article/Aritcle.jsx",["196","197","198","199"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSBoard.jsx",["200","201","202","203","204","205"],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/actions/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/index.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/RSS_Reducer.jsx",["206"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst RSS_Reducer = (state = { feed: {}, ChannelRSSId: \"all\" }, action) => {\n  switch (action.type) {\n    case \"GETRSSRESPONSE\":\n      return {\n        ...state,\n        feed: action.feed,\n        url: action.url,\n      };\n\n    case \"SWITCHRSS\":\n      return {\n        ...state,\n        ChannelRSSId: action.ChannelRSSId,\n      };\n    case \"INITUSERRSSLIST\":\n      return {\n        ...state,\n        UserRSSList: action.RSSList,\n      };\n    case \"SETUSERALLFEEDS\":\n      return {\n        ...state,\n        userAllFeeds: [...state.userAllFeeds, action.userAllFeeds],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default RSS_Reducer;\n",["207","208"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSCard.jsx",["209"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Card.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/CardWrapper.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/Member/Signup.jsx",["210","211"],"import React, { useState } from \"react\";\nimport \"../../css/App.css\";\nimport styles from \"../../css/SignUp.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { auth } from \"../../firebase.js\";\nimport firebase from \"firebase/app\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nexport default function Signup() {\n  const uiConfig = {\n    callbacks: {\n      signInSuccess: async function (authResult, redirectUrl) {\n        console.log(authResult.uid);\n        console.log(redirectUrl);\n        await db\n          .collection(\"Member\")\n          .doc(authResult.uid)\n          .set({\n            uid: authResult.uid,\n            email: authResult.email,\n            displaynamename: authResult.displayName,\n          })\n\n          .then(() => console.log(\"Add user to db successfully\"))\n          .then(history.push(\"board\"))\n          .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n          });\n      },\n    },\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  };\n  const history = useHistory();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  function firebaseSignUp(name, email, password) {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user.user);\n        db.collection(\"Member\").doc(user.user.uid).set({\n          displaynamename: name,\n          email: email,\n          password: password,\n          uid: user.user.uid,\n        });\n      })\n      .then(() => {\n        var user = auth.currentUser;\n        user\n          .updateProfile({\n            displayName: name,\n          })\n          .then(() => console.log(\"update user name successfully\"));\n      })\n      .then(history.push(\"/board\"))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.block}>\n        <h2 className={styles.title}>Sign Up</h2>\n        <form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            firebaseSignUp(name, email, password);\n          }}\n        >\n          <div className={styles.inputbox}>\n            <label htmlFor=\"username\">User Name</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={name}\n              onChange={(e) => {\n                setName(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <div className={styles.inputbox}>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              type=\"password\"\n              name=\"passowrd\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </div>\n          <button>Sign Up</button>\n        </form>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        <div className={styles.login}>\n          <span>Already have an account? </span>\n          <Link to={\"/Signin\"}>Sign in</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/redux/reducers/article_Reducer.jsx",["212"],"//reducer\nimport { nanoid } from \"nanoid\";\n\nconst article_Reducer = (\n  state = {\n    tagSelected: \"all\",\n    articleList: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    // case \"DeleteTask\":\n    //   let remaintasks = state.tasks.filter((task) => task.id != action.id);\n\n    //   return { tasks: remaintasks };\n    case \"INITARTICLE\":\n      return {\n        ...state,\n\n        articleList: action.articleList,\n      };\n    case \"SWITCHARTICLE\":\n      return {\n        ...state,\n\n        tagSelected: action.tagSelected,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default article_Reducer;\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSTab.jsx",["213","214","215"],"import { useEffect, useState } from \"react\";\nimport styles from \"../SideTab/FolderTab.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useSelector } from \"react-redux\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { Link } from \"react-router-dom\";\nimport MarkunreadIcon from \"@material-ui/icons/Markunread\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport { SWITCHRSS } from \"../../redux/actions\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport { db } from \"../../firebase.js\";\nimport { INITUSERRSSLIST } from \"../../redux/actions\";\nimport RSSFolder from \"./RSSFolder\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"#B5B5B5\",\n    flexGrow: 10,\n    maxWidth: 220,\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function RSSTab() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [RSSFolders, setRSSFolders] = useState([]);\n\n  function getUserRSSList(uid) {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        dispatch(INITUSERRSSLIST(doc.data().subscribedRSS));\n      });\n  }\n\n  const user = useSelector((state) => {\n    return state.memberReducer.user;\n  });\n  const userRSSList = useSelector((state) => {\n    return state.RSSReducer.UserRSSList;\n  });\n  useEffect(() => {}, [userRSSList]);\n  useEffect(() => {\n    function getRSSFolders() {\n      if (user) {\n        app\n          .getMemberRSSFolders(user.uid)\n          .then((RSSFolders) => {\n            setRSSFolders(RSSFolders);\n            return RSSFolders;\n          })\n          .then((RSSFolders) => {\n            RSSFolders.forEach(async (folder) => {\n              if (folder.RSSIds) {\n                await folder.RSSIds.forEach(async (RSSId) => {\n                  let RSS = await app.getRSSInfo(RSSId);\n                  folder.RSS.push(RSS);\n                });\n              }\n\n              return folder;\n            });\n\n            setRSSFolders(RSSFolders);\n          });\n      }\n    }\n    if (user) {\n      getUserRSSList(user.uid);\n    }\n    getRSSFolders();\n  }, [user]);\n\n  function showRSSFolders(folders) {\n    let RSSFolderList = [];\n    if (folders.length > 0) {\n      for (let i in folders) {\n        RSSFolderList.push(\n          <TreeItem\n            key={folders[i].id}\n            nodeId={folders[i].id}\n            label={\n              <div className={styles.labelWrapper}>\n                <FolderOpenIcon style={{ fontSize: 20 }} />\n                <div className={styles.labelTitle}>{folders[i].name}</div>\n              </div>\n            }\n            onClick={() => {}}\n          >\n            <RSSFolder\n              user={user}\n              folderId={folders[i].id}\n              folderRSS={folders[i].RSS}\n            />\n          </TreeItem>\n        );\n      }\n    }\n    return RSSFolderList;\n  }\n\n  const articleFolderList = showRSSFolders(RSSFolders);\n\n  return (\n    <div className={styles.folderTabWrapper}>\n      <div className={styles.folderTab}>\n        <Link to={\"/rss\"}>\n          <div className={styles.sectionTitle}>RSS</div>\n          <TreeView\n            className={classes.root}\n            defaultExpanded={[\"\"]}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            <TreeItem\n              nodeId=\"tagAll\"\n              label={\n                <div className={styles.labelWrapper}>\n                  <div className={styles.labelTitle}>All Feeds</div>\n                </div>\n              }\n              onClick={() => {\n                dispatch(SWITCHRSS(\"all\"));\n              }}\n            ></TreeItem>\n\n            {articleFolderList}\n          </TreeView>\n        </Link>\n        <Link to={\"/rssexplore\"}>\n          <div className={styles.subTitle}>AddRSS</div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSFolder.jsx",["216","217","218","219","220"],"import { useEffect, useState } from \"react\";\n\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { app } from \"../../lib/lib.js\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"../SideTab/FolderTab.module.css\";\n\nimport { SWITCHRSS } from \"../../redux/actions\";\nexport default function RSSFolder(props) {\n  const [RSS, setRSS] = useState([]);\n  const dispatch = useDispatch();\n  let user = props.user;\n  //   useEffect(() => {\n  //     function getMemberFolderTags() {\n  //       if (user) {\n  //         app.getMemberFolderTags(props.folderId).then((folderTags) => {\n  //           setRSS(folderTags);\n  //         });\n  //       }\n  //     }\n  //     getMemberFolderTags();\n  //   }, [user]);\n\n  function showRSSItem(RSS) {\n    let RSSList = [];\n    if (RSS.length > 0) {\n      for (let i in RSS) {\n        RSSList.push(\n          <TreeItem\n            key={RSS[i].id}\n            nodeId={RSS[i].id}\n            label={\n              <div className={styles.labelWrapper}>\n                <BookmarkIcon style={{ fontSize: 20 }} />\n                <div className={styles.labelTitle}>{RSS[i].title}</div>\n              </div>\n            }\n            onClick={() => {\n              console.log(RSS[i].id);\n              dispatch(SWITCHRSS(RSS[i].id));\n              //   dispatch(SWITCHARTICLE(tabs[i].id));\n            }}\n          />\n        );\n      }\n    }\n    return RSSList;\n  }\n  const RSSList = showRSSItem(props.folderRSS);\n  return <div>{RSSList}</div>;\n}\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSPage.jsx",["221","222","223","224","225","226"],"/Users/kevinzhang/Documents/Taggy/client/app/src/index.js",["227"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(allReducers, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/RSS/RSSExplore.jsx",["228"],"/Users/kevinzhang/Documents/Taggy/client/app/src/component/SideTab/FunctionTab.jsx",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/config.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/reportWebVitals.js",[],["229","230"],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/lib.js",["231","232"],"import { resolve } from \"path\";\nimport firebase from \"firebase/app\";\nimport { db, FieldValue } from \"../firebase.js\";\n\nexport const app = {};\napp.getMemberArticleFolders = function (uid) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          let articleFolderIds = doc.data().articleFolders;\n          let articleFolders = [];\n          console.log(articleFolderIds);\n          if (articleFolderIds !== \"\" && articleFolderIds) {\n            for (let i in articleFolderIds) {\n              console.log(articleFolderIds[i]);\n              await db\n                .collection(\"articleFolders\")\n                .doc(articleFolderIds[i])\n                .get()\n                .then((doc) => {\n                  articleFolders.push({\n                    id: doc.data().id,\n                    name: doc.data().name,\n                    tags: doc.data().tags,\n                  });\n                });\n            }\n          }\n          resolve(articleFolders);\n        } else resolve(\"dont have this user\");\n      });\n  });\n};\napp.getMemberFolderTags = function (folderId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"articleFolders\")\n      .doc(folderId)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          let tagIds = doc.data().tags;\n          let folderTags = [];\n          console.log(tagIds);\n          if (tagIds !== \"\" && tagIds) {\n            for (let i in tagIds) {\n              console.log(tagIds[i]);\n              await db\n                .collection(\"Tags\")\n                .doc(tagIds[i])\n                .get()\n                .then((doc) => {\n                  folderTags.push({\n                    id: tagIds[i],\n                    value: doc.data().name,\n                    label: doc.data().name,\n                  });\n                });\n            }\n          }\n          resolve(folderTags);\n        } else resolve(\"\");\n      });\n  });\n};\n\napp.getArticleTags = function (articleId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Articles\")\n      .doc(articleId)\n      .get()\n      .then((doc) => {\n        let tags = doc.data().tags;\n\n        let articleTags = [];\n        if (tags) {\n          for (let i in tags) {\n            db.collection(\"Tags\")\n              .doc(tags[i])\n              .get()\n              .then((doc) => {\n                console.log(doc.data());\n                articleTags.push({\n                  tagId: tags[i],\n                  label: doc.data().name,\n                  value: doc.data().name,\n                });\n              });\n            resolve(articleTags);\n          }\n        } else {\n          resolve(\"\");\n        }\n      });\n  });\n};\n\napp.getMemberTags = function (uid) {\n  return new Promise((resolve, reject) => {\n    console.log(uid);\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        console.log(doc.data());\n        if (doc.data()) {\n          let tagIds = doc.data().tags;\n          let memberTags = [];\n          console.log(tagIds);\n          if (tagIds !== \"\" && tagIds) {\n            for (let i in tagIds) {\n              console.log(tagIds[i]);\n              await db\n                .collection(\"Tags\")\n                .doc(tagIds[i])\n                .get()\n                .then((doc) => {\n                  memberTags.push({\n                    id: tagIds[i],\n                    value: doc.data().name,\n                    label: doc.data().name,\n                  });\n                });\n            }\n          }\n          console.log(memberTags);\n          console.log(\"1\");\n          resolve(memberTags);\n        } else resolve(\"\");\n      });\n  });\n};\n\napp.initArticleTags = async function (articleId, uid) {\n  let articleTagSelection = {};\n  await app.getArticleTags(articleId).then((articleTags) => {\n    articleTagSelection.values = articleTags;\n  });\n  await app.getMemberTags(uid).then((memberTags) => {\n    articleTagSelection.options = memberTags;\n  });\n  console.log(articleTagSelection);\n  return articleTagSelection;\n};\n\napp.checkTagUnderUser = function (name, uid) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        console.log(uid);\n        if (doc.data()) {\n          let tags = doc.data().tags;\n          console.log(tags);\n          if (tags) {\n            for (let i in tags) {\n              await db\n                .collection(\"Tags\")\n                .doc(tags[i])\n                .get()\n                .then((doc) => {\n                  if (doc.data().name === name) {\n                    console.log(doc.data().name);\n                    console.log(\"resolve the id\");\n                    resolve(doc.data().id);\n                  }\n                });\n            }\n            resolve(\"notExist\");\n          } else {\n            resolve(\"noanytag\");\n          }\n        } else {\n          resolve(\"nothisuser\");\n        }\n      });\n  });\n};\napp.inputTag = function (articleId, uid, tagName) {\n  console.log(uid);\n  app.checkTagUnderUser(tagName, uid).then((tagId) => {\n    console.log(tagId);\n    if (tagId === \"noanytag\") {\n      db.collection(\"Tags\")\n        .add({\n          name: tagName,\n          articles: [articleId],\n        })\n        .then(function (docRef) {\n          console.log(\"Document written with ID: \", docRef.id);\n\n          docRef.update({ id: docRef.id });\n          return docRef.id;\n        })\n        .then((tagId) => {\n          db.collection(\"Articles\")\n            .doc(articleId)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n          return tagId;\n        })\n        .then((tagId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({ tags: [tagId] });\n          return tagId;\n        })\n        .then((tagId) => {\n          db.collection(\"articleFolders\")\n            .doc(\"un\" + uid)\n            .set({\n              id: \"un\" + uid,\n              name: \"Uncategorized\",\n              tags: firebase.firestore.FieldValue.arrayUnion(tagId),\n            })\n            .then(() => {\n              db.collection(\"Member\")\n                .doc(uid)\n                .update({\n                  articleFolders: firebase.firestore.FieldValue.arrayUnion(\n                    \"un\" + uid\n                  ),\n                });\n            });\n        })\n        .catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n    } else if (tagId === \"notExist\") {\n      console.log(\"user dont have this tag, CREAT AND ADD to ARTICLE\");\n      db.collection(\"Tags\")\n        .add({\n          name: tagName,\n          articles: [articleId],\n        })\n        .then(function (docRef) {\n          console.log(\"Document written with ID: \", docRef.id);\n\n          docRef.update({ id: docRef.id });\n          return docRef.id;\n        })\n        .then((tagId) => {\n          db.collection(\"Articles\")\n            .doc(articleId)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n          return tagId;\n        })\n        .then((tagId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n          return tagId;\n        })\n        .then((tagId) => {\n          console.log(\"tag add to :\", \"un\" + uid, \"value is\", tagId);\n          db.collection(\"articleFolders\")\n            .doc(\"un\" + uid)\n            .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n        })\n\n        .catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n    } else {\n      console.log(\"user already has this tag, ADD ATICLE\");\n      db.collection(\"Tags\")\n        .doc(tagId)\n        .update({\n          articles: firebase.firestore.FieldValue.arrayUnion(articleId),\n        });\n      db.collection(\"Articles\")\n        .doc(articleId)\n        .update({ tags: firebase.firestore.FieldValue.arrayUnion(tagId) });\n    }\n  });\n};\napp.deleteTagFromArticle = function (articleId, uid, tagId) {\n  db.collection(\"Articles\")\n    .doc(articleId)\n    .update({ tags: firebase.firestore.FieldValue.arrayRemove(tagId) });\n};\n\napp.checkRSSInFetchList = function (url) {\n  return new Promise((resolve, reject) => {\n    console.log(url);\n    db.collection(\"RSSFetchList\")\n      .where(\"url\", \"==\", url)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.empty) {\n          console.log(\"not in fetch list\");\n          resolve(false);\n        } else {\n          snapshot.forEach((doc) => {\n            if (doc.data()) {\n              console.log(\"already id fetch list, the id is:\");\n              resolve(doc.data().id);\n            } else {\n              console.log(\"sth pretty weird happened\");\n            }\n          });\n        }\n      });\n  });\n};\napp.addRSSToFetchList = function (feed, url) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"RSSFetchList\")\n      .add({\n        title: feed.title || \"null\",\n        url: url || \"null\",\n        link: feed.link || \"null\",\n        description: feed.description || \"null\",\n        img: (feed.image || {}).url || \"null\",\n        lastUpdate: feed.lastBuildDate || \"null\",\n      })\n      .then((docRef) => {\n        docRef.update({ id: docRef.id });\n        return docRef.id;\n      })\n      .then((id) => resolve(id));\n  });\n};\napp.checkUserHasUncaFolder = function (uid) {\n  return new Promise((resolve, reject) => {\n    console.log(uid);\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        if (doc.data().RSSFolders.includes(\"unCa_\" + uid)) {\n          resolve(true);\n        } else resolve(false);\n      });\n  });\n};\n\napp.addRSSToMember = function (uid, feedId) {\n  return new Promise(async (resolve, reject) => {\n    if (!(await app.checkUserHasUncaFolder(uid))) {\n      console.log(\"user dont have unCat folder, create and as RSS to it \");\n      db.collection(\"RSSFolders\")\n        .doc(\"unCa_\" + uid)\n        .set({\n          uid: uid,\n          name: \"Uncategorized\",\n          RSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n          id: \"unCa_\" + uid,\n        })\n        .then((folderId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({\n              subscribedRSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n              RSSFolders: firebase.firestore.FieldValue.arrayUnion(\n                \"unCa_\" + uid\n              ),\n            })\n            .then(console.log(\"successfully add to user\"));\n        });\n    } else {\n      console.log(\"user already has unCat folder, as RSS to it \");\n      db.collection(\"RSSFolders\")\n        .doc(\"unCa_\" + uid)\n        .update({\n          RSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n        })\n        .then((folderId) => {\n          db.collection(\"Member\")\n            .doc(uid)\n            .update({\n              subscribedRSS: firebase.firestore.FieldValue.arrayUnion(feedId),\n            })\n            .then(console.log(\"successfully add to user\"));\n        });\n    }\n  });\n};\n\napp.subscribeRSS = async function (uid, title, url, feed) {\n  console.log(\"add to \", uid, title, url);\n  app.checkRSSInFetchList(url).then((RSSId) => {\n    if (RSSId) {\n      console.log(\"RSS already in Fetch List\");\n      app.addRSSToMember(uid, RSSId);\n    } else {\n      console.log(\"Add RSS to fetch List\");\n      app.addRSSToFetchList(feed, url).then((RSSId) => {\n        console.log(\"add RSS to member\");\n        app.addRSSToMember(uid, RSSId);\n        console.log(\"Add feed to RSSItem\");\n        app.addRSSItem(feed, RSSId);\n      });\n    }\n  });\n};\napp.checkRSSItem = function (title, item) {\n  return db\n    .collection(\"RSSItem\")\n    .where(\"title\", \"==\", title)\n    .get()\n    .then((snapShot) => {\n      let titleList = [];\n      snapShot.forEach((doc) => {\n        titleList.push(doc.data().itemTitle);\n      });\n      console.log(titleList);\n      console.log(item.title);\n      console.log(titleList.includes(item.title));\n      if (titleList.includes(item.title)) {\n        console.log(\"already in db\");\n        return false;\n      } else console.log(\"check and not in db \");\n      return true;\n    });\n};\napp.addRSSItem = function (feed, RSSId) {\n  for (let i in feed.items) {\n    app.checkRSSItem(feed.title, feed.items[i]).then((evaluate) => {\n      console.log(evaluate);\n      if (evaluate) {\n        console.log(\"this feed not in db, let's save it \");\n        db.collection(\"RSSItem\")\n          .add({\n            RSSId: RSSId,\n            content: feed.items[i].content || \"null\",\n            contentSnippet: feed.items[i].contentSnippet || \"null\",\n            RSS: feed.title || \"null\",\n            title: feed.items[i].title || \"null\",\n            creator: feed.items[i].creator || \"null\",\n            guid: feed.items[i].guid || \"null\",\n            isoDate: feed.items[i].isoDate || \"null\",\n            link: feed.items[i].link || \"null\",\n            pubDate: feed.items[i].pubDate || \"null\",\n            author: feed.items[i].author || \"null\",\n          })\n          .then((docRef) => docRef.update({ id: docRef.id }))\n          .then(console.log(\"store successfully!\"));\n      } else {\n        console.log(\"already store this feed, let's skip\");\n      }\n    });\n  }\n};\napp.getMemberRSSFolders = function (uid) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"Member\")\n      .doc(uid)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          let RSSFolderIds = doc.data().RSSFolders;\n          let RSSFolders = [];\n          console.log(RSSFolderIds);\n          if (RSSFolderIds !== \"\" && RSSFolderIds) {\n            for (let i in RSSFolderIds) {\n              console.log(RSSFolderIds[i]);\n              await db\n                .collection(\"RSSFolders\")\n                .doc(RSSFolderIds[i])\n                .get()\n                .then((doc) => {\n                  RSSFolders.push({\n                    id: doc.data().id,\n                    name: doc.data().name,\n                    RSSIds: doc.data().RSS,\n                    RSS: [],\n                  });\n                });\n            }\n          }\n          resolve(RSSFolders);\n        } else resolve(\"dont have this user\");\n      });\n  });\n};\napp.getRSSInfo = function (RSSId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"RSSFetchList\")\n      .doc(RSSId)\n      .get()\n      .then(async (doc) => {\n        if (doc.data()) {\n          resolve({\n            id: doc.data().id,\n            title: doc.data().title,\n            url: doc.data().url,\n          });\n        }\n      });\n  });\n};\napp.getChannelFeeds = function (RSSId) {\n  return new Promise((resolve, reject) => {\n    let items = [];\n    db.collection(\"RSSItem\")\n      .where(\"RSSId\", \"==\", RSSId)\n      // .orderBy(\"isoDate\", \"desc\")\n      .get()\n      .then((snapShot) => {\n        snapShot.forEach((doc) => {\n          items.push({\n            RSSId: doc.data().RSSId,\n            content: doc.data().content,\n            contentSnippet: doc.data().contentSnippet,\n            RSS: doc.data().RSS,\n            title: doc.data().title,\n            creator: doc.data().creator,\n            guid: doc.data().guid,\n            isoDate: doc.data().isoDate,\n            link: doc.data().link,\n            pubDate: doc.data().pubDate,\n            author: doc.data().author,\n          });\n        });\n        resolve(items);\n      });\n  });\n};\napp.getFeedContent = function (feedId) {\n  return new Promise((resolve, reject) => {\n    db.collection(\"RSSItem\")\n      .doc(feedId)\n      .get()\n      .then((doc) => {\n        resolve({\n          RSSId: doc.data().RSSId,\n          content: doc.data().content,\n          contentSnippet: doc.data().contentSnippet,\n          RSS: doc.data().RSS,\n          title: doc.data().tilte,\n          creator: doc.data().creator,\n          guid: doc.data().guid,\n          isoDate: doc.data().isoDate,\n          link: doc.data().link,\n          pubDate: doc.data().pubDate,\n          author: doc.data().author,\n        });\n      });\n  });\n};\n\napp.getAllUserFeeds = function (uid) {};\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/Graph/Graph1.jsx",["233","234","235","236"],"/Users/kevinzhang/Documents/Taggy/client/app/src/data2.js",[],"/Users/kevinzhang/Documents/Taggy/client/app/src/lib/gragh_lib.js",["237"],"import { resolve } from \"path\";\nimport { app } from \"./lib.js\";\napp.getGraphData = function (uid) {\n  return new Promise(async (resolve) => {\n    let memberTags = await app.getMemberTags(uid);\n    console.log(\"2\");\n    resolve(memberTags);\n  });\n};\n\napp.initGraphData = function (uid) {\n  return new Promise((resolve) => {\n    app\n      .getGraphData(uid)\n      .then((memberTags) => {\n        console.log(memberTags);\n        let nodes = [];\n        memberTags.forEach((tag) => {\n          nodes.push({\n            id: tag.value,\n            tagId: tag.id,\n          });\n        });\n        return nodes;\n      })\n      .then((nodes) => {\n        resolve({\n          nodes: nodes,\n          links: [],\n        });\n      });\n  });\n};\n\nexport { app };\n","/Users/kevinzhang/Documents/Taggy/client/app/src/component/AddArticle.jsx",["238"],{"ruleId":"239","severity":1,"message":"240","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":17},{"ruleId":"239","severity":1,"message":"243","line":5,"column":23,"nodeType":"241","messageId":"242","endLine":5,"endColumn":34},{"ruleId":"239","severity":1,"message":"244","line":7,"column":27,"nodeType":"241","messageId":"242","endLine":7,"endColumn":33},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"239","severity":1,"message":"249","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":19},{"ruleId":"239","severity":1,"message":"250","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"251","line":5,"column":8,"nodeType":"241","messageId":"242","endLine":5,"endColumn":14},{"ruleId":"239","severity":1,"message":"252","line":12,"column":8,"nodeType":"241","messageId":"242","endLine":12,"endColumn":17},{"ruleId":"245","replacedBy":"253"},{"ruleId":"247","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":11,"column":6,"nodeType":"241","endLine":11,"endColumn":18},{"ruleId":"255","severity":1,"message":"257","line":11,"column":6,"nodeType":"241","endLine":11,"endColumn":18,"suggestions":"258"},{"ruleId":"245","replacedBy":"259"},{"ruleId":"247","replacedBy":"260"},{"ruleId":"239","severity":1,"message":"261","line":1,"column":28,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"262","line":5,"column":8,"nodeType":"241","messageId":"242","endLine":5,"endColumn":16},{"ruleId":"255","severity":1,"message":"263","line":36,"column":6,"nodeType":"264","endLine":36,"endColumn":12,"suggestions":"265"},{"ruleId":"239","severity":1,"message":"266","line":3,"column":8,"nodeType":"241","messageId":"242","endLine":3,"endColumn":18},{"ruleId":"245","replacedBy":"267"},{"ruleId":"247","replacedBy":"268"},{"ruleId":"239","severity":1,"message":"269","line":3,"column":10,"nodeType":"241","messageId":"242","endLine":3,"endColumn":18},{"ruleId":"239","severity":1,"message":"270","line":3,"column":20,"nodeType":"241","messageId":"242","endLine":3,"endColumn":26},{"ruleId":"245","replacedBy":"271"},{"ruleId":"247","replacedBy":"272"},{"ruleId":"239","severity":1,"message":"273","line":12,"column":8,"nodeType":"241","messageId":"242","endLine":12,"endColumn":20},{"ruleId":"239","severity":1,"message":"274","line":17,"column":8,"nodeType":"241","messageId":"242","endLine":17,"endColumn":14},{"ruleId":"239","severity":1,"message":"275","line":33,"column":10,"nodeType":"241","messageId":"242","endLine":33,"endColumn":14},{"ruleId":"239","severity":1,"message":"276","line":33,"column":16,"nodeType":"241","messageId":"242","endLine":33,"endColumn":23},{"ruleId":"239","severity":1,"message":"277","line":76,"column":12,"nodeType":"241","messageId":"242","endLine":76,"endColumn":27},{"ruleId":"255","severity":1,"message":"278","line":22,"column":6,"nodeType":"264","endLine":22,"endColumn":12,"suggestions":"279"},{"ruleId":"245","replacedBy":"280"},{"ruleId":"247","replacedBy":"281"},{"ruleId":"239","severity":1,"message":"282","line":1,"column":23,"nodeType":"241","messageId":"242","endLine":1,"endColumn":33},{"ruleId":"239","severity":1,"message":"283","line":5,"column":14,"nodeType":"241","messageId":"242","endLine":5,"endColumn":37},{"ruleId":"255","severity":1,"message":"284","line":33,"column":6,"nodeType":"264","endLine":33,"endColumn":12,"suggestions":"285"},{"ruleId":"255","severity":1,"message":"284","line":81,"column":6,"nodeType":"264","endLine":81,"endColumn":8,"suggestions":"286"},{"ruleId":"239","severity":1,"message":"287","line":6,"column":10,"nodeType":"241","messageId":"242","endLine":6,"endColumn":21},{"ruleId":"239","severity":1,"message":"288","line":18,"column":9,"nodeType":"241","messageId":"242","endLine":18,"endColumn":26},{"ruleId":"239","severity":1,"message":"289","line":19,"column":9,"nodeType":"241","messageId":"242","endLine":19,"endColumn":17},{"ruleId":"239","severity":1,"message":"290","line":100,"column":9,"nodeType":"241","messageId":"242","endLine":100,"endColumn":13},{"ruleId":"255","severity":1,"message":"291","line":145,"column":6,"nodeType":"264","endLine":145,"endColumn":32,"suggestions":"292"},{"ruleId":"255","severity":1,"message":"293","line":148,"column":6,"nodeType":"264","endLine":148,"endColumn":20,"suggestions":"294"},{"ruleId":"239","severity":1,"message":"295","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":16},{"ruleId":"245","replacedBy":"296"},{"ruleId":"247","replacedBy":"297"},{"ruleId":"239","severity":1,"message":"298","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"299","line":28,"column":17,"nodeType":"241","messageId":"242","endLine":28,"endColumn":26},{"ruleId":"239","severity":1,"message":"299","line":67,"column":13,"nodeType":"241","messageId":"242","endLine":67,"endColumn":22},{"ruleId":"239","severity":1,"message":"295","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":16},{"ruleId":"239","severity":1,"message":"300","line":10,"column":8,"nodeType":"241","messageId":"242","endLine":10,"endColumn":22},{"ruleId":"239","severity":1,"message":"273","line":11,"column":8,"nodeType":"241","messageId":"242","endLine":11,"endColumn":20},{"ruleId":"255","severity":1,"message":"301","line":79,"column":6,"nodeType":"264","endLine":79,"endColumn":12,"suggestions":"302"},{"ruleId":"239","severity":1,"message":"249","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":19},{"ruleId":"239","severity":1,"message":"303","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":13},{"ruleId":"239","severity":1,"message":"304","line":11,"column":10,"nodeType":"241","messageId":"242","endLine":11,"endColumn":13},{"ruleId":"239","severity":1,"message":"305","line":11,"column":15,"nodeType":"241","messageId":"242","endLine":11,"endColumn":21},{"ruleId":"239","severity":1,"message":"290","line":13,"column":7,"nodeType":"241","messageId":"242","endLine":13,"endColumn":11},{"ruleId":"239","severity":1,"message":"282","line":1,"column":23,"nodeType":"241","messageId":"242","endLine":1,"endColumn":33},{"ruleId":"239","severity":1,"message":"298","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":14},{"ruleId":"239","severity":1,"message":"306","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":12},{"ruleId":"239","severity":1,"message":"303","line":8,"column":10,"nodeType":"241","messageId":"242","endLine":8,"endColumn":13},{"ruleId":"239","severity":1,"message":"307","line":17,"column":7,"nodeType":"241","messageId":"242","endLine":17,"endColumn":13},{"ruleId":"239","severity":1,"message":"290","line":19,"column":7,"nodeType":"241","messageId":"242","endLine":19,"endColumn":11},{"ruleId":"239","severity":1,"message":"308","line":6,"column":23,"nodeType":"241","messageId":"242","endLine":6,"endColumn":38},{"ruleId":"255","severity":1,"message":"263","line":105,"column":6,"nodeType":"264","endLine":105,"endColumn":12,"suggestions":"309"},{"ruleId":"245","replacedBy":"310"},{"ruleId":"247","replacedBy":"311"},{"ruleId":"239","severity":1,"message":"312","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":17},{"ruleId":"239","severity":1,"message":"313","line":3,"column":14,"nodeType":"241","messageId":"242","endLine":3,"endColumn":24},{"ruleId":"239","severity":1,"message":"314","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":17},{"ruleId":"239","severity":1,"message":"315","line":3,"column":10,"nodeType":"241","messageId":"242","endLine":3,"endColumn":18},{"ruleId":"239","severity":1,"message":"316","line":17,"column":12,"nodeType":"241","messageId":"242","endLine":17,"endColumn":17},{"ruleId":"239","severity":1,"message":"317","line":48,"column":11,"nodeType":"241","messageId":"242","endLine":48,"endColumn":13},{"ruleId":"239","severity":1,"message":"312","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":17},{"ruleId":"239","severity":1,"message":"270","line":3,"column":20,"nodeType":"241","messageId":"242","endLine":3,"endColumn":26},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Router' is defined but never used.","no-native-reassign",["318"],"no-negated-in-lhs",["319"],"'useEffect' is defined but never used.","'auth' is defined but never used.","'Header' is defined but never used.","'RSSHeader' is defined but never used.",["318"],["319"],"react-hooks/exhaustive-deps","React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],["318"],["319"],"'useState' is defined but never used.","'dispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["321"],"'AddArticle' is defined but never used.",["318"],["319"],"'localUrl' is defined but never used.","'ec2Url' is defined but never used.",["318"],["319"],"'BookmarkIcon' is defined but never used.","'RSSTab' is defined but never used.","'tabs' is assigned a value but never used.","'setTabs' is assigned a value but never used.","'showTabTreeList' is defined but never used.","React Hook useEffect has a missing dependency: 'props.folderId'. Either include it or remove the dependency array.",["322"],["318"],["319"],"'useHistory' is defined but never used.","'CheckFirebaseUserStatus' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["323"],["324"],"'INITARTICLE' is defined but never used.","'lastVisibleNumber' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'batchFetchAllFeeds'. Either include it or remove the dependency array.",["325"],"React Hook useEffect has a missing dependency: 'fetchChannelFeed'. Either include it or remove the dependency array.",["326"],"'nanoid' is defined but never used.",["318"],["319"],"'Link' is defined but never used.","'errorCode' is assigned a value but never used.","'MarkunreadIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserRSSList'. Either include it or remove the dependency array.",["327"],"'app' is defined but never used.","'RSS' is assigned a value but never used.","'setRSS' is assigned a value but never used.","'db' is defined but never used.","'params' is assigned a value but never used.","'applyMiddleware' is defined but never used.",["328"],["318"],["319"],"'resolve' is defined but never used.","'FieldValue' is defined but never used.","'dataSet' is defined but never used.","'dataSet2' is defined but never used.","'color' is defined but never used.","'id' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"331","fix":"345"},"Update the dependencies array to be: [renderChartFn]",{"range":"346","text":"347"},"Update the dependencies array to be: [dispatch, user]",{"range":"348","text":"349"},"Update the dependencies array to be: [props.folderId, user]",{"range":"350","text":"351"},"Update the dependencies array to be: [id, user]",{"range":"352","text":"353"},"Update the dependencies array to be: [id]",{"range":"354","text":"355"},"Update the dependencies array to be: [userRSSList, lastVisible, batchFetchAllFeeds]",{"range":"356","text":"357"},"Update the dependencies array to be: [ChannelRSSId, fetchChannelFeed]",{"range":"358","text":"359"},"Update the dependencies array to be: [getUserRSSList, user]",{"range":"360","text":"361"},{"range":"362","text":"349"},[266,278],"[renderChartFn]",[1130,1136],"[dispatch, user]",[707,713],"[props.folderId, user]",[1156,1162],"[id, user]",[2572,2574],"[id]",[4186,4212],"[userRSSList, lastVisible, batchFetchAllFeeds]",[4264,4278],"[ChannelRSSId, fetchChannelFeed]",[2340,2346],"[getUserRSSList, user]",[2880,2886]]